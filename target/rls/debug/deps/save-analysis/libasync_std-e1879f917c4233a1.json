{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0","program":"/Users/aidanm/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","async_std","--edition=2018","/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"async-task\"","--cfg","feature=\"crossbeam-channel\"","--cfg","feature=\"crossbeam-deque\"","--cfg","feature=\"crossbeam-utils\"","--cfg","feature=\"default\"","--cfg","feature=\"futures-core\"","--cfg","feature=\"futures-io\"","--cfg","feature=\"futures-timer\"","--cfg","feature=\"kv-log-macro\"","--cfg","feature=\"log\"","--cfg","feature=\"memchr\"","--cfg","feature=\"mio\"","--cfg","feature=\"mio-uds\"","--cfg","feature=\"num_cpus\"","--cfg","feature=\"once_cell\"","--cfg","feature=\"pin-project-lite\"","--cfg","feature=\"pin-utils\"","--cfg","feature=\"slab\"","--cfg","feature=\"std\"","-C","metadata=e1879f917c4233a1","-C","extra-filename=-e1879f917c4233a1","--out-dir","/Users/aidanm/Documents/GitHub/rust-project/kronosx-rs/target/rls/debug/deps","-L","dependency=/Users/aidanm/Documents/GitHub/rust-project/kronosx-rs/target/rls/debug/deps","--extern","async_task=/Users/aidanm/Documents/GitHub/rust-project/kronosx-rs/target/rls/debug/deps/libasync_task-094a15543a56a2db.rmeta","--extern","crossbeam_channel=/Users/aidanm/Documents/GitHub/rust-project/kronosx-rs/target/rls/debug/deps/libcrossbeam_channel-f3d702d017ee69f7.rmeta","--extern","crossbeam_deque=/Users/aidanm/Documents/GitHub/rust-project/kronosx-rs/target/rls/debug/deps/libcrossbeam_deque-df6669a36ee77f43.rmeta","--extern","crossbeam_utils=/Users/aidanm/Documents/GitHub/rust-project/kronosx-rs/target/rls/debug/deps/libcrossbeam_utils-fed97649f6a0963f.rmeta","--extern","futures_core=/Users/aidanm/Documents/GitHub/rust-project/kronosx-rs/target/rls/debug/deps/libfutures_core-b3f249be0f4f7f4a.rmeta","--extern","futures_io=/Users/aidanm/Documents/GitHub/rust-project/kronosx-rs/target/rls/debug/deps/libfutures_io-60a8bf1962c2900a.rmeta","--extern","futures_timer=/Users/aidanm/Documents/GitHub/rust-project/kronosx-rs/target/rls/debug/deps/libfutures_timer-47ff11a555068627.rmeta","--extern","kv_log_macro=/Users/aidanm/Documents/GitHub/rust-project/kronosx-rs/target/rls/debug/deps/libkv_log_macro-fbf828833cdd9ce9.rmeta","--extern","log=/Users/aidanm/Documents/GitHub/rust-project/kronosx-rs/target/rls/debug/deps/liblog-654d1a1cef349583.rmeta","--extern","memchr=/Users/aidanm/Documents/GitHub/rust-project/kronosx-rs/target/rls/debug/deps/libmemchr-3443d89db0ffa65f.rmeta","--extern","mio=/Users/aidanm/Documents/GitHub/rust-project/kronosx-rs/target/rls/debug/deps/libmio-3ca13fc055a2a600.rmeta","--extern","mio_uds=/Users/aidanm/Documents/GitHub/rust-project/kronosx-rs/target/rls/debug/deps/libmio_uds-950c6c142591b862.rmeta","--extern","num_cpus=/Users/aidanm/Documents/GitHub/rust-project/kronosx-rs/target/rls/debug/deps/libnum_cpus-3f2c73d89574ceaf.rmeta","--extern","once_cell=/Users/aidanm/Documents/GitHub/rust-project/kronosx-rs/target/rls/debug/deps/libonce_cell-3c72f6af0e7b0573.rmeta","--extern","pin_project_lite=/Users/aidanm/Documents/GitHub/rust-project/kronosx-rs/target/rls/debug/deps/libpin_project_lite-e98233c1caab191a.rmeta","--extern","pin_utils=/Users/aidanm/Documents/GitHub/rust-project/kronosx-rs/target/rls/debug/deps/libpin_utils-8d5ca3e291dc16bd.rmeta","--extern","slab=/Users/aidanm/Documents/GitHub/rust-project/kronosx-rs/target/rls/debug/deps/libslab-23b3221f5c5cc4c7.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/aidanm/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":"/Users/aidanm/Documents/GitHub/rust-project/kronosx-rs/target/rls/debug/deps/libasync_std-e1879f917c4233a1.rmeta"},"prelude":{"crate_id":{"name":"async_std","disambiguator":[18273556196171981893,8732794624110400923]},"crate_root":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src","external_crates":[{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[10608430921611063354,8395674908515043854]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11160377025778617549,8306148414492364050]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[9663231090963280434,10638099366656217316]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[8613951802040500840,8986910463845771571]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4234925388164028009,14529027430798409127]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12939592188934548457,11748836853849593839]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11558539462852648633,3085906855076936354]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1355611183143696049,1082614854160048948]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[16981354374590250573,15576027856838557551]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[4628010122359451059,8580279243742303134]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[13264402212939907072,7199802924690488679]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[4099488279035803097,1850970931251006444]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[7484089805571854691,14917719619681555181]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[11408195867218467554,12842251878395859872]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","num":15,"id":{"name":"futures_core","disambiguator":[5691035709317383288,18031865978719291815]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","num":16,"id":{"name":"pin_utils","disambiguator":[6590613276731499726,16294100595873845294]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/chain.rs","num":17,"id":{"name":"pin_project_lite","disambiguator":[10200138723224273508,16628023316427902347]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/waker_set.rs","num":18,"id":{"name":"crossbeam_utils","disambiguator":[291395871928049925,1169761952151282367]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/waker_set.rs","num":19,"id":{"name":"cfg_if","disambiguator":[9054421127537195688,3900470745018969355]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/waker_set.rs","num":20,"id":{"name":"lazy_static","disambiguator":[12953226447954000121,4037707622778134151]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/waker_set.rs","num":21,"id":{"name":"slab","disambiguator":[3678185594722193620,6598076140583509082]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","num":22,"id":{"name":"futures_timer","disambiguator":[13217783349807452871,7696871447982114564]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/mod.rs","num":23,"id":{"name":"futures_io","disambiguator":[6545167336389395877,10156676607327566076]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","num":24,"id":{"name":"mio_uds","disambiguator":[413019253064415484,3525102480512357960]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","num":25,"id":{"name":"iovec","disambiguator":[14131136029542994368,17473420880469276064]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","num":26,"id":{"name":"libc","disambiguator":[9472235275234179214,15909485468785658034]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/driver/mod.rs","num":27,"id":{"name":"mio","disambiguator":[3705033122141932103,6765670336920060699]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","num":28,"id":{"name":"net2","disambiguator":[10467064065078356644,16395930692043741104]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","num":29,"id":{"name":"log","disambiguator":[1585971238812150582,15393885532164486065]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","num":30,"id":{"name":"kv_log_macro","disambiguator":[17217565099042725911,15864540237044333411]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/executor/pool.rs","num":31,"id":{"name":"crossbeam_deque","disambiguator":[10392439684445168437,9085189968388477980]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/executor/pool.rs","num":32,"id":{"name":"crossbeam_epoch","disambiguator":[12259547616719894076,17653259677841847276]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/executor/pool.rs","num":33,"id":{"name":"maybe_uninit","disambiguator":[13143931410235354007,15349731384374731551]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/executor/pool.rs","num":34,"id":{"name":"memoffset","disambiguator":[692616598767595642,588052498160111033]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/executor/pool.rs","num":35,"id":{"name":"scopeguard","disambiguator":[6016036521711228189,3502733323965140987]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/executor/pool.rs","num":36,"id":{"name":"once_cell","disambiguator":[16414403866102928444,6656775366661538743]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn_blocking.rs","num":37,"id":{"name":"crossbeam_channel","disambiguator":[15768398220331672288,6411186207263514770]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/mod.rs","num":38,"id":{"name":"memchr","disambiguator":[2183372617265913525,6061366489807717183]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/builder.rs","num":39,"id":{"name":"async_task","disambiguator":[14634070616977764566,4269277284339791243]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/executor/pool.rs","num":40,"id":{"name":"num_cpus","disambiguator":[6529584074796174086,11333939895446128552]}}],"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":0,"byte_end":9498,"line_start":1,"line_end":274,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":2,"index":8191},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6879388,"byte_end":6879394,"line_start":49,"line_end":49,"column_start":17,"column_end":23},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":34}},{"kind":"Use","ref_id":{"krate":0,"index":47},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6879413,"byte_end":6879420,"line_start":50,"line_end":50,"column_start":18,"column_end":25},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":34}},{"kind":"Use","ref_id":{"krate":0,"index":64},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6879439,"byte_end":6879446,"line_start":51,"line_end":51,"column_start":18,"column_end":25},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":34}},{"kind":"Use","ref_id":{"krate":0,"index":80},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6879463,"byte_end":6879468,"line_start":52,"line_end":52,"column_start":16,"column_end":21},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":34}},{"kind":"Use","ref_id":{"krate":2,"index":8191},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/future/mod.rs","byte_start":6885455,"byte_end":6885461,"line_start":139,"line_end":139,"column_start":39,"column_end":45},"alias_span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/future/mod.rs","byte_start":6881683,"byte_end":6881689,"line_start":61,"line_end":61,"column_start":15,"column_end":21},"name":"Future","value":"","parent":{"krate":0,"index":39}},{"kind":"Use","ref_id":{"krate":0,"index":1405},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6879569,"byte_end":6879576,"line_start":60,"line_end":60,"column_start":23,"column_end":30},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":34}},{"kind":"Use","ref_id":{"krate":0,"index":1420},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6879578,"byte_end":6879590,"line_start":60,"line_end":60,"column_start":32,"column_end":44},"alias_span":null,"name":"TimeoutError","value":"","parent":{"krate":0,"index":34}},{"kind":"Use","ref_id":{"krate":1,"index":2505},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6906620,"byte_end":6906625,"line_start":276,"line_end":276,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":1,"index":6606},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6906627,"byte_end":6906636,"line_start":276,"line_end":276,"column_start":30,"column_end":39},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":1,"index":6669},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6906638,"byte_end":6906645,"line_start":276,"line_end":276,"column_start":41,"column_end":48},"alias_span":null,"name":"IoSlice","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":1,"index":2899},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6906647,"byte_end":6906657,"line_start":276,"line_end":276,"column_start":50,"column_end":60},"alias_span":null,"name":"IoSliceMut","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":1,"index":2503},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6906659,"byte_end":6906665,"line_start":276,"line_end":276,"column_start":62,"column_end":68},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":1,"index":6683},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6906667,"byte_end":6906675,"line_start":276,"line_end":276,"column_start":70,"column_end":78},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":23,"index":27},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6906702,"byte_end":6906709,"line_start":278,"line_end":278,"column_start":24,"column_end":31},"alias_span":null,"name":"BufRead","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":6832},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6906711,"byte_end":6906716,"line_start":278,"line_end":278,"column_start":33,"column_end":38},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":6611},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6906743,"byte_end":6906752,"line_start":279,"line_end":279,"column_start":25,"column_end":34},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":6570},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6906779,"byte_end":6906788,"line_start":280,"line_end":280,"column_start":26,"column_end":35},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":2216},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6906790,"byte_end":6906804,"line_start":280,"line_end":280,"column_start":37,"column_end":51},"alias_span":null,"name":"IntoInnerError","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":2000},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6906825,"byte_end":6906829,"line_start":281,"line_end":281,"column_start":19,"column_end":23},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":2224},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6906851,"byte_end":6906857,"line_start":282,"line_end":282,"column_start":21,"column_end":27},"alias_span":null,"name":"Cursor","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":2067},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6906879,"byte_end":6906884,"line_start":283,"line_end":283,"column_start":21,"column_end":26},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":2068},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6906886,"byte_end":6906891,"line_start":283,"line_end":283,"column_start":28,"column_end":33},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":84}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6906559,"byte_end":6906560,"line_start":272,"line_end":272,"column_start":35,"column_end":36},"alias_span":null,"name":"*","value":"Read, _","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":2087},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6906936,"byte_end":6906942,"line_start":285,"line_end":285,"column_start":22,"column_end":28},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":2088},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6906944,"byte_end":6906950,"line_start":285,"line_end":285,"column_start":30,"column_end":36},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":23,"index":25},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6906971,"byte_end":6906975,"line_start":286,"line_end":286,"column_start":19,"column_end":23},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":2103},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6906996,"byte_end":6907000,"line_start":287,"line_end":287,"column_start":20,"column_end":24},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":2104},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6907002,"byte_end":6907006,"line_start":287,"line_end":287,"column_start":26,"column_end":30},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":23,"index":20},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6907028,"byte_end":6907033,"line_start":288,"line_end":288,"column_start":20,"column_end":25},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":23,"index":27},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/prelude.rs","byte_start":8020362,"byte_end":8020369,"line_start":12,"line_end":12,"column_start":20,"column_end":27},"alias_span":null,"name":"BufRead","value":"","parent":{"krate":0,"index":1462}},{"kind":"Use","ref_id":{"krate":23,"index":17},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/prelude.rs","byte_start":8020408,"byte_end":8020412,"line_start":14,"line_end":14,"column_start":20,"column_end":24},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":1462}},{"kind":"Use","ref_id":{"krate":23,"index":25},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/prelude.rs","byte_start":8020451,"byte_end":8020455,"line_start":16,"line_end":16,"column_start":20,"column_end":24},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":1462}},{"kind":"Use","ref_id":{"krate":23,"index":20},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/prelude.rs","byte_start":8020494,"byte_end":8020499,"line_start":18,"line_end":18,"column_start":20,"column_end":25},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":1462}},{"kind":"Use","ref_id":{"krate":0,"index":2124},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/prelude.rs","byte_start":8020546,"byte_end":8020556,"line_start":21,"line_end":21,"column_start":30,"column_end":40},"alias_span":null,"name":"BufReadExt","value":"","parent":{"krate":0,"index":1462}},{"kind":"Use","ref_id":{"krate":0,"index":2151},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/prelude.rs","byte_start":8020598,"byte_end":8020605,"line_start":23,"line_end":23,"column_start":26,"column_end":33},"alias_span":null,"name":"ReadExt","value":"","parent":{"krate":0,"index":1462}},{"kind":"Use","ref_id":{"krate":0,"index":2181},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/prelude.rs","byte_start":8020647,"byte_end":8020654,"line_start":25,"line_end":25,"column_start":26,"column_end":33},"alias_span":null,"name":"SeekExt","value":"","parent":{"krate":0,"index":1462}},{"kind":"Use","ref_id":{"krate":0,"index":2197},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/prelude.rs","byte_start":8020697,"byte_end":8020705,"line_start":27,"line_end":27,"column_start":27,"column_end":35},"alias_span":null,"name":"WriteExt","value":"","parent":{"krate":0,"index":1462}},{"kind":"Use","ref_id":{"krate":23,"index":25},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/seek/mod.rs","byte_start":8077535,"byte_end":8077544,"line_start":51,"line_end":51,"column_start":36,"column_end":45},"alias_span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/seek/mod.rs","byte_start":8077134,"byte_end":8077138,"line_start":35,"line_end":35,"column_start":15,"column_end":19},"name":"Seek","value":"","parent":{"krate":0,"index":1759}},{"kind":"Use","ref_id":{"krate":23,"index":20},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/mod.rs","byte_start":8082720,"byte_end":8082730,"line_start":84,"line_end":84,"column_start":37,"column_end":47},"alias_span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/mod.rs","byte_start":8081537,"byte_end":8081542,"line_start":46,"line_end":46,"column_start":15,"column_end":20},"name":"Write","value":"","parent":{"krate":0,"index":1781}},{"kind":"Use","ref_id":{"krate":0,"index":2323},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6907398,"byte_end":6907405,"line_start":310,"line_end":310,"column_start":21,"column_end":28},"alias_span":null,"name":"_eprint","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":2320},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6907407,"byte_end":6907413,"line_start":310,"line_end":310,"column_start":30,"column_end":36},"alias_span":null,"name":"_print","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":2281},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6907438,"byte_end":6907444,"line_start":312,"line_end":312,"column_start":22,"column_end":28},"alias_span":null,"name":"stderr","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":2346},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6907446,"byte_end":6907452,"line_start":312,"line_end":312,"column_start":30,"column_end":36},"alias_span":null,"name":"Stderr","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":2303},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6907475,"byte_end":6907480,"line_start":313,"line_end":313,"column_start":21,"column_end":26},"alias_span":null,"name":"stdin","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":2380},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6907482,"byte_end":6907487,"line_start":313,"line_end":313,"column_start":28,"column_end":33},"alias_span":null,"name":"Stdin","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":2338},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6907511,"byte_end":6907517,"line_start":314,"line_end":314,"column_start":22,"column_end":28},"alias_span":null,"name":"stdout","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":2415},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6907519,"byte_end":6907525,"line_start":314,"line_end":314,"column_start":30,"column_end":36},"alias_span":null,"name":"Stdout","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":2259},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6907549,"byte_end":6907556,"line_start":315,"line_end":315,"column_start":22,"column_end":29},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":1,"index":8188},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/io.rs","byte_start":8196038,"byte_end":8196045,"line_start":4,"line_end":4,"column_start":33,"column_end":40},"alias_span":null,"name":"AsRawFd","value":"","parent":{"krate":0,"index":2450}},{"kind":"Use","ref_id":{"krate":1,"index":8190},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/io.rs","byte_start":8196047,"byte_end":8196056,"line_start":4,"line_end":4,"column_start":42,"column_end":51},"alias_span":null,"name":"FromRawFd","value":"","parent":{"krate":0,"index":2450}},{"kind":"Use","ref_id":{"krate":1,"index":8192},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/io.rs","byte_start":8196058,"byte_end":8196067,"line_start":4,"line_end":4,"column_start":53,"column_end":62},"alias_span":null,"name":"IntoRawFd","value":"","parent":{"krate":0,"index":2450}},{"kind":"Use","ref_id":{"krate":1,"index":8187},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/io.rs","byte_start":8196069,"byte_end":8196074,"line_start":4,"line_end":4,"column_start":64,"column_end":69},"alias_span":null,"name":"RawFd","value":"","parent":{"krate":0,"index":2450}},{"kind":"Use","ref_id":{"krate":1,"index":8174},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8199186,"byte_end":8199199,"line_start":33,"line_end":33,"column_start":33,"column_end":46},"alias_span":null,"name":"DirBuilderExt","value":"","parent":{"krate":0,"index":2456}},{"kind":"Use","ref_id":{"krate":1,"index":8167},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8199201,"byte_end":8199212,"line_start":33,"line_end":33,"column_start":48,"column_end":59},"alias_span":null,"name":"DirEntryExt","value":"","parent":{"krate":0,"index":2456}},{"kind":"Use","ref_id":{"krate":1,"index":8117},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8199214,"byte_end":8199228,"line_start":33,"line_end":33,"column_start":61,"column_end":75},"alias_span":null,"name":"OpenOptionsExt","value":"","parent":{"krate":0,"index":2456}},{"kind":"Use","ref_id":{"krate":0,"index":2487},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/mod.rs","byte_start":8200891,"byte_end":8200903,"line_start":3,"line_end":3,"column_start":19,"column_end":31},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":2466}},{"kind":"Use","ref_id":{"krate":0,"index":2650},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/mod.rs","byte_start":8200924,"byte_end":8200932,"line_start":4,"line_end":4,"column_start":20,"column_end":28},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":2466}},{"kind":"Use","ref_id":{"krate":0,"index":2557},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/mod.rs","byte_start":8200934,"byte_end":8200946,"line_start":4,"line_end":4,"column_start":30,"column_end":42},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":2466}},{"kind":"Use","ref_id":{"krate":0,"index":2608},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/mod.rs","byte_start":8200965,"byte_end":8200975,"line_start":5,"line_end":5,"column_start":17,"column_end":27},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":2466}},{"kind":"Use","ref_id":{"krate":1,"index":9481},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/mod.rs","byte_start":8201067,"byte_end":8201077,"line_start":12,"line_end":12,"column_start":33,"column_end":43},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":2466}},{"kind":"Use","ref_id":{"krate":2,"index":8191},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6908501,"byte_end":6908507,"line_start":16,"line_end":16,"column_start":26,"column_end":32},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":87}},{"kind":"Use","ref_id":{"krate":15,"index":68},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6908558,"byte_end":6908564,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":87}},{"kind":"Use","ref_id":{"krate":0,"index":1388},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6908621,"byte_end":6908630,"line_start":21,"line_end":21,"column_start":36,"column_end":45},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":87}},{"kind":"Use","ref_id":{"krate":0,"index":2690},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6908686,"byte_end":6908695,"line_start":23,"line_end":23,"column_start":36,"column_end":45},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":87}},{"kind":"Use","ref_id":{"krate":23,"index":27},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6908742,"byte_end":6908749,"line_start":25,"line_end":25,"column_start":24,"column_end":31},"alias_span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6908753,"byte_end":6908754,"line_start":25,"line_end":25,"column_start":35,"column_end":36},"name":"_","value":"","parent":{"krate":0,"index":87}},{"kind":"Use","ref_id":{"krate":23,"index":17},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6908801,"byte_end":6908805,"line_start":27,"line_end":27,"column_start":24,"column_end":28},"alias_span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6908809,"byte_end":6908810,"line_start":27,"line_end":27,"column_start":32,"column_end":33},"name":"_","value":"","parent":{"krate":0,"index":87}},{"kind":"Use","ref_id":{"krate":23,"index":25},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6908857,"byte_end":6908861,"line_start":29,"line_end":29,"column_start":24,"column_end":28},"alias_span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6908865,"byte_end":6908866,"line_start":29,"line_end":29,"column_start":32,"column_end":33},"name":"_","value":"","parent":{"krate":0,"index":87}},{"kind":"Use","ref_id":{"krate":23,"index":20},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6908913,"byte_end":6908918,"line_start":31,"line_end":31,"column_start":24,"column_end":29},"alias_span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6908922,"byte_end":6908923,"line_start":31,"line_end":31,"column_start":33,"column_end":34},"name":"_","value":"","parent":{"krate":0,"index":87}},{"kind":"Use","ref_id":{"krate":0,"index":2124},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6908980,"byte_end":6908990,"line_start":34,"line_end":34,"column_start":33,"column_end":43},"alias_span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6908994,"byte_end":6908995,"line_start":34,"line_end":34,"column_start":47,"column_end":48},"name":"_","value":"","parent":{"krate":0,"index":87}},{"kind":"Use","ref_id":{"krate":0,"index":2151},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6909051,"byte_end":6909058,"line_start":36,"line_end":36,"column_start":33,"column_end":40},"alias_span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6909062,"byte_end":6909063,"line_start":36,"line_end":36,"column_start":44,"column_end":45},"name":"_","value":"","parent":{"krate":0,"index":87}},{"kind":"Use","ref_id":{"krate":0,"index":2181},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6909119,"byte_end":6909126,"line_start":38,"line_end":38,"column_start":33,"column_end":40},"alias_span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6909130,"byte_end":6909131,"line_start":38,"line_end":38,"column_start":44,"column_end":45},"name":"_","value":"","parent":{"krate":0,"index":87}},{"kind":"Use","ref_id":{"krate":0,"index":2197},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6909187,"byte_end":6909195,"line_start":40,"line_end":40,"column_start":33,"column_end":41},"alias_span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6909199,"byte_end":6909200,"line_start":40,"line_end":40,"column_start":45,"column_end":46},"name":"_","value":"","parent":{"krate":0,"index":87}},{"kind":"Use","ref_id":{"krate":0,"index":29},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6909261,"byte_end":6909271,"line_start":45,"line_end":45,"column_start":20,"column_end":30},"alias_span":null,"name":"task_local","value":"","parent":{"krate":0,"index":87}},{"kind":"Use","ref_id":{"krate":0,"index":1029},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6919757,"byte_end":6919762,"line_start":303,"line_end":303,"column_start":17,"column_end":22},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":88}},{"kind":"Use","ref_id":{"krate":0,"index":2784},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6919764,"byte_end":6919769,"line_start":303,"line_end":303,"column_start":24,"column_end":29},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":88}},{"kind":"Use","ref_id":{"krate":0,"index":1043},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6919790,"byte_end":6919797,"line_start":304,"line_end":304,"column_start":19,"column_end":26},"alias_span":null,"name":"from_fn","value":"","parent":{"krate":0,"index":88}},{"kind":"Use","ref_id":{"krate":0,"index":2790},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6919799,"byte_end":6919805,"line_start":304,"line_end":304,"column_start":28,"column_end":34},"alias_span":null,"name":"FromFn","value":"","parent":{"krate":0,"index":88}},{"kind":"Use","ref_id":{"krate":0,"index":1058},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6919828,"byte_end":6919837,"line_start":305,"line_end":305,"column_start":21,"column_end":30},"alias_span":null,"name":"from_iter","value":"","parent":{"krate":0,"index":88}},{"kind":"Use","ref_id":{"krate":0,"index":4877},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6919839,"byte_end":6919847,"line_start":305,"line_end":305,"column_start":32,"column_end":40},"alias_span":null,"name":"FromIter","value":"","parent":{"krate":0,"index":88}},{"kind":"Use","ref_id":{"krate":0,"index":1071},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6919865,"byte_end":6919869,"line_start":306,"line_end":306,"column_start":16,"column_end":20},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":88}},{"kind":"Use","ref_id":{"krate":0,"index":4838},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6919871,"byte_end":6919875,"line_start":306,"line_end":306,"column_start":22,"column_end":26},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":88}},{"kind":"Use","ref_id":{"krate":0,"index":1083},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6919895,"byte_end":6919901,"line_start":307,"line_end":307,"column_start":18,"column_end":24},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":88}},{"kind":"Use","ref_id":{"krate":0,"index":2799},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6919903,"byte_end":6919909,"line_start":307,"line_end":307,"column_start":26,"column_end":32},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":88}},{"kind":"Use","ref_id":{"krate":0,"index":1097},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6919934,"byte_end":6919945,"line_start":308,"line_end":308,"column_start":23,"column_end":34},"alias_span":null,"name":"repeat_with","value":"","parent":{"krate":0,"index":88}},{"kind":"Use","ref_id":{"krate":0,"index":2808},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6919947,"byte_end":6919957,"line_start":308,"line_end":308,"column_start":36,"column_end":46},"alias_span":null,"name":"RepeatWith","value":"","parent":{"krate":0,"index":88}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6919976,"byte_end":6919977,"line_start":309,"line_end":309,"column_start":17,"column_end":18},"alias_span":null,"name":"*","value":"Stream","parent":{"krate":0,"index":88}},{"kind":"Use","ref_id":{"krate":5,"index":3840},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7067825,"byte_end":7067828,"line_start":177,"line_end":177,"column_start":21,"column_end":24},"alias_span":null,"name":"Arc","value":"","parent":{"krate":0,"index":1105}},{"kind":"Use","ref_id":{"krate":5,"index":3858},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7067830,"byte_end":7067834,"line_start":177,"line_end":177,"column_start":26,"column_end":30},"alias_span":null,"name":"Weak","value":"","parent":{"krate":0,"index":1105}},{"kind":"Use","ref_id":{"krate":0,"index":1131},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7067854,"byte_end":7067859,"line_start":179,"line_end":179,"column_start":17,"column_end":22},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":1105}},{"kind":"Use","ref_id":{"krate":0,"index":1177},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7067861,"byte_end":7067871,"line_start":179,"line_end":179,"column_start":24,"column_end":34},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":1105}},{"kind":"Use","ref_id":{"krate":0,"index":1222},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7067891,"byte_end":7067897,"line_start":180,"line_end":180,"column_start":18,"column_end":24},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":1105}},{"kind":"Use","ref_id":{"krate":0,"index":1286},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7067899,"byte_end":7067914,"line_start":180,"line_end":180,"column_start":26,"column_end":41},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":1105}},{"kind":"Use","ref_id":{"krate":0,"index":1308},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7067916,"byte_end":7067932,"line_start":180,"line_end":180,"column_start":43,"column_end":59},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":1105}},{"kind":"Use","ref_id":{"krate":2,"index":8281},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7101748,"byte_end":7101755,"line_start":122,"line_end":122,"column_start":25,"column_end":32},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":1375}},{"kind":"Use","ref_id":{"krate":2,"index":32119},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7101757,"byte_end":7101761,"line_start":122,"line_end":122,"column_start":34,"column_end":38},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":1375}},{"kind":"Use","ref_id":{"krate":2,"index":8291},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7101763,"byte_end":7101768,"line_start":122,"line_end":122,"column_start":40,"column_end":45},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":1375}},{"kind":"Use","ref_id":{"krate":15,"index":131},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7101791,"byte_end":7101796,"line_start":124,"line_end":124,"column_start":20,"column_end":25},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":1375}},{"kind":"Use","ref_id":{"krate":0,"index":2847},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7101821,"byte_end":7101830,"line_start":125,"line_end":125,"column_start":24,"column_end":33},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":1375}},{"kind":"Use","ref_id":{"krate":15,"index":131},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/ready.rs","byte_start":8233203,"byte_end":8233208,"line_start":4,"line_end":4,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":2839}},{"kind":"Use","ref_id":{"krate":0,"index":2887},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7101906,"byte_end":7101914,"line_start":131,"line_end":131,"column_start":23,"column_end":31},"alias_span":null,"name":"block_on","value":"","parent":{"krate":0,"index":1375}},{"kind":"Use","ref_id":{"krate":0,"index":3173},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7101937,"byte_end":7101944,"line_start":132,"line_end":132,"column_start":22,"column_end":29},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":1375}},{"kind":"Use","ref_id":{"krate":0,"index":2929},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7101967,"byte_end":7101974,"line_start":133,"line_end":133,"column_start":22,"column_end":29},"alias_span":null,"name":"current","value":"","parent":{"krate":0,"index":1375}},{"kind":"Use","ref_id":{"krate":0,"index":3074},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7101994,"byte_end":7101998,"line_start":134,"line_end":134,"column_start":19,"column_end":23},"alias_span":null,"name":"Task","value":"","parent":{"krate":0,"index":1375}},{"kind":"Use","ref_id":{"krate":0,"index":3223},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7102021,"byte_end":7102027,"line_start":135,"line_end":135,"column_start":22,"column_end":28},"alias_span":null,"name":"TaskId","value":"","parent":{"krate":0,"index":1375}},{"kind":"Use","ref_id":{"krate":0,"index":3203},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7102054,"byte_end":7102064,"line_start":136,"line_end":136,"column_start":26,"column_end":36},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":1375}},{"kind":"Use","ref_id":{"krate":0,"index":3014},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7102085,"byte_end":7102090,"line_start":137,"line_end":137,"column_start":20,"column_end":25},"alias_span":null,"name":"sleep","value":"","parent":{"krate":0,"index":1375}},{"kind":"Use","ref_id":{"krate":0,"index":3022},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7102111,"byte_end":7102116,"line_start":138,"line_end":138,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":1375}},{"kind":"Use","ref_id":{"krate":0,"index":3248},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7102143,"byte_end":7102154,"line_start":139,"line_end":139,"column_start":26,"column_end":37},"alias_span":null,"name":"AccessError","value":"","parent":{"krate":0,"index":1375}},{"kind":"Use","ref_id":{"krate":0,"index":3241},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7102156,"byte_end":7102164,"line_start":139,"line_end":139,"column_start":39,"column_end":47},"alias_span":null,"name":"LocalKey","value":"","parent":{"krate":0,"index":1375}},{"kind":"Use","ref_id":{"krate":0,"index":4332},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8269585,"byte_end":8269595,"line_start":30,"line_end":30,"column_start":22,"column_end":32},"alias_span":null,"name":"DirBuilder","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3356},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8269616,"byte_end":8269624,"line_start":31,"line_end":31,"column_start":20,"column_end":28},"alias_span":null,"name":"DirEntry","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3412},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8269640,"byte_end":8269644,"line_start":32,"line_end":32,"column_start":15,"column_end":19},"alias_span":null,"name":"File","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":1,"index":6546},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8269665,"byte_end":8269673,"line_start":33,"line_end":33,"column_start":20,"column_end":28},"alias_span":null,"name":"FileType","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":1,"index":6515},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8269693,"byte_end":8269701,"line_start":34,"line_end":34,"column_start":19,"column_end":27},"alias_span":null,"name":"Metadata","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":4358},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8269725,"byte_end":8269736,"line_start":35,"line_end":35,"column_start":23,"column_end":34},"alias_span":null,"name":"OpenOptions","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":1,"index":6532},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8269759,"byte_end":8269770,"line_start":36,"line_end":36,"column_start":22,"column_end":33},"alias_span":null,"name":"Permissions","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":4370},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8269790,"byte_end":8269797,"line_start":37,"line_end":37,"column_start":19,"column_end":26},"alias_span":null,"name":"ReadDir","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3293},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8269822,"byte_end":8269834,"line_start":39,"line_end":39,"column_start":23,"column_end":35},"alias_span":null,"name":"canonicalize","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3304},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8269850,"byte_end":8269854,"line_start":40,"line_end":40,"column_start":15,"column_end":19},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3316},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8269876,"byte_end":8269886,"line_start":41,"line_end":41,"column_start":21,"column_end":31},"alias_span":null,"name":"create_dir","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3327},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8269912,"byte_end":8269926,"line_start":42,"line_end":42,"column_start":25,"column_end":39},"alias_span":null,"name":"create_dir_all","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3547},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8269947,"byte_end":8269956,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"alias_span":null,"name":"hard_link","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3558},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8269976,"byte_end":8269984,"line_start":44,"line_end":44,"column_start":19,"column_end":27},"alias_span":null,"name":"metadata","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3590},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8270000,"byte_end":8270004,"line_start":45,"line_end":45,"column_start":15,"column_end":19},"alias_span":null,"name":"read","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3609},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8270024,"byte_end":8270032,"line_start":46,"line_end":46,"column_start":19,"column_end":27},"alias_span":null,"name":"read_dir","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3629},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8270053,"byte_end":8270062,"line_start":47,"line_end":47,"column_start":20,"column_end":29},"alias_span":null,"name":"read_link","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3640},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8270088,"byte_end":8270102,"line_start":48,"line_end":48,"column_start":25,"column_end":39},"alias_span":null,"name":"read_to_string","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3651},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8270124,"byte_end":8270134,"line_start":49,"line_end":49,"column_start":21,"column_end":31},"alias_span":null,"name":"remove_dir","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3662},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8270160,"byte_end":8270174,"line_start":50,"line_end":50,"column_start":25,"column_end":39},"alias_span":null,"name":"remove_dir_all","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3673},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8270197,"byte_end":8270208,"line_start":51,"line_end":51,"column_start":22,"column_end":33},"alias_span":null,"name":"remove_file","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3684},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8270226,"byte_end":8270232,"line_start":52,"line_end":52,"column_start":17,"column_end":23},"alias_span":null,"name":"rename","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3696},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8270259,"byte_end":8270274,"line_start":53,"line_end":53,"column_start":26,"column_end":41},"alias_span":null,"name":"set_permissions","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3706},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8270302,"byte_end":8270318,"line_start":54,"line_end":54,"column_start":27,"column_end":43},"alias_span":null,"name":"symlink_metadata","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":0,"index":3716},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8270335,"byte_end":8270340,"line_start":55,"line_end":55,"column_start":16,"column_end":21},"alias_span":null,"name":"write","value":"","parent":{"krate":0,"index":3260}},{"kind":"Use","ref_id":{"krate":1,"index":6546},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file_type.rs","byte_start":8314110,"byte_end":8314118,"line_start":2,"line_end":2,"column_start":22,"column_end":30},"alias_span":null,"name":"FileType","value":"","parent":{"krate":0,"index":3541}},{"kind":"Use","ref_id":{"krate":1,"index":6515},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8319480,"byte_end":8319488,"line_start":41,"line_end":41,"column_start":22,"column_end":30},"alias_span":null,"name":"Metadata","value":"","parent":{"krate":0,"index":3554}},{"kind":"Use","ref_id":{"krate":1,"index":6532},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/permissions.rs","byte_start":8334756,"byte_end":8334767,"line_start":2,"line_end":2,"column_start":22,"column_end":33},"alias_span":null,"name":"Permissions","value":"","parent":{"krate":0,"index":3584}},{"kind":"Use","ref_id":{"krate":1,"index":3863},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8355030,"byte_end":8355042,"line_start":80,"line_end":80,"column_start":5,"column_end":17},"alias_span":null,"name":"is_separator","value":"","parent":{"krate":0,"index":3723}},{"kind":"Use","ref_id":{"krate":1,"index":6992},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8355044,"byte_end":8355053,"line_start":80,"line_end":80,"column_start":19,"column_end":28},"alias_span":null,"name":"Component","value":"","parent":{"krate":0,"index":3723}},{"kind":"Use","ref_id":{"krate":1,"index":4136},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8355055,"byte_end":8355062,"line_start":80,"line_end":80,"column_start":30,"column_end":37},"alias_span":null,"name":"Display","value":"","parent":{"krate":0,"index":3723}},{"kind":"Use","ref_id":{"krate":1,"index":6889},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8355064,"byte_end":8355070,"line_start":80,"line_end":80,"column_start":39,"column_end":45},"alias_span":null,"name":"Prefix","value":"","parent":{"krate":0,"index":3723}},{"kind":"Use","ref_id":{"krate":1,"index":6975},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8355072,"byte_end":8355087,"line_start":80,"line_end":80,"column_start":47,"column_end":62},"alias_span":null,"name":"PrefixComponent","value":"","parent":{"krate":0,"index":3723}},{"kind":"Use","ref_id":{"krate":1,"index":7070},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8355089,"byte_end":8355105,"line_start":80,"line_end":80,"column_start":64,"column_end":80},"alias_span":null,"name":"StripPrefixError","value":"","parent":{"krate":0,"index":3723}},{"kind":"Use","ref_id":{"krate":1,"index":3864},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8355107,"byte_end":8355121,"line_start":80,"line_end":80,"column_start":82,"column_end":96},"alias_span":null,"name":"MAIN_SEPARATOR","value":"","parent":{"krate":0,"index":3723}},{"kind":"Use","ref_id":{"krate":0,"index":4384},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8355146,"byte_end":8355155,"line_start":83,"line_end":83,"column_start":20,"column_end":29},"alias_span":null,"name":"Ancestors","value":"","parent":{"krate":0,"index":3723}},{"kind":"Use","ref_id":{"krate":0,"index":4395},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8355177,"byte_end":8355187,"line_start":84,"line_end":84,"column_start":21,"column_end":31},"alias_span":null,"name":"Components","value":"","parent":{"krate":0,"index":3723}},{"kind":"Use","ref_id":{"krate":0,"index":4425},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8355203,"byte_end":8355207,"line_start":85,"line_end":85,"column_start":15,"column_end":19},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":3723}},{"kind":"Use","ref_id":{"krate":0,"index":4431},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8355223,"byte_end":8355227,"line_start":86,"line_end":86,"column_start":15,"column_end":19},"alias_span":null,"name":"Path","value":"","parent":{"krate":0,"index":3723}},{"kind":"Use","ref_id":{"krate":0,"index":4709},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8355246,"byte_end":8355253,"line_start":87,"line_end":87,"column_start":18,"column_end":25},"alias_span":null,"name":"PathBuf","value":"","parent":{"krate":0,"index":3723}},{"kind":"Use","ref_id":{"krate":1,"index":6824},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8405262,"byte_end":8405276,"line_start":59,"line_end":59,"column_start":19,"column_end":33},"alias_span":null,"name":"AddrParseError","value":"","parent":{"krate":0,"index":4008}},{"kind":"Use","ref_id":{"krate":1,"index":6844},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8405296,"byte_end":8405304,"line_start":60,"line_end":60,"column_start":19,"column_end":27},"alias_span":null,"name":"Shutdown","value":"","parent":{"krate":0,"index":4008}},{"kind":"Use","ref_id":{"krate":1,"index":6759},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8405325,"byte_end":8405331,"line_start":61,"line_end":61,"column_start":20,"column_end":26},"alias_span":null,"name":"IpAddr","value":"","parent":{"krate":0,"index":4008}},{"kind":"Use","ref_id":{"krate":1,"index":6789},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8405333,"byte_end":8405341,"line_start":61,"line_end":61,"column_start":28,"column_end":36},"alias_span":null,"name":"Ipv4Addr","value":"","parent":{"krate":0,"index":4008}},{"kind":"Use","ref_id":{"krate":1,"index":6792},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8405343,"byte_end":8405351,"line_start":61,"line_end":61,"column_start":38,"column_end":46},"alias_span":null,"name":"Ipv6Addr","value":"","parent":{"krate":0,"index":4008}},{"kind":"Use","ref_id":{"krate":1,"index":6731},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8405373,"byte_end":8405383,"line_start":62,"line_end":62,"column_start":20,"column_end":30},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":4008}},{"kind":"Use","ref_id":{"krate":1,"index":6753},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8405385,"byte_end":8405397,"line_start":62,"line_end":62,"column_start":32,"column_end":44},"alias_span":null,"name":"SocketAddrV4","value":"","parent":{"krate":0,"index":4008}},{"kind":"Use","ref_id":{"krate":1,"index":6756},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8405399,"byte_end":8405411,"line_start":62,"line_end":62,"column_start":46,"column_end":58},"alias_span":null,"name":"SocketAddrV6","value":"","parent":{"krate":0,"index":4008}},{"kind":"Use","ref_id":{"krate":0,"index":4044},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8405429,"byte_end":8405442,"line_start":64,"line_end":64,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":4008}},{"kind":"Use","ref_id":{"krate":0,"index":4756},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8405458,"byte_end":8405466,"line_start":65,"line_end":65,"column_start":15,"column_end":23},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":4008}},{"kind":"Use","ref_id":{"krate":0,"index":4752},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8405468,"byte_end":8405479,"line_start":65,"line_end":65,"column_start":25,"column_end":36},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":4008}},{"kind":"Use","ref_id":{"krate":0,"index":4774},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8405481,"byte_end":8405490,"line_start":65,"line_end":65,"column_start":38,"column_end":47},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":4008}},{"kind":"Use","ref_id":{"krate":0,"index":4791},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8405506,"byte_end":8405515,"line_start":66,"line_end":66,"column_start":14,"column_end":23},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":4008}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":0,"byte_end":9498,"line_start":1,"line_end":274,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":28},{"krate":0,"index":34},{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":1105},{"krate":0,"index":1375},{"krate":0,"index":3260},{"krate":0,"index":3723},{"krate":0,"index":4008}],"decl_id":null,"docs":" # Async version of the Rust standard library","sig":null,"attributes":[{"value":"! # Async version of the Rust standard library","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":0,"byte_end":48,"line_start":1,"line_end":1,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":49,"byte_end":52,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! `async-std` is a foundation of portable Rust software, a set of minimal and battle-tested","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":53,"byte_end":146,"line_start":3,"line_end":3,"column_start":1,"column_end":94}},{"value":"! shared abstractions for the [broader Rust ecosystem][crates.io]. It offers std types, like","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":147,"byte_end":241,"line_start":4,"line_end":4,"column_start":1,"column_end":95}},{"value":"! [`Future`] and [`Stream`], library-defined [operations on language primitives](#primitives),","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":242,"byte_end":338,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"! [standard macros](#macros), [I/O] and [multithreading], among [many other things][other].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":339,"byte_end":432,"line_start":6,"line_end":6,"column_start":1,"column_end":94}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":433,"byte_end":436,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! `async-std` is available from [crates.io]. Once included, `async-std` can be accessed","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":437,"byte_end":526,"line_start":8,"line_end":8,"column_start":1,"column_end":90}},{"value":"! in [`use`] statements through the path `async_std`, as in [`use async_std::future`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":527,"byte_end":615,"line_start":9,"line_end":9,"column_start":1,"column_end":89}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":616,"byte_end":619,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! [I/O]: io/index.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":620,"byte_end":644,"line_start":11,"line_end":11,"column_start":1,"column_end":25}},{"value":"! [multithreading]: task/index.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":645,"byte_end":682,"line_start":12,"line_end":12,"column_start":1,"column_end":38}},{"value":"! [other]: #what-is-in-the-standard-library-documentation","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":683,"byte_end":742,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"! [`use`]: https://doc.rust-lang.org/book/ch07-02-defining-modules-to-control-scope-and-privacy.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":743,"byte_end":845,"line_start":14,"line_end":14,"column_start":1,"column_end":103}},{"value":"! [`use async_std::future`]: future/index.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":846,"byte_end":894,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"! [crates.io]: https://crates.io","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":895,"byte_end":929,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"! [`Future`]: future/trait.Future.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":930,"byte_end":970,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"! [`Stream`]: stream/trait.Stream.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":971,"byte_end":1011,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1012,"byte_end":1015,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! # How to read this documentation","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1016,"byte_end":1052,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1053,"byte_end":1056,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! If you already know the name of what you are looking for, the fastest way to","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1057,"byte_end":1137,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"! find it is to use the <a href=\"#\" onclick=\"focusSearchBar();\">search","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1138,"byte_end":1210,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"! bar</a> at the top of the page.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1211,"byte_end":1246,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1247,"byte_end":1250,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! Otherwise, you may want to jump to one of these useful sections:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1251,"byte_end":1319,"line_start":26,"line_end":26,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1320,"byte_end":1323,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! * [`async_std::*` modules](#modules)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1324,"byte_end":1364,"line_start":28,"line_end":28,"column_start":1,"column_end":41}},{"value":"! * [Async macros](#macros)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1365,"byte_end":1394,"line_start":29,"line_end":29,"column_start":1,"column_end":30}},{"value":"! * [The Async Prelude](prelude/index.html)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1395,"byte_end":1440,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"! * [Cargo.toml feature flags](#features)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1441,"byte_end":1484,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"! * [Examples](#examples)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1485,"byte_end":1512,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1513,"byte_end":1516,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"! If this is your first time, the documentation for `async-std` is","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1517,"byte_end":1585,"line_start":34,"line_end":34,"column_start":1,"column_end":69}},{"value":"! written to be casually perused. Clicking on interesting things should","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1586,"byte_end":1659,"line_start":35,"line_end":35,"column_start":1,"column_end":74}},{"value":"! generally lead you to interesting places. Still, there are important bits","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1660,"byte_end":1737,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"! you don't want to miss, so read on for a tour of the `async-std` and","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1738,"byte_end":1810,"line_start":37,"line_end":37,"column_start":1,"column_end":73}},{"value":"! its documentation!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1811,"byte_end":1833,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1834,"byte_end":1837,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"! Once you are familiar with the contents of `async-std` you may","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1838,"byte_end":1904,"line_start":40,"line_end":40,"column_start":1,"column_end":67}},{"value":"! begin to find the verbosity of the prose distracting. At this stage in your","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1905,"byte_end":1984,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"! development you may want to press the `[-]` button near the top of the","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":1985,"byte_end":2059,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"! page to collapse it into a more skimmable view.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":2060,"byte_end":2111,"line_start":43,"line_end":43,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":2112,"byte_end":2115,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! While you are looking at that `[-]` button also notice the `[src]`","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":2116,"byte_end":2186,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"! button. Rust's API documentation comes with the source code and you are","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":2187,"byte_end":2262,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"! encouraged to read it. The `async-std` source is generally high","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":2263,"byte_end":2330,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"! quality and a peek behind the curtains is often enlightening.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":2331,"byte_end":2396,"line_start":48,"line_end":48,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":2397,"byte_end":2400,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"! Modules in this crate are organized in the same way as in `std`, except blocking","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":2401,"byte_end":2485,"line_start":50,"line_end":50,"column_start":1,"column_end":85}},{"value":"! functions have been replaced with async functions and threads have been replaced with","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":2486,"byte_end":2575,"line_start":51,"line_end":51,"column_start":1,"column_end":90}},{"value":"! lightweight tasks.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":2576,"byte_end":2598,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":2599,"byte_end":2602,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"! You can find more information, reading materials, and other resources here:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":2603,"byte_end":2682,"line_start":54,"line_end":54,"column_start":1,"column_end":80}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":2683,"byte_end":2686,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! * [The async-std website](https://async.rs/)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":2687,"byte_end":2735,"line_start":56,"line_end":56,"column_start":1,"column_end":49}},{"value":"! * [The async-std book](https://book.async.rs)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":2736,"byte_end":2785,"line_start":57,"line_end":57,"column_start":1,"column_end":50}},{"value":"! * [GitHub repository](https://github.com/async-rs/async-std)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":2786,"byte_end":2850,"line_start":58,"line_end":58,"column_start":1,"column_end":65}},{"value":"! * [List of code examples](https://github.com/async-rs/async-std/tree/master/examples)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":2851,"byte_end":2940,"line_start":59,"line_end":59,"column_start":1,"column_end":90}},{"value":"! * [Discord chat](https://discord.gg/JvZeVNe)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":2941,"byte_end":2989,"line_start":60,"line_end":60,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":2990,"byte_end":2993,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! # What is in the `async-std` documentation?","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":2994,"byte_end":3041,"line_start":62,"line_end":62,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":3042,"byte_end":3045,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"! First, `async-std` is divided into a number of focused","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":3046,"byte_end":3104,"line_start":64,"line_end":64,"column_start":1,"column_end":59}},{"value":"! modules, [all listed further down this page](#modules). These modules are","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":3105,"byte_end":3182,"line_start":65,"line_end":65,"column_start":1,"column_end":78}},{"value":"! the bedrock upon which async Rust is forged, and they have mighty names","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":3183,"byte_end":3258,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"! like [`async_std::os`] and [`async_std::task`]. Modules' documentation","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":3259,"byte_end":3333,"line_start":67,"line_end":67,"column_start":1,"column_end":75}},{"value":"! typically includes an overview of the module along with examples, and are","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":3334,"byte_end":3411,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"! a smart place to start familiarizing yourself with the library.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":3412,"byte_end":3479,"line_start":69,"line_end":69,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":3480,"byte_end":3483,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"! Second, `async-std` defines [The Async Prelude], a small collection","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":3484,"byte_end":3555,"line_start":71,"line_end":71,"column_start":1,"column_end":72}},{"value":"! of items - mostly traits - that should be imported into every module of","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":3556,"byte_end":3631,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"! every async crate. The traits in the prelude are pervasive, making the","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":3632,"byte_end":3706,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"! prelude documentation a good entry point to learning about the library.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":3707,"byte_end":3782,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":3783,"byte_end":3786,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"! [The Async Prelude]: prelude/index.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":3787,"byte_end":3830,"line_start":76,"line_end":76,"column_start":1,"column_end":44}},{"value":"! [`async_std::os`]: os/index.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":3831,"byte_end":3867,"line_start":77,"line_end":77,"column_start":1,"column_end":37}},{"value":"! [`async_std::task`]: task/index.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":3868,"byte_end":3908,"line_start":78,"line_end":78,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":3909,"byte_end":3912,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"! And finally, `async-std` exports a number of async macros, and","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":3913,"byte_end":3979,"line_start":80,"line_end":80,"column_start":1,"column_end":67}},{"value":"! [lists them on this page](#macros).","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":3980,"byte_end":4019,"line_start":81,"line_end":81,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4020,"byte_end":4023,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"! # Contributing changes to the documentation","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4024,"byte_end":4071,"line_start":83,"line_end":83,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4072,"byte_end":4075,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"! Check out `async-std`'s contribution guidelines [here](https://async.rs/contribute).","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4076,"byte_end":4164,"line_start":85,"line_end":85,"column_start":1,"column_end":89}},{"value":"! The source for this documentation can be found on [GitHub](https://github.com/async-rs).","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4165,"byte_end":4257,"line_start":86,"line_end":86,"column_start":1,"column_end":93}},{"value":"! To contribute changes, make sure you read the guidelines first, then submit","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4258,"byte_end":4337,"line_start":87,"line_end":87,"column_start":1,"column_end":80}},{"value":"! pull requests for your suggested changes.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4338,"byte_end":4383,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4384,"byte_end":4387,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"! Contributions are appreciated! If you see a part of the docs that can be","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4388,"byte_end":4464,"line_start":90,"line_end":90,"column_start":1,"column_end":77}},{"value":"! improved, submit a PR, or chat with us first on","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4465,"byte_end":4516,"line_start":91,"line_end":91,"column_start":1,"column_end":52}},{"value":"! [Discord](https://discord.gg/JvZeVNe).","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4517,"byte_end":4559,"line_start":92,"line_end":92,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4560,"byte_end":4563,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"! # A tour of `async-std`","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4564,"byte_end":4591,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4592,"byte_end":4595,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"! The rest of this crate documentation is dedicated to pointing out notable","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4596,"byte_end":4673,"line_start":96,"line_end":96,"column_start":1,"column_end":78}},{"value":"! features of `async-std`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4674,"byte_end":4702,"line_start":97,"line_end":97,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4703,"byte_end":4706,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"! ## Platform abstractions and I/O","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4707,"byte_end":4743,"line_start":99,"line_end":99,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4744,"byte_end":4747,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"! Besides basic data types, `async-std` is largely concerned with","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4748,"byte_end":4815,"line_start":101,"line_end":101,"column_start":1,"column_end":68}},{"value":"! abstracting over differences in common platforms, most notably Windows and","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4816,"byte_end":4894,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"! Unix derivatives.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4895,"byte_end":4916,"line_start":103,"line_end":103,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4917,"byte_end":4920,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"! Common types of I/O, including [files], [TCP], [UDP], are defined in the","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4921,"byte_end":4997,"line_start":105,"line_end":105,"column_start":1,"column_end":77}},{"value":"! [`io`], [`fs`], and [`net`] modules.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":4998,"byte_end":5038,"line_start":106,"line_end":106,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5039,"byte_end":5042,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"! The [`task`] module contains `async-std`'s task abstractions. [`sync`]","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5043,"byte_end":5117,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"! contains further primitive shared memory types, including [`channel`],","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5118,"byte_end":5192,"line_start":109,"line_end":109,"column_start":1,"column_end":75}},{"value":"! which contains the channel types for message passing.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5193,"byte_end":5250,"line_start":110,"line_end":110,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5251,"byte_end":5254,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"! [files]: fs/struct.File.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5255,"byte_end":5287,"line_start":112,"line_end":112,"column_start":1,"column_end":33}},{"value":"! [TCP]: net/struct.TcpStream.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5288,"byte_end":5324,"line_start":113,"line_end":113,"column_start":1,"column_end":37}},{"value":"! [UDP]: net/struct.UdpSocket.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5325,"byte_end":5361,"line_start":114,"line_end":114,"column_start":1,"column_end":37}},{"value":"! [`io`]: fs/struct.File.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5362,"byte_end":5393,"line_start":115,"line_end":115,"column_start":1,"column_end":32}},{"value":"! [`sync`]: sync/index.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5394,"byte_end":5423,"line_start":116,"line_end":116,"column_start":1,"column_end":30}},{"value":"! [`channel`]: sync/fn.channel.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5424,"byte_end":5461,"line_start":117,"line_end":117,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5462,"byte_end":5465,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"! ## Timeouts, intervals, and delays","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5466,"byte_end":5504,"line_start":119,"line_end":119,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5505,"byte_end":5508,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"! `async-std` provides several methods to manipulate time:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5509,"byte_end":5569,"line_start":121,"line_end":121,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5570,"byte_end":5573,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"! * [`task::sleep`] to wait for a duration to pass without blocking.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5574,"byte_end":5644,"line_start":123,"line_end":123,"column_start":1,"column_end":71}},{"value":"! * [`stream::interval`] for emitting an event at a set interval.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5645,"byte_end":5712,"line_start":124,"line_end":124,"column_start":1,"column_end":68}},{"value":"! * [`future::timeout`] to time-out futures if they don't resolve within a","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5713,"byte_end":5789,"line_start":125,"line_end":125,"column_start":1,"column_end":77}},{"value":"!   set interval.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5790,"byte_end":5809,"line_start":126,"line_end":126,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5810,"byte_end":5813,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"! [`task::sleep`]: task/fn.sleep.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5814,"byte_end":5853,"line_start":128,"line_end":128,"column_start":1,"column_end":40}},{"value":"! [`stream::interval`]: stream/fn.interval.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5854,"byte_end":5903,"line_start":129,"line_end":129,"column_start":1,"column_end":50}},{"value":"! [`future::timeout`]: future/fn.timeout.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5904,"byte_end":5951,"line_start":130,"line_end":130,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5952,"byte_end":5955,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5956,"byte_end":5970,"line_start":132,"line_end":132,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5971,"byte_end":5974,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"! All examples require the [`\"attributes\"` feature](#features) to be enabled.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":5975,"byte_end":6054,"line_start":134,"line_end":134,"column_start":1,"column_end":80}},{"value":"! This feature is not enabled by default because it significantly impacts","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6055,"byte_end":6130,"line_start":135,"line_end":135,"column_start":1,"column_end":76}},{"value":"! compile times. See [`task::block_on`] for an alternative way to start","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6131,"byte_end":6204,"line_start":136,"line_end":136,"column_start":1,"column_end":74}},{"value":"! executing tasks.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6205,"byte_end":6225,"line_start":137,"line_end":137,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6226,"byte_end":6229,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"! Call an async function from the main function:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6230,"byte_end":6280,"line_start":139,"line_end":139,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6281,"byte_end":6284,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6285,"byte_end":6292,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"! async fn say_hello() {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6293,"byte_end":6319,"line_start":142,"line_end":142,"column_start":1,"column_end":27}},{"value":"!     println!(\"Hello, world!\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6320,"byte_end":6354,"line_start":143,"line_end":143,"column_start":1,"column_end":35}},{"value":"! }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6355,"byte_end":6360,"line_start":144,"line_end":144,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6361,"byte_end":6364,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"! #[async_std::main]","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6365,"byte_end":6387,"line_start":146,"line_end":146,"column_start":1,"column_end":23}},{"value":"! async fn main() {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6388,"byte_end":6409,"line_start":147,"line_end":147,"column_start":1,"column_end":22}},{"value":"!     say_hello().await;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6410,"byte_end":6436,"line_start":148,"line_end":148,"column_start":1,"column_end":27}},{"value":"! }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6437,"byte_end":6442,"line_start":149,"line_end":149,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6443,"byte_end":6450,"line_start":150,"line_end":150,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6451,"byte_end":6454,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"! Await two futures concurrently, and return a tuple of their output:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6455,"byte_end":6526,"line_start":152,"line_end":152,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6527,"byte_end":6530,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6531,"byte_end":6538,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"! use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6539,"byte_end":6569,"line_start":155,"line_end":155,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6570,"byte_end":6573,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"! #[async_std::main]","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6574,"byte_end":6596,"line_start":157,"line_end":157,"column_start":1,"column_end":23}},{"value":"! async fn main() {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6597,"byte_end":6618,"line_start":158,"line_end":158,"column_start":1,"column_end":22}},{"value":"!     let a = async { 1u8 };","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6619,"byte_end":6649,"line_start":159,"line_end":159,"column_start":1,"column_end":31}},{"value":"!     let b = async { 2u8 };","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6650,"byte_end":6680,"line_start":160,"line_end":160,"column_start":1,"column_end":31}},{"value":"!     assert_eq!(a.join(b).await, (1u8, 2u8))","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6681,"byte_end":6728,"line_start":161,"line_end":161,"column_start":1,"column_end":48}},{"value":"! }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6729,"byte_end":6734,"line_start":162,"line_end":162,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6735,"byte_end":6742,"line_start":163,"line_end":163,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6743,"byte_end":6746,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"! Create a UDP server that echoes back each received message to the sender:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6747,"byte_end":6824,"line_start":165,"line_end":165,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6825,"byte_end":6828,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6829,"byte_end":6842,"line_start":167,"line_end":167,"column_start":1,"column_end":14}},{"value":"! use async_std::net::UdpSocket;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6843,"byte_end":6877,"line_start":168,"line_end":168,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6878,"byte_end":6881,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"! #[async_std::main]","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6882,"byte_end":6904,"line_start":170,"line_end":170,"column_start":1,"column_end":23}},{"value":"! async fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6905,"byte_end":6949,"line_start":171,"line_end":171,"column_start":1,"column_end":45}},{"value":"!     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":6950,"byte_end":7012,"line_start":172,"line_end":172,"column_start":1,"column_end":63}},{"value":"!     println!(\"Listening on {}\", socket.local_addr()?);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7013,"byte_end":7071,"line_start":173,"line_end":173,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7072,"byte_end":7075,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"!     let mut buf = vec![0u8; 1024];","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7076,"byte_end":7114,"line_start":175,"line_end":175,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7115,"byte_end":7118,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"!     loop {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7119,"byte_end":7133,"line_start":177,"line_end":177,"column_start":1,"column_end":15}},{"value":"!         let (recv, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7134,"byte_end":7199,"line_start":178,"line_end":178,"column_start":1,"column_end":66}},{"value":"!         let sent = socket.send_to(&buf[..recv], &peer).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7200,"byte_end":7266,"line_start":179,"line_end":179,"column_start":1,"column_end":67}},{"value":"!         println!(\"Sent {} out of {} bytes to {}\", sent, recv, peer);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7267,"byte_end":7339,"line_start":180,"line_end":180,"column_start":1,"column_end":73}},{"value":"!     }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7340,"byte_end":7349,"line_start":181,"line_end":181,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7350,"byte_end":7355,"line_start":182,"line_end":182,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7356,"byte_end":7363,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"! [`task::block_on`]: task/fn.block_on.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7364,"byte_end":7409,"line_start":184,"line_end":184,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7410,"byte_end":7413,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"! # Features","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7414,"byte_end":7428,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7429,"byte_end":7432,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"! Items marked with","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7433,"byte_end":7454,"line_start":188,"line_end":188,"column_start":1,"column_end":22}},{"value":"! <span","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7455,"byte_end":7464,"line_start":189,"line_end":189,"column_start":1,"column_end":10}},{"value":"!   class=\"module-item stab portability\"","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7465,"byte_end":7507,"line_start":190,"line_end":190,"column_start":1,"column_end":43}},{"value":"!   style=\"display: inline; border-radius: 3px; padding: 2px; font-size: 80%; line-height: 1.2;\"","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7508,"byte_end":7606,"line_start":191,"line_end":191,"column_start":1,"column_end":99}},{"value":"! ><code>unstable</code></span>","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7607,"byte_end":7640,"line_start":192,"line_end":192,"column_start":1,"column_end":34}},{"value":"! are available only when the `unstable` Cargo feature is enabled:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7641,"byte_end":7709,"line_start":193,"line_end":193,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7710,"byte_end":7713,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7714,"byte_end":7725,"line_start":195,"line_end":195,"column_start":1,"column_end":12}},{"value":"! [dependencies.async-std]","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7726,"byte_end":7754,"line_start":196,"line_end":196,"column_start":1,"column_end":29}},{"value":"! version = \"1.0.0\"","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7755,"byte_end":7776,"line_start":197,"line_end":197,"column_start":1,"column_end":22}},{"value":"! features = [\"unstable\"]","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7777,"byte_end":7804,"line_start":198,"line_end":198,"column_start":1,"column_end":28}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7805,"byte_end":7812,"line_start":199,"line_end":199,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7813,"byte_end":7816,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"! Items marked with","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7817,"byte_end":7838,"line_start":201,"line_end":201,"column_start":1,"column_end":22}},{"value":"! <span","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7839,"byte_end":7848,"line_start":202,"line_end":202,"column_start":1,"column_end":10}},{"value":"!   class=\"module-item stab portability\"","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7849,"byte_end":7891,"line_start":203,"line_end":203,"column_start":1,"column_end":43}},{"value":"!   style=\"display: inline; border-radius: 3px; padding: 2px; font-size: 80%; line-height: 1.2;\"","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7892,"byte_end":7990,"line_start":204,"line_end":204,"column_start":1,"column_end":99}},{"value":"! ><code>attributes</code></span>","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":7991,"byte_end":8026,"line_start":205,"line_end":205,"column_start":1,"column_end":36}},{"value":"! are available only when the `attributes` Cargo feature is enabled:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":8027,"byte_end":8097,"line_start":206,"line_end":206,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":8098,"byte_end":8101,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":8102,"byte_end":8113,"line_start":208,"line_end":208,"column_start":1,"column_end":12}},{"value":"! [dependencies.async-std]","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":8114,"byte_end":8142,"line_start":209,"line_end":209,"column_start":1,"column_end":29}},{"value":"! version = \"1.0.0\"","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":8143,"byte_end":8164,"line_start":210,"line_end":210,"column_start":1,"column_end":22}},{"value":"! features = [\"attributes\"]","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":8165,"byte_end":8194,"line_start":211,"line_end":211,"column_start":1,"column_end":30}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":8195,"byte_end":8202,"line_start":212,"line_end":212,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":8203,"byte_end":8206,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"! Additionally it's possible to only use the core traits and combinators by","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":8207,"byte_end":8284,"line_start":214,"line_end":214,"column_start":1,"column_end":78}},{"value":"! only enabling the `std` Cargo feature:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":8285,"byte_end":8327,"line_start":215,"line_end":215,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":8328,"byte_end":8331,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":8332,"byte_end":8343,"line_start":217,"line_end":217,"column_start":1,"column_end":12}},{"value":"! [dependencies.async-std]","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":8344,"byte_end":8372,"line_start":218,"line_end":218,"column_start":1,"column_end":29}},{"value":"! version = \"1.0.0\"","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":8373,"byte_end":8394,"line_start":219,"line_end":219,"column_start":1,"column_end":22}},{"value":"! default-features = false","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":8395,"byte_end":8423,"line_start":220,"line_end":220,"column_start":1,"column_end":29}},{"value":"! features = [\"std\"]","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":8424,"byte_end":8446,"line_start":221,"line_end":221,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":8447,"byte_end":8454,"line_start":222,"line_end":222,"column_start":1,"column_end":8}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":8505,"byte_end":8576,"line_start":225,"line_end":225,"column_start":1,"column_end":72}},{"value":"allow(clippy :: mutex_atomic, clippy :: module_inception)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":8577,"byte_end":8634,"line_start":226,"line_end":226,"column_start":1,"column_end":58}},{"value":"recursion_limit = \"2048\"","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":8822,"byte_end":8850,"line_start":230,"line_end":230,"column_start":1,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":34},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":58},{"krate":0,"index":79},{"krate":0,"index":1391},{"krate":0,"index":1394}],"decl_id":null,"docs":" Asynchronous values.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/utils.rs","byte_start":13436,"byte_end":13459,"line_start":157,"line_end":157,"column_start":13,"column_end":36}},{"value":"! Asynchronous values.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6876880,"byte_end":6876904,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6876905,"byte_end":6876908,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! ## Base Futures Concurrency","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6876909,"byte_end":6876940,"line_start":3,"line_end":3,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6876941,"byte_end":6876944,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! Often it's desireable to await multiple futures as if it was a single","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6876945,"byte_end":6877018,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"! future. The `join` family of operations converts multiple futures into a","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6877019,"byte_end":6877095,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"! single future that returns all of their outputs. The `race` family of","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6877096,"byte_end":6877169,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"! operations converts multiple future into a single future that returns the","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6877170,"byte_end":6877247,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"! first output.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6877248,"byte_end":6877265,"line_start":9,"line_end":9,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6877266,"byte_end":6877269,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! For operating on futures the following functions can be used:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6877270,"byte_end":6877335,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6877336,"byte_end":6877339,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! | Name               | Return signature | When does it return?     |","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6877340,"byte_end":6877412,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"! | ---                | ---              | ---                      |","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6877413,"byte_end":6877485,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"! | [`Future::join`]   | `(T1, T2)`       | Wait for all to complete","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6877486,"byte_end":6877556,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"! | [`Future::race`]   | `T`              | Return on first value","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6877557,"byte_end":6877624,"line_start":16,"line_end":16,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6877625,"byte_end":6877628,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! ## Fallible Futures Concurrency","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6877629,"byte_end":6877664,"line_start":18,"line_end":18,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6877665,"byte_end":6877668,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! For operating on futures that return `Result` additional `try_` variants of","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6877669,"byte_end":6877748,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"! the functions mentioned before can be used. These functions are aware of `Result`,","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6877749,"byte_end":6877835,"line_start":21,"line_end":21,"column_start":1,"column_end":87}},{"value":"! and will behave slightly differently from their base variants.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6877836,"byte_end":6877902,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6877903,"byte_end":6877906,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! In the case of `try_join`, if any of the futures returns `Err` all","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6877907,"byte_end":6877977,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"! futures are dropped and an error is returned. This is referred to as","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6877978,"byte_end":6878050,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"! \"short-circuiting\".","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6878051,"byte_end":6878074,"line_start":26,"line_end":26,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6878075,"byte_end":6878078,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! In the case of `try_race`, instead of returning the first future that","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6878079,"byte_end":6878152,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"! completes it returns the first future that _successfully_ completes. This","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6878153,"byte_end":6878230,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"! means `try_race` will keep going until any one of the futures returns","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6878231,"byte_end":6878304,"line_start":30,"line_end":30,"column_start":1,"column_end":74}},{"value":"! `Ok`, or _all_ futures have returned `Err`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6878305,"byte_end":6878352,"line_start":31,"line_end":31,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6878353,"byte_end":6878356,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! However sometimes it can be useful to use the base variants of the functions","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6878357,"byte_end":6878437,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"! even on futures that return `Result`. Here is an overview of operations that","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6878438,"byte_end":6878518,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"! work on `Result`, and their respective semantics:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6878519,"byte_end":6878572,"line_start":35,"line_end":35,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6878573,"byte_end":6878576,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"! | Name                   | Return signature               | When does it return? |","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6878577,"byte_end":6878663,"line_start":37,"line_end":37,"column_start":1,"column_end":87}},{"value":"! | ---                    | ---                            | ---                  |","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6878664,"byte_end":6878750,"line_start":38,"line_end":38,"column_start":1,"column_end":87}},{"value":"! | [`Future::join`]       | `(Result<T, E>, Result<T, E>)` | Wait for all to complete","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6878751,"byte_end":6878839,"line_start":39,"line_end":39,"column_start":1,"column_end":89}},{"value":"! | [`Future::try_join`]   | `Result<(T1, T2), E>`          | Return on first `Err`, wait for all to complete","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6878840,"byte_end":6878951,"line_start":40,"line_end":40,"column_start":1,"column_end":112}},{"value":"! | [`Future::race`]       | `Result<T, E>`                 | Return on first value","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6878952,"byte_end":6879037,"line_start":41,"line_end":41,"column_start":1,"column_end":86}},{"value":"! | [`Future::try_race`]   | `Result<T, E>`                 | Return on first `Ok`, reject on last Err","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6879038,"byte_end":6879142,"line_start":42,"line_end":42,"column_start":1,"column_end":105}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6879143,"byte_end":6879146,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! [`Future::join`]: trait.Future.html#method.join","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6879147,"byte_end":6879198,"line_start":44,"line_end":44,"column_start":1,"column_end":52}},{"value":"! [`Future::try_join`]: trait.Future.html#method.try_join","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6879199,"byte_end":6879258,"line_start":45,"line_end":45,"column_start":1,"column_end":60}},{"value":"! [`Future::race`]: trait.Future.html#method.race","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6879259,"byte_end":6879310,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"! [`Future::try_race`]: trait.Future.html#method.try_race","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/mod.rs","byte_start":6879311,"byte_end":6879370,"line_start":47,"line_end":47,"column_start":1,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":1388},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/future/mod.rs","byte_start":6885431,"byte_end":6885440,"line_start":139,"line_end":139,"column_start":15,"column_end":24},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[],"decl_id":null,"docs":"\n        Extension methods for [`Future`].","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":47},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6896000,"byte_end":6896007,"line_start":27,"line_end":27,"column_start":14,"column_end":21},"name":"pending","qualname":"::future::pending::pending","value":"fn <T> () -> T","parent":null,"children":[],"decl_id":null,"docs":" Never resolves to a value.","sig":null,"attributes":[{"value":"/ Never resolves to a value.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6895608,"byte_end":6895638,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6895639,"byte_end":6895642,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6895643,"byte_end":6895657,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6895658,"byte_end":6895661,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6895662,"byte_end":6895669,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6895670,"byte_end":6895709,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6895710,"byte_end":6895715,"line_start":13,"line_end":13,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6895716,"byte_end":6895744,"line_start":14,"line_end":14,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6895745,"byte_end":6895748,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ use async_std::future;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6895749,"byte_end":6895775,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/ use async_std::io;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6895776,"byte_end":6895798,"line_start":17,"line_end":17,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6895799,"byte_end":6895802,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ let dur = Duration::from_secs(1);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6895803,"byte_end":6895840,"line_start":19,"line_end":19,"column_start":1,"column_end":38}},{"value":"/ let fut = future::pending();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6895841,"byte_end":6895873,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6895874,"byte_end":6895877,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let res: io::Result<()> = io::timeout(dur, fut).await;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6895878,"byte_end":6895936,"line_start":22,"line_end":22,"column_start":1,"column_end":59}},{"value":"/ assert!(res.is_err());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6895937,"byte_end":6895963,"line_start":23,"line_end":23,"column_start":1,"column_end":27}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6895964,"byte_end":6895969,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6895970,"byte_end":6895978,"line_start":25,"line_end":25,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6895979,"byte_end":6895986,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":64},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6896942,"byte_end":6896949,"line_start":26,"line_end":26,"column_start":14,"column_end":21},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"fn <F, T> (f: F) -> T","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6896427,"byte_end":6896498,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6896499,"byte_end":6896502,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6896503,"byte_end":6896569,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6896570,"byte_end":6896573,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6896574,"byte_end":6896588,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6896589,"byte_end":6896592,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6896593,"byte_end":6896600,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6896601,"byte_end":6896640,"line_start":13,"line_end":13,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6896641,"byte_end":6896646,"line_start":14,"line_end":14,"column_start":1,"column_end":6}},{"value":"/ use async_std::future;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6896647,"byte_end":6896673,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/ use async_std::task::{Context, Poll};","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6896674,"byte_end":6896715,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6896716,"byte_end":6896719,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ fn poll_greeting(_: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6896720,"byte_end":6896779,"line_start":18,"line_end":18,"column_start":1,"column_end":60}},{"value":"/     Poll::Ready(\"hello world\".to_string())","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6896780,"byte_end":6896826,"line_start":19,"line_end":19,"column_start":1,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6896827,"byte_end":6896832,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6896833,"byte_end":6896836,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(future::poll_fn(poll_greeting).await, \"hello world\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6896837,"byte_end":6896905,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6896906,"byte_end":6896911,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6896912,"byte_end":6896920,"line_start":24,"line_end":24,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6896921,"byte_end":6896928,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":80},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/ready.rs","byte_start":6897778,"byte_end":6897783,"line_start":18,"line_end":18,"column_start":14,"column_end":19},"name":"ready","qualname":"::future::ready::ready","value":"fn <T> (val: T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Resolves to the provided value.","sig":null,"attributes":[{"value":"/ Resolves to the provided value.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/ready.rs","byte_start":6897389,"byte_end":6897424,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/ready.rs","byte_start":6897425,"byte_end":6897428,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::convert::identity`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/ready.rs","byte_start":6897429,"byte_end":6897497,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/ready.rs","byte_start":6897498,"byte_end":6897501,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`std::convert::identity`]: https://doc.rust-lang.org/std/convert/fn.identity.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/ready.rs","byte_start":6897502,"byte_end":6897588,"line_start":5,"line_end":5,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/ready.rs","byte_start":6897589,"byte_end":6897592,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/ready.rs","byte_start":6897593,"byte_end":6897607,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/ready.rs","byte_start":6897608,"byte_end":6897611,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/ready.rs","byte_start":6897612,"byte_end":6897619,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/ready.rs","byte_start":6897620,"byte_end":6897659,"line_start":10,"line_end":10,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/ready.rs","byte_start":6897660,"byte_end":6897665,"line_start":11,"line_end":11,"column_start":1,"column_end":6}},{"value":"/ use async_std::future;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/ready.rs","byte_start":6897666,"byte_end":6897692,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/ready.rs","byte_start":6897693,"byte_end":6897696,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(future::ready(10).await, 10);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/ready.rs","byte_start":6897697,"byte_end":6897741,"line_start":14,"line_end":14,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/ready.rs","byte_start":6897742,"byte_end":6897747,"line_start":15,"line_end":15,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/ready.rs","byte_start":6897748,"byte_end":6897756,"line_start":16,"line_end":16,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/ready.rs","byte_start":6897757,"byte_end":6897764,"line_start":17,"line_end":17,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1405},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7103507,"byte_end":7103514,"line_start":32,"line_end":32,"column_start":14,"column_end":21},"name":"timeout","qualname":"::future::timeout::timeout","value":"fn <F, T> (dur: Duration, f: F) -> Result<T, TimeoutError>","parent":null,"children":[],"decl_id":null,"docs":" Awaits a future or times out after a duration of time.","sig":null,"attributes":[{"value":"/ Awaits a future or times out after a duration of time.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7102979,"byte_end":7103037,"line_start":12,"line_end":12,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7103038,"byte_end":7103041,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ If you want to await an I/O future consider using","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7103042,"byte_end":7103095,"line_start":14,"line_end":14,"column_start":1,"column_end":54}},{"value":"/ [`io::timeout`](../io/fn.timeout.html) instead.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7103096,"byte_end":7103147,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7103148,"byte_end":7103151,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7103152,"byte_end":7103166,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7103167,"byte_end":7103170,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7103171,"byte_end":7103178,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7103179,"byte_end":7103253,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7103254,"byte_end":7103259,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7103260,"byte_end":7103288,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7103289,"byte_end":7103292,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ use async_std::future;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7103293,"byte_end":7103319,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7103320,"byte_end":7103323,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let never = future::pending::<()>();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7103324,"byte_end":7103364,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"/ let dur = Duration::from_millis(5);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7103365,"byte_end":7103404,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ assert!(future::timeout(dur, never).await.is_err());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7103405,"byte_end":7103461,"line_start":28,"line_end":28,"column_start":1,"column_end":57}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7103462,"byte_end":7103467,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7103468,"byte_end":7103485,"line_start":30,"line_end":30,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7103486,"byte_end":7103493,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1420},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7104712,"byte_end":7104724,"line_start":77,"line_end":77,"column_start":12,"column_end":24},"name":"TimeoutError","qualname":"::future::timeout::TimeoutError","value":"TimeoutError {  }","parent":null,"children":[{"krate":0,"index":1421}],"decl_id":null,"docs":" An error returned when a future times out.\n","sig":null,"attributes":[{"value":"/ An error returned when a future times out.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7104609,"byte_end":7104655,"line_start":75,"line_end":75,"column_start":1,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":84},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":1434},{"krate":0,"index":1441},{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1448},{"krate":0,"index":1449},{"krate":0,"index":1450},{"krate":0,"index":1453},{"krate":0,"index":1454},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1471},{"krate":0,"index":1565},{"krate":0,"index":1759},{"krate":0,"index":1781},{"krate":0,"index":1883},{"krate":0,"index":1901},{"krate":0,"index":1948},{"krate":0,"index":1986},{"krate":0,"index":2011},{"krate":0,"index":2057},{"krate":0,"index":2078},{"krate":0,"index":2094},{"krate":0,"index":2236},{"krate":0,"index":2239},{"krate":0,"index":2242},{"krate":0,"index":2245},{"krate":0,"index":2248},{"krate":0,"index":2249},{"krate":0,"index":2269},{"krate":0,"index":2289},{"krate":0,"index":2314},{"krate":0,"index":2326}],"decl_id":null,"docs":" Traits, helpers, and type definitions for core I/O functionality.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/utils.rs","byte_start":13436,"byte_end":13459,"line_start":157,"line_end":157,"column_start":13,"column_end":36}},{"value":"! Traits, helpers, and type definitions for core I/O functionality.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6897833,"byte_end":6897902,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6897903,"byte_end":6897906,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The `async_std::io` module contains a number of common things you'll need","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6897907,"byte_end":6897984,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"! when doing input and output. The most core part of this module is","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6897985,"byte_end":6898054,"line_start":4,"line_end":4,"column_start":1,"column_end":70}},{"value":"! the [`Read`] and [`Write`] traits, which provide the","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6898055,"byte_end":6898111,"line_start":5,"line_end":5,"column_start":1,"column_end":57}},{"value":"! most general interface for reading and writing input and output.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6898112,"byte_end":6898180,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6898181,"byte_end":6898184,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! This module is an async version of [`std::io`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6898185,"byte_end":6898236,"line_start":8,"line_end":8,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6898237,"byte_end":6898240,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! [`std::io`]: https://doc.rust-lang.org/std/io/index.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6898241,"byte_end":6898301,"line_start":10,"line_end":10,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6898302,"byte_end":6898305,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! # Read and Write","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6898306,"byte_end":6898326,"line_start":12,"line_end":12,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6898327,"byte_end":6898330,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! Because they are traits, [`Read`] and [`Write`] are implemented by a number","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6898331,"byte_end":6898410,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"! of other types, and you can implement them for your types too. As such,","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6898411,"byte_end":6898486,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"! you'll see a few different types of I/O throughout the documentation in","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6898487,"byte_end":6898562,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"! this module: [`File`]s, [`TcpStream`]s, and sometimes even [`Vec<T>`]s. For","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6898563,"byte_end":6898642,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"! example, [`Read`] adds a [`read`][`Read::read`] method, which we can use on","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6898643,"byte_end":6898722,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"! [`File`]s:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6898723,"byte_end":6898737,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6898738,"byte_end":6898741,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6898742,"byte_end":6898755,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"! use async_std::fs::File;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6898756,"byte_end":6898784,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"! use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6898785,"byte_end":6898815,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6898816,"byte_end":6898819,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6898820,"byte_end":6898894,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6898895,"byte_end":6898900,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"! let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6898901,"byte_end":6898946,"line_start":27,"line_end":27,"column_start":1,"column_end":46}},{"value":"! let mut buffer = [0; 10];","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6898947,"byte_end":6898976,"line_start":28,"line_end":28,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6898977,"byte_end":6898980,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! // read up to 10 bytes","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6898981,"byte_end":6899007,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"! let n = f.read(&mut buffer).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6899008,"byte_end":6899047,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6899048,"byte_end":6899051,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6899052,"byte_end":6899098,"line_start":33,"line_end":33,"column_start":1,"column_end":47}},{"value":"! #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6899099,"byte_end":6899104,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6899105,"byte_end":6899122,"line_start":35,"line_end":35,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6899123,"byte_end":6899130,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6899131,"byte_end":6899134,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! [`Read`] and [`Write`] are so important, implementors of the two traits have a","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6899135,"byte_end":6899217,"line_start":38,"line_end":38,"column_start":1,"column_end":83}},{"value":"! nickname: readers and writers. So you'll sometimes see 'a reader' instead","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6899218,"byte_end":6899295,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"! of 'a type that implements the [`Read`] trait'. Much easier!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6899296,"byte_end":6899360,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6899361,"byte_end":6899364,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! ## Seek and BufRead","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6899365,"byte_end":6899388,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6899389,"byte_end":6899392,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! Beyond that, there are two important traits that are provided: [`Seek`]","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6899393,"byte_end":6899468,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"! and [`BufRead`]. Both of these build on top of a reader to control","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6899469,"byte_end":6899539,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"! how the reading happens. [`Seek`] lets you control where the next byte is","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6899540,"byte_end":6899617,"line_start":46,"line_end":46,"column_start":1,"column_end":78}},{"value":"! coming from:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6899618,"byte_end":6899634,"line_start":47,"line_end":47,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6899635,"byte_end":6899638,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6899639,"byte_end":6899652,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"! use async_std::fs::File;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6899653,"byte_end":6899681,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"! use async_std::io::SeekFrom;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6899682,"byte_end":6899714,"line_start":51,"line_end":51,"column_start":1,"column_end":33}},{"value":"! use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6899715,"byte_end":6899745,"line_start":52,"line_end":52,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6899746,"byte_end":6899749,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6899750,"byte_end":6899824,"line_start":54,"line_end":54,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6899825,"byte_end":6899830,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"! let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6899831,"byte_end":6899876,"line_start":56,"line_end":56,"column_start":1,"column_end":46}},{"value":"! let mut buffer = [0; 10];","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6899877,"byte_end":6899906,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6899907,"byte_end":6899910,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! // skip to the last 10 bytes of the file","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6899911,"byte_end":6899955,"line_start":59,"line_end":59,"column_start":1,"column_end":45}},{"value":"! f.seek(SeekFrom::End(-10)).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6899956,"byte_end":6899994,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6899995,"byte_end":6899998,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! // read up to 10 bytes","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6899999,"byte_end":6900025,"line_start":62,"line_end":62,"column_start":1,"column_end":27}},{"value":"! let n = f.read(&mut buffer).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6900026,"byte_end":6900065,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6900066,"byte_end":6900069,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"! println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6900070,"byte_end":6900116,"line_start":65,"line_end":65,"column_start":1,"column_end":47}},{"value":"! #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6900117,"byte_end":6900122,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6900123,"byte_end":6900140,"line_start":67,"line_end":67,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6900141,"byte_end":6900148,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6900149,"byte_end":6900152,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! [`BufRead`] uses an internal buffer to provide a number of other ways to read, but","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6900153,"byte_end":6900239,"line_start":70,"line_end":70,"column_start":1,"column_end":87}},{"value":"! to show it off, we'll need to talk about buffers in general. Keep reading!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6900240,"byte_end":6900318,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6900319,"byte_end":6900322,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"! ## BufReader and BufWriter","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6900323,"byte_end":6900353,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6900354,"byte_end":6900357,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"! Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6900358,"byte_end":6900439,"line_start":75,"line_end":75,"column_start":1,"column_end":82}},{"value":"! making near-constant calls to the operating system. To help with this,","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6900440,"byte_end":6900514,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"! `std::io` comes with two structs, [`BufReader`] and [`BufWriter`], which wrap","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6900515,"byte_end":6900596,"line_start":77,"line_end":77,"column_start":1,"column_end":82}},{"value":"! readers and writers. The wrapper uses a buffer, reducing the number of","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6900597,"byte_end":6900671,"line_start":78,"line_end":78,"column_start":1,"column_end":75}},{"value":"! calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6900672,"byte_end":6900746,"line_start":79,"line_end":79,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6900747,"byte_end":6900750,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! For example, [`BufReader`] works with the [`BufRead`] trait to add extra","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6900751,"byte_end":6900827,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"! methods to any reader:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6900828,"byte_end":6900854,"line_start":82,"line_end":82,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6900855,"byte_end":6900858,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6900859,"byte_end":6900872,"line_start":84,"line_end":84,"column_start":1,"column_end":14}},{"value":"! use async_std::fs::File;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6900873,"byte_end":6900901,"line_start":85,"line_end":85,"column_start":1,"column_end":29}},{"value":"! use async_std::io::BufReader;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6900902,"byte_end":6900935,"line_start":86,"line_end":86,"column_start":1,"column_end":34}},{"value":"! use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6900936,"byte_end":6900966,"line_start":87,"line_end":87,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6900967,"byte_end":6900970,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6900971,"byte_end":6901045,"line_start":89,"line_end":89,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6901046,"byte_end":6901051,"line_start":90,"line_end":90,"column_start":1,"column_end":6}},{"value":"! let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6901052,"byte_end":6901093,"line_start":91,"line_end":91,"column_start":1,"column_end":42}},{"value":"! let mut reader = BufReader::new(f);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6901094,"byte_end":6901133,"line_start":92,"line_end":92,"column_start":1,"column_end":40}},{"value":"! let mut buffer = String::new();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6901134,"byte_end":6901169,"line_start":93,"line_end":93,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6901170,"byte_end":6901173,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"! // read a line into buffer","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6901174,"byte_end":6901204,"line_start":95,"line_end":95,"column_start":1,"column_end":31}},{"value":"! reader.read_line(&mut buffer).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6901205,"byte_end":6901246,"line_start":96,"line_end":96,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6901247,"byte_end":6901250,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"! println!(\"{}\", buffer);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6901251,"byte_end":6901278,"line_start":98,"line_end":98,"column_start":1,"column_end":28}},{"value":"! #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6901279,"byte_end":6901284,"line_start":99,"line_end":99,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6901285,"byte_end":6901302,"line_start":100,"line_end":100,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6901303,"byte_end":6901310,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6901311,"byte_end":6901314,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"! [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6901315,"byte_end":6901396,"line_start":103,"line_end":103,"column_start":1,"column_end":82}},{"value":"! to [`write`][`Write::write`]:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6901397,"byte_end":6901430,"line_start":104,"line_end":104,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6901431,"byte_end":6901434,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6901435,"byte_end":6901448,"line_start":106,"line_end":106,"column_start":1,"column_end":14}},{"value":"! use async_std::fs::File;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6901449,"byte_end":6901477,"line_start":107,"line_end":107,"column_start":1,"column_end":29}},{"value":"! use async_std::io::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6901478,"byte_end":6901512,"line_start":108,"line_end":108,"column_start":1,"column_end":35}},{"value":"! use async_std::io::BufWriter;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6901513,"byte_end":6901546,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6901547,"byte_end":6901550,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6901551,"byte_end":6901625,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6901626,"byte_end":6901631,"line_start":112,"line_end":112,"column_start":1,"column_end":6}},{"value":"! let f = File::create(\"foo.txt\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6901632,"byte_end":6901675,"line_start":113,"line_end":113,"column_start":1,"column_end":44}},{"value":"! {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6901676,"byte_end":6901681,"line_start":114,"line_end":114,"column_start":1,"column_end":6}},{"value":"!     let mut writer = BufWriter::new(f);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6901682,"byte_end":6901725,"line_start":115,"line_end":115,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6901726,"byte_end":6901729,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"!     // write a byte to the buffer","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6901730,"byte_end":6901767,"line_start":117,"line_end":117,"column_start":1,"column_end":38}},{"value":"!     writer.write(&[42]).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6901768,"byte_end":6901803,"line_start":118,"line_end":118,"column_start":1,"column_end":36}},{"value":"! } // the buffer is flushed once writer goes out of scope","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6901804,"byte_end":6901864,"line_start":119,"line_end":119,"column_start":1,"column_end":61}},{"value":"! //","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6901865,"byte_end":6901871,"line_start":120,"line_end":120,"column_start":1,"column_end":7}},{"value":"! #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6901872,"byte_end":6901877,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6901878,"byte_end":6901895,"line_start":122,"line_end":122,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6901896,"byte_end":6901903,"line_start":123,"line_end":123,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6901904,"byte_end":6901907,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"! ## Standard input and output","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6901908,"byte_end":6901940,"line_start":125,"line_end":125,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6901941,"byte_end":6901944,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"! A very common source of input is standard input:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6901945,"byte_end":6901997,"line_start":127,"line_end":127,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6901998,"byte_end":6902001,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6902002,"byte_end":6902015,"line_start":129,"line_end":129,"column_start":1,"column_end":14}},{"value":"! use async_std::io;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6902016,"byte_end":6902038,"line_start":130,"line_end":130,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6902039,"byte_end":6902042,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6902043,"byte_end":6902117,"line_start":132,"line_end":132,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6902118,"byte_end":6902123,"line_start":133,"line_end":133,"column_start":1,"column_end":6}},{"value":"! let mut input = String::new();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6902124,"byte_end":6902158,"line_start":134,"line_end":134,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6902159,"byte_end":6902162,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"! io::stdin().read_line(&mut input).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6902163,"byte_end":6902208,"line_start":136,"line_end":136,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6902209,"byte_end":6902212,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"! println!(\"You typed: {}\", input.trim());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6902213,"byte_end":6902257,"line_start":138,"line_end":138,"column_start":1,"column_end":45}},{"value":"! #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6902258,"byte_end":6902263,"line_start":139,"line_end":139,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6902264,"byte_end":6902281,"line_start":140,"line_end":140,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6902282,"byte_end":6902289,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6902290,"byte_end":6902293,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"! Note that you cannot use the [`?` operator] in functions that do not return","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6902294,"byte_end":6902373,"line_start":143,"line_end":143,"column_start":1,"column_end":80}},{"value":"! a [`Result<T, E>`][`Result`]. Instead, you can call [`.unwrap()`]","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6902374,"byte_end":6902443,"line_start":144,"line_end":144,"column_start":1,"column_end":70}},{"value":"! or `match` on the return value to catch any possible errors:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6902444,"byte_end":6902508,"line_start":145,"line_end":145,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6902509,"byte_end":6902512,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6902513,"byte_end":6902526,"line_start":147,"line_end":147,"column_start":1,"column_end":14}},{"value":"! use async_std::io;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6902527,"byte_end":6902549,"line_start":148,"line_end":148,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6902550,"byte_end":6902553,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6902554,"byte_end":6902628,"line_start":150,"line_end":150,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6902629,"byte_end":6902634,"line_start":151,"line_end":151,"column_start":1,"column_end":6}},{"value":"! let mut input = String::new();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6902635,"byte_end":6902669,"line_start":152,"line_end":152,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6902670,"byte_end":6902673,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"! io::stdin().read_line(&mut input).await.unwrap();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6902674,"byte_end":6902727,"line_start":154,"line_end":154,"column_start":1,"column_end":54}},{"value":"! #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6902728,"byte_end":6902733,"line_start":155,"line_end":155,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6902734,"byte_end":6902751,"line_start":156,"line_end":156,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6902752,"byte_end":6902759,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6902760,"byte_end":6902763,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"! And a very common source of output is standard output:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6902764,"byte_end":6902822,"line_start":159,"line_end":159,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6902823,"byte_end":6902826,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6902827,"byte_end":6902840,"line_start":161,"line_end":161,"column_start":1,"column_end":14}},{"value":"! use async_std::io;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6902841,"byte_end":6902863,"line_start":162,"line_end":162,"column_start":1,"column_end":23}},{"value":"! use async_std::io::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6902864,"byte_end":6902898,"line_start":163,"line_end":163,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6902899,"byte_end":6902902,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6902903,"byte_end":6902977,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6902978,"byte_end":6902983,"line_start":166,"line_end":166,"column_start":1,"column_end":6}},{"value":"! io::stdout().write(&[42]).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6902984,"byte_end":6903021,"line_start":167,"line_end":167,"column_start":1,"column_end":38}},{"value":"! #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6903022,"byte_end":6903027,"line_start":168,"line_end":168,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6903028,"byte_end":6903045,"line_start":169,"line_end":169,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6903046,"byte_end":6903053,"line_start":170,"line_end":170,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6903054,"byte_end":6903057,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"! Of course, using [`io::stdout`] directly is less common than something like","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6903058,"byte_end":6903137,"line_start":172,"line_end":172,"column_start":1,"column_end":80}},{"value":"! [`println!`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6903138,"byte_end":6903155,"line_start":173,"line_end":173,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6903156,"byte_end":6903159,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"! ## Iterator types","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6903160,"byte_end":6903181,"line_start":175,"line_end":175,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6903182,"byte_end":6903185,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"! A large number of the structures provided by `std::io` are for various","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6903186,"byte_end":6903260,"line_start":177,"line_end":177,"column_start":1,"column_end":75}},{"value":"! ways of iterating over I/O. For example, [`Lines`] is used to split over","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6903261,"byte_end":6903337,"line_start":178,"line_end":178,"column_start":1,"column_end":77}},{"value":"! lines:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6903338,"byte_end":6903348,"line_start":179,"line_end":179,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6903349,"byte_end":6903352,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6903353,"byte_end":6903366,"line_start":181,"line_end":181,"column_start":1,"column_end":14}},{"value":"! use async_std::fs::File;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6903367,"byte_end":6903395,"line_start":182,"line_end":182,"column_start":1,"column_end":29}},{"value":"! use async_std::io::BufReader;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6903396,"byte_end":6903429,"line_start":183,"line_end":183,"column_start":1,"column_end":34}},{"value":"! use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6903430,"byte_end":6903460,"line_start":184,"line_end":184,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6903461,"byte_end":6903464,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6903465,"byte_end":6903539,"line_start":186,"line_end":186,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6903540,"byte_end":6903545,"line_start":187,"line_end":187,"column_start":1,"column_end":6}},{"value":"! let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6903546,"byte_end":6903587,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"! let reader = BufReader::new(f);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6903588,"byte_end":6903623,"line_start":189,"line_end":189,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6903624,"byte_end":6903627,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"! let mut lines = reader.lines();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6903628,"byte_end":6903663,"line_start":191,"line_end":191,"column_start":1,"column_end":36}},{"value":"! while let Some(line) = lines.next().await {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6903664,"byte_end":6903711,"line_start":192,"line_end":192,"column_start":1,"column_end":48}},{"value":"!     println!(\"{}\", line?);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6903712,"byte_end":6903742,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"! }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6903743,"byte_end":6903748,"line_start":194,"line_end":194,"column_start":1,"column_end":6}},{"value":"! #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6903749,"byte_end":6903754,"line_start":195,"line_end":195,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6903755,"byte_end":6903772,"line_start":196,"line_end":196,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6903773,"byte_end":6903780,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6903781,"byte_end":6903784,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"! ## Functions","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6903785,"byte_end":6903801,"line_start":199,"line_end":199,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6903802,"byte_end":6903805,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"! There are a number of [functions][functions-list] that offer access to various","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6903806,"byte_end":6903888,"line_start":201,"line_end":201,"column_start":1,"column_end":83}},{"value":"! features. For example, we can use three of these functions to copy everything","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6903889,"byte_end":6903970,"line_start":202,"line_end":202,"column_start":1,"column_end":82}},{"value":"! from standard input to standard output:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6903971,"byte_end":6904014,"line_start":203,"line_end":203,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6904015,"byte_end":6904018,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6904019,"byte_end":6904032,"line_start":205,"line_end":205,"column_start":1,"column_end":14}},{"value":"! use async_std::io;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6904033,"byte_end":6904055,"line_start":206,"line_end":206,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6904056,"byte_end":6904059,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6904060,"byte_end":6904134,"line_start":208,"line_end":208,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6904135,"byte_end":6904140,"line_start":209,"line_end":209,"column_start":1,"column_end":6}},{"value":"! io::copy(&mut io::stdin(), &mut io::stdout()).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6904141,"byte_end":6904198,"line_start":210,"line_end":210,"column_start":1,"column_end":58}},{"value":"! #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6904199,"byte_end":6904204,"line_start":211,"line_end":211,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6904205,"byte_end":6904222,"line_start":212,"line_end":212,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6904223,"byte_end":6904230,"line_start":213,"line_end":213,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6904231,"byte_end":6904234,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"! [functions-list]: #functions-1","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6904235,"byte_end":6904269,"line_start":215,"line_end":215,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6904270,"byte_end":6904273,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"! ## io::Result","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6904274,"byte_end":6904291,"line_start":217,"line_end":217,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6904292,"byte_end":6904295,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"! Last, but certainly not least, is [`io::Result`]. This type is used","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6904296,"byte_end":6904367,"line_start":219,"line_end":219,"column_start":1,"column_end":72}},{"value":"! as the return type of many `std::io` functions that can cause an error, and","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6904368,"byte_end":6904447,"line_start":220,"line_end":220,"column_start":1,"column_end":80}},{"value":"! can be returned from your own functions as well. Many of the examples in this","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6904448,"byte_end":6904529,"line_start":221,"line_end":221,"column_start":1,"column_end":82}},{"value":"! module use the [`?` operator]:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6904530,"byte_end":6904564,"line_start":222,"line_end":222,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6904565,"byte_end":6904568,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6904569,"byte_end":6904576,"line_start":224,"line_end":224,"column_start":1,"column_end":8}},{"value":"! #![allow(dead_code)]","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6904577,"byte_end":6904601,"line_start":225,"line_end":225,"column_start":1,"column_end":25}},{"value":"! use async_std::io;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6904602,"byte_end":6904624,"line_start":226,"line_end":226,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6904625,"byte_end":6904628,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"! async fn read_input() -> io::Result<()> {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6904629,"byte_end":6904674,"line_start":228,"line_end":228,"column_start":1,"column_end":46}},{"value":"!     let mut input = String::new();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6904675,"byte_end":6904713,"line_start":229,"line_end":229,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6904714,"byte_end":6904717,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"!     io::stdin().read_line(&mut input).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6904718,"byte_end":6904767,"line_start":231,"line_end":231,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6904768,"byte_end":6904771,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"!     println!(\"You typed: {}\", input.trim());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6904772,"byte_end":6904820,"line_start":233,"line_end":233,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6904821,"byte_end":6904824,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"!     Ok(())","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6904825,"byte_end":6904839,"line_start":235,"line_end":235,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6904840,"byte_end":6904845,"line_start":236,"line_end":236,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6904846,"byte_end":6904853,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6904854,"byte_end":6904857,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"! The return type of `read_input`, [`io::Result<()>`][`io::Result`], is a very","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6904858,"byte_end":6904938,"line_start":239,"line_end":239,"column_start":1,"column_end":81}},{"value":"! common type for functions which don't have a 'real' return value, but do want to","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6904939,"byte_end":6905023,"line_start":240,"line_end":240,"column_start":1,"column_end":85}},{"value":"! return errors if they happen. In this case, the only purpose of this function is","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6905024,"byte_end":6905108,"line_start":241,"line_end":241,"column_start":1,"column_end":85}},{"value":"! to read the line and print it, so we use `()`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6905109,"byte_end":6905159,"line_start":242,"line_end":242,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6905160,"byte_end":6905163,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"! ## Platform-specific behavior","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6905164,"byte_end":6905197,"line_start":244,"line_end":244,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6905198,"byte_end":6905201,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"! Many I/O functions throughout the standard library are documented to indicate","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6905202,"byte_end":6905283,"line_start":246,"line_end":246,"column_start":1,"column_end":82}},{"value":"! what various library or syscalls they are delegated to. This is done to help","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6905284,"byte_end":6905364,"line_start":247,"line_end":247,"column_start":1,"column_end":81}},{"value":"! applications both understand what's happening under the hood as well as investigate","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6905365,"byte_end":6905452,"line_start":248,"line_end":248,"column_start":1,"column_end":88}},{"value":"! any possibly unclear semantics. Note, however, that this is informative, not a binding","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6905453,"byte_end":6905543,"line_start":249,"line_end":249,"column_start":1,"column_end":91}},{"value":"! contract. The implementation of many of these functions are subject to change over","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6905544,"byte_end":6905630,"line_start":250,"line_end":250,"column_start":1,"column_end":87}},{"value":"! time and may call fewer or more syscalls/library functions.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6905631,"byte_end":6905694,"line_start":251,"line_end":251,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6905695,"byte_end":6905698,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"! [`Read`]: trait.Read.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6905699,"byte_end":6905728,"line_start":253,"line_end":253,"column_start":1,"column_end":30}},{"value":"! [`Write`]: trait.Write.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6905729,"byte_end":6905760,"line_start":254,"line_end":254,"column_start":1,"column_end":32}},{"value":"! [`Seek`]: trait.Seek.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6905761,"byte_end":6905790,"line_start":255,"line_end":255,"column_start":1,"column_end":30}},{"value":"! [`BufRead`]: trait.BufRead.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6905791,"byte_end":6905826,"line_start":256,"line_end":256,"column_start":1,"column_end":36}},{"value":"! [`File`]: ../fs/struct.File.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6905827,"byte_end":6905863,"line_start":257,"line_end":257,"column_start":1,"column_end":37}},{"value":"! [`TcpStream`]: ../net/struct.TcpStream.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6905864,"byte_end":6905911,"line_start":258,"line_end":258,"column_start":1,"column_end":48}},{"value":"! [`Vec<T>`]: ../vec/struct.Vec.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6905912,"byte_end":6905950,"line_start":259,"line_end":259,"column_start":1,"column_end":39}},{"value":"! [`BufReader`]: struct.BufReader.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6905951,"byte_end":6905991,"line_start":260,"line_end":260,"column_start":1,"column_end":41}},{"value":"! [`BufWriter`]: struct.BufWriter.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6905992,"byte_end":6906032,"line_start":261,"line_end":261,"column_start":1,"column_end":41}},{"value":"! [`Write::write`]: trait.Write.html#tymethod.write","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6906033,"byte_end":6906086,"line_start":262,"line_end":262,"column_start":1,"column_end":54}},{"value":"! [`io::stdout`]: fn.stdout.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6906087,"byte_end":6906121,"line_start":263,"line_end":263,"column_start":1,"column_end":35}},{"value":"! [`println!`]: ../macro.println.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6906122,"byte_end":6906161,"line_start":264,"line_end":264,"column_start":1,"column_end":40}},{"value":"! [`Lines`]: struct.Lines.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6906162,"byte_end":6906194,"line_start":265,"line_end":265,"column_start":1,"column_end":33}},{"value":"! [`io::Result`]: type.Result.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6906195,"byte_end":6906231,"line_start":266,"line_end":266,"column_start":1,"column_end":37}},{"value":"! [`?` operator]: https://doc.rust-lang.org/stable/book/appendix-02-operators.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6906232,"byte_end":6906316,"line_start":267,"line_end":267,"column_start":1,"column_end":85}},{"value":"! [`Read::read`]: trait.Read.html#tymethod.read","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6906317,"byte_end":6906366,"line_start":268,"line_end":268,"column_start":1,"column_end":50}},{"value":"! [`Result`]: https://doc.rust-lang.org/std/result/enum.Result.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6906367,"byte_end":6906436,"line_start":269,"line_end":269,"column_start":1,"column_end":70}},{"value":"! [`.unwrap()`]: https://doc.rust-lang.org/std/result/enum.Result.html#method.unwrap","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6906437,"byte_end":6906523,"line_start":270,"line_end":270,"column_start":1,"column_end":87}}]},{"kind":"Mod","id":{"krate":0,"index":1462},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::io::prelude","value":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/prelude.rs","parent":null,"children":[{"krate":0,"index":1463},{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1466},{"krate":0,"index":1467},{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1470}],"decl_id":null,"docs":" The async I/O prelude.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/utils.rs","byte_start":13436,"byte_end":13459,"line_start":157,"line_end":157,"column_start":13,"column_end":36}},{"value":"! The async I/O prelude.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/prelude.rs","byte_start":8020064,"byte_end":8020090,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/prelude.rs","byte_start":8020091,"byte_end":8020094,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The purpose of this module is to alleviate imports of many common I/O traits","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/prelude.rs","byte_start":8020095,"byte_end":8020175,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"! by adding a glob import to the top of I/O heavy modules:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/prelude.rs","byte_start":8020176,"byte_end":8020236,"line_start":4,"line_end":4,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/prelude.rs","byte_start":8020237,"byte_end":8020240,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/prelude.rs","byte_start":8020241,"byte_end":8020248,"line_start":6,"line_end":6,"column_start":1,"column_end":8}},{"value":"! # #![allow(unused_imports)]","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/prelude.rs","byte_start":8020249,"byte_end":8020280,"line_start":7,"line_end":7,"column_start":1,"column_end":32}},{"value":"! use async_std::io::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/prelude.rs","byte_start":8020281,"byte_end":8020315,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/prelude.rs","byte_start":8020316,"byte_end":8020323,"line_start":9,"line_end":9,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6832},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/lines.rs","byte_start":8033643,"byte_end":8033648,"line_start":23,"line_end":23,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::buf_read::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":6834},{"krate":0,"index":6835},{"krate":0,"index":6836},{"krate":0,"index":6837}],"decl_id":null,"docs":" A stream of lines in a byte stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1504},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/read_line.rs","byte_start":8035624,"byte_end":8035638,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"ReadLineFuture","qualname":"::io::buf_read::read_line::ReadLineFuture","value":"ReadLineFuture {  }","parent":null,"children":[{"krate":0,"index":1507},{"krate":0,"index":1508},{"krate":0,"index":1509},{"krate":0,"index":1510}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/read_line.rs","byte_start":8035573,"byte_end":8035612,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1526},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/read_until.rs","byte_start":8037152,"byte_end":8037167,"line_start":10,"line_end":10,"column_start":12,"column_end":27},"name":"ReadUntilFuture","qualname":"::io::buf_read::read_until::ReadUntilFuture","value":"ReadUntilFuture {  }","parent":null,"children":[{"krate":0,"index":1529},{"krate":0,"index":1530},{"krate":0,"index":1531},{"krate":0,"index":1532}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/read_until.rs","byte_start":8037101,"byte_end":8037140,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":6784},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/split.rs","byte_start":8038421,"byte_end":8038426,"line_start":22,"line_end":22,"column_start":16,"column_end":21},"name":"Split","qualname":"::io::buf_read::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":6786},{"krate":0,"index":6787},{"krate":0,"index":6788},{"krate":0,"index":6789}],"decl_id":null,"docs":" A stream over the contents of an instance of [`BufRead`] split on a particular byte.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2124},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/mod.rs","byte_start":8023120,"byte_end":8023130,"line_start":72,"line_end":72,"column_start":15,"column_end":25},"name":"BufReadExt","qualname":"::io::buf_read::BufReadExt","value":"BufReadExt: BufRead","parent":null,"children":[{"krate":0,"index":2127},{"krate":0,"index":2129},{"krate":0,"index":2131},{"krate":0,"index":2132}],"decl_id":null,"docs":"\n        Extension methods for [`BufRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2127},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/mod.rs","byte_start":8024894,"byte_end":8024904,"line_start":123,"line_end":123,"column_start":12,"column_end":22},"name":"read_until","qualname":"::io::buf_read::BufReadExt::read_until","value":"fn <'a> (&'a mut self, byte: u8, buf: &'a mut Vec<u8>) -> ReadUntilFuture<'a, Self>","parent":{"krate":0,"index":2124},"children":[],"decl_id":null,"docs":"\n            Reads all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2129},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/mod.rs","byte_start":8026693,"byte_end":8026702,"line_start":177,"line_end":177,"column_start":12,"column_end":21},"name":"read_line","qualname":"::io::buf_read::BufReadExt::read_line","value":"fn <'a> (&'a mut self, buf: &'a mut String) -> ReadLineFuture<'a, Self>","parent":{"krate":0,"index":2124},"children":[],"decl_id":null,"docs":"\n            Reads all bytes and appends them into `buf` until a newline (the 0xA byte) is\n            reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2131},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/mod.rs","byte_start":8028160,"byte_end":8028165,"line_start":223,"line_end":223,"column_start":12,"column_end":17},"name":"lines","qualname":"::io::buf_read::BufReadExt::lines","value":"fn (self) -> Lines<Self>","parent":{"krate":0,"index":2124},"children":[],"decl_id":null,"docs":"\n            Returns a stream over the lines of this byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2132},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/mod.rs","byte_start":8029929,"byte_end":8029934,"line_start":274,"line_end":274,"column_start":12,"column_end":17},"name":"split","qualname":"::io::buf_read::BufReadExt::split","value":"fn (self, byte: u8) -> Split<Self>","parent":{"krate":0,"index":2124},"children":[],"decl_id":null,"docs":"\n            Returns a stream over the contents of this reader split on the byte `byte`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2133},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/bytes.rs","byte_start":8056003,"byte_end":8056008,"line_start":14,"line_end":14,"column_start":12,"column_end":17},"name":"Bytes","qualname":"::io::read::bytes::Bytes","value":"Bytes {  }","parent":null,"children":[{"krate":0,"index":2135}],"decl_id":null,"docs":" A stream over `u8` values of a reader.","sig":null,"attributes":[{"value":"/ A stream over `u8` values of a reader.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/bytes.rs","byte_start":8055745,"byte_end":8055787,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/bytes.rs","byte_start":8055788,"byte_end":8055791,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This struct is generally created by calling [`bytes`] on a reader.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/bytes.rs","byte_start":8055792,"byte_end":8055862,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ Please see the documentation of [`bytes`] for more details.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/bytes.rs","byte_start":8055863,"byte_end":8055926,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/bytes.rs","byte_start":8055927,"byte_end":8055930,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`bytes`]: trait.Read.html#method.bytes","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/bytes.rs","byte_start":8055931,"byte_end":8055974,"line_start":12,"line_end":12,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":6696},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8057795,"byte_end":8057800,"line_start":16,"line_end":16,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::read::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":6699},{"krate":0,"index":6700},{"krate":0,"index":6701}],"decl_id":null,"docs":" Adaptor to chain together two readers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1594},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8058524,"byte_end":8058534,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"fn (self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8057973,"byte_end":8058029,"line_start":26,"line_end":26,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8058034,"byte_end":8058037,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8058042,"byte_end":8058056,"line_start":28,"line_end":28,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8058061,"byte_end":8058064,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8058069,"byte_end":8058082,"line_start":30,"line_end":30,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8058087,"byte_end":8058167,"line_start":31,"line_end":31,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8058172,"byte_end":8058177,"line_start":32,"line_end":32,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8058182,"byte_end":8058212,"line_start":33,"line_end":33,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8058217,"byte_end":8058245,"line_start":34,"line_end":34,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8058250,"byte_end":8058253,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ let foo_file = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8058258,"byte_end":8058306,"line_start":36,"line_end":36,"column_start":5,"column_end":53}},{"value":"/ let bar_file = File::open(\"bar.txt\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8058311,"byte_end":8058359,"line_start":37,"line_end":37,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8058364,"byte_end":8058367,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let chain = foo_file.chain(bar_file);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8058372,"byte_end":8058413,"line_start":39,"line_end":39,"column_start":5,"column_end":46}},{"value":"/ let (foo_file, bar_file) = chain.into_inner();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8058418,"byte_end":8058468,"line_start":40,"line_end":40,"column_start":5,"column_end":55}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8058473,"byte_end":8058478,"line_start":41,"line_end":41,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8058483,"byte_end":8058500,"line_start":42,"line_end":42,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8058505,"byte_end":8058512,"line_start":43,"line_end":43,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1595},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8059152,"byte_end":8059159,"line_start":66,"line_end":66,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"fn (&self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8058598,"byte_end":8058660,"line_start":48,"line_end":48,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8058665,"byte_end":8058668,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8058673,"byte_end":8058687,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8058692,"byte_end":8058695,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8058700,"byte_end":8058713,"line_start":52,"line_end":52,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8058718,"byte_end":8058798,"line_start":53,"line_end":53,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8058803,"byte_end":8058808,"line_start":54,"line_end":54,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8058813,"byte_end":8058843,"line_start":55,"line_end":55,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8058848,"byte_end":8058876,"line_start":56,"line_end":56,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8058881,"byte_end":8058884,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ let foo_file = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8058889,"byte_end":8058937,"line_start":58,"line_end":58,"column_start":5,"column_end":53}},{"value":"/ let bar_file = File::open(\"bar.txt\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8058942,"byte_end":8058990,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8058995,"byte_end":8058998,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ let chain = foo_file.chain(bar_file);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8059003,"byte_end":8059044,"line_start":61,"line_end":61,"column_start":5,"column_end":46}},{"value":"/ let (foo_file, bar_file) = chain.get_ref();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8059049,"byte_end":8059096,"line_start":62,"line_end":62,"column_start":5,"column_end":52}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8059101,"byte_end":8059106,"line_start":63,"line_end":63,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8059111,"byte_end":8059128,"line_start":64,"line_end":64,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8059133,"byte_end":8059140,"line_start":65,"line_end":65,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1596},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8059975,"byte_end":8059982,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"fn (&mut self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8059228,"byte_end":8059298,"line_start":70,"line_end":70,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8059303,"byte_end":8059306,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8059311,"byte_end":8059384,"line_start":72,"line_end":72,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8059389,"byte_end":8059462,"line_start":73,"line_end":73,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8059467,"byte_end":8059479,"line_start":74,"line_end":74,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8059484,"byte_end":8059487,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8059492,"byte_end":8059506,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8059511,"byte_end":8059514,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8059519,"byte_end":8059532,"line_start":78,"line_end":78,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8059537,"byte_end":8059617,"line_start":79,"line_end":79,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8059622,"byte_end":8059627,"line_start":80,"line_end":80,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8059632,"byte_end":8059662,"line_start":81,"line_end":81,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8059667,"byte_end":8059695,"line_start":82,"line_end":82,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8059700,"byte_end":8059703,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ let foo_file = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8059708,"byte_end":8059756,"line_start":84,"line_end":84,"column_start":5,"column_end":53}},{"value":"/ let bar_file = File::open(\"bar.txt\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8059761,"byte_end":8059809,"line_start":85,"line_end":85,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8059814,"byte_end":8059817,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let mut chain = foo_file.chain(bar_file);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8059822,"byte_end":8059867,"line_start":87,"line_end":87,"column_start":5,"column_end":50}},{"value":"/ let (foo_file, bar_file) = chain.get_mut();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8059872,"byte_end":8059919,"line_start":88,"line_end":88,"column_start":5,"column_end":52}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8059924,"byte_end":8059929,"line_start":89,"line_end":89,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8059934,"byte_end":8059951,"line_start":90,"line_end":90,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8059956,"byte_end":8059963,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1620},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read.rs","byte_start":8063263,"byte_end":8063273,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"ReadFuture","qualname":"::io::read::read::ReadFuture","value":"ReadFuture {  }","parent":null,"children":[{"krate":0,"index":1623},{"krate":0,"index":1624}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read.rs","byte_start":8063212,"byte_end":8063251,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1639},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read_exact.rs","byte_start":8063864,"byte_end":8063879,"line_start":10,"line_end":10,"column_start":12,"column_end":27},"name":"ReadExactFuture","qualname":"::io::read::read_exact::ReadExactFuture","value":"ReadExactFuture {  }","parent":null,"children":[{"krate":0,"index":1642},{"krate":0,"index":1643}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read_exact.rs","byte_start":8063813,"byte_end":8063852,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1657},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read_to_end.rs","byte_start":8064798,"byte_end":8064813,"line_start":9,"line_end":9,"column_start":12,"column_end":27},"name":"ReadToEndFuture","qualname":"::io::read::read_to_end::ReadToEndFuture","value":"ReadToEndFuture {  }","parent":null,"children":[{"krate":0,"index":1660},{"krate":0,"index":1661},{"krate":0,"index":1662}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read_to_end.rs","byte_start":8064747,"byte_end":8064786,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1687},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read_to_string.rs","byte_start":8067337,"byte_end":8067355,"line_start":12,"line_end":12,"column_start":12,"column_end":30},"name":"ReadToStringFuture","qualname":"::io::read::read_to_string::ReadToStringFuture","value":"ReadToStringFuture {  }","parent":null,"children":[{"krate":0,"index":1690},{"krate":0,"index":1691},{"krate":0,"index":1692},{"krate":0,"index":1693}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read_to_string.rs","byte_start":8067286,"byte_end":8067325,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1709},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read_vectored.rs","byte_start":8068812,"byte_end":8068830,"line_start":9,"line_end":9,"column_start":12,"column_end":30},"name":"ReadVectoredFuture","qualname":"::io::read::read_vectored::ReadVectoredFuture","value":"ReadVectoredFuture {  }","parent":null,"children":[{"krate":0,"index":1712},{"krate":0,"index":1713}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read_vectored.rs","byte_start":8068761,"byte_end":8068800,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":6689},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8069739,"byte_end":8069743,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::read::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":6691},{"krate":0,"index":6692}],"decl_id":null,"docs":" Reader adaptor which limits the bytes read from an underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1731},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8070633,"byte_end":8070638,"line_start":52,"line_end":52,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<T>>::limit","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that can be read before this instance will\n return EOF.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that can be read before this instance will","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8069855,"byte_end":8069929,"line_start":25,"line_end":25,"column_start":5,"column_end":79}},{"value":"/ return EOF.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8069934,"byte_end":8069949,"line_start":26,"line_end":26,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8069954,"byte_end":8069957,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8069962,"byte_end":8069972,"line_start":28,"line_end":28,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8069977,"byte_end":8069980,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8069985,"byte_end":8070062,"line_start":30,"line_end":30,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`Read`] instance reaches EOF.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8070067,"byte_end":8070131,"line_start":31,"line_end":31,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8070136,"byte_end":8070139,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ [`Read`]: trait.Read.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8070144,"byte_end":8070173,"line_start":33,"line_end":33,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8070178,"byte_end":8070181,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8070186,"byte_end":8070200,"line_start":35,"line_end":35,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8070205,"byte_end":8070208,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8070213,"byte_end":8070226,"line_start":37,"line_end":37,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8070231,"byte_end":8070311,"line_start":38,"line_end":38,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8070316,"byte_end":8070321,"line_start":39,"line_end":39,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8070326,"byte_end":8070356,"line_start":40,"line_end":40,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8070361,"byte_end":8070389,"line_start":41,"line_end":41,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8070394,"byte_end":8070397,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8070402,"byte_end":8070443,"line_start":43,"line_end":43,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8070448,"byte_end":8070451,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ // read at most five bytes","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8070456,"byte_end":8070486,"line_start":45,"line_end":45,"column_start":5,"column_end":35}},{"value":"/ let handle = f.take(5);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8070491,"byte_end":8070518,"line_start":46,"line_end":46,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8070523,"byte_end":8070526,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ println!(\"limit: {}\", handle.limit());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8070531,"byte_end":8070573,"line_start":48,"line_end":48,"column_start":5,"column_end":47}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8070578,"byte_end":8070583,"line_start":49,"line_end":49,"column_start":5,"column_end":10}},{"value":"/ #     Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8070588,"byte_end":8070609,"line_start":50,"line_end":50,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8070614,"byte_end":8070621,"line_start":51,"line_end":51,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1732},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8071427,"byte_end":8071436,"line_start":79,"line_end":79,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<T>>::set_limit","value":"fn (&mut self, limit: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8070685,"byte_end":8070756,"line_start":56,"line_end":56,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8070761,"byte_end":8070835,"line_start":57,"line_end":57,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8070840,"byte_end":8070915,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8070920,"byte_end":8070944,"line_start":59,"line_end":59,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8070949,"byte_end":8070952,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8070957,"byte_end":8070971,"line_start":61,"line_end":61,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8070976,"byte_end":8070979,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8070984,"byte_end":8070997,"line_start":63,"line_end":63,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8071002,"byte_end":8071082,"line_start":64,"line_end":64,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8071087,"byte_end":8071092,"line_start":65,"line_end":65,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8071097,"byte_end":8071127,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8071132,"byte_end":8071160,"line_start":67,"line_end":67,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8071165,"byte_end":8071168,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8071173,"byte_end":8071214,"line_start":69,"line_end":69,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8071219,"byte_end":8071222,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ // read at most five bytes","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8071227,"byte_end":8071257,"line_start":71,"line_end":71,"column_start":5,"column_end":35}},{"value":"/ let mut handle = f.take(5);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8071262,"byte_end":8071293,"line_start":72,"line_end":72,"column_start":5,"column_end":36}},{"value":"/ handle.set_limit(10);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8071298,"byte_end":8071323,"line_start":73,"line_end":73,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8071328,"byte_end":8071331,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(handle.limit(), 10);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8071336,"byte_end":8071371,"line_start":75,"line_end":75,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8071376,"byte_end":8071381,"line_start":76,"line_end":76,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8071386,"byte_end":8071403,"line_start":77,"line_end":77,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8071408,"byte_end":8071415,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1733},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8072053,"byte_end":8072063,"line_start":103,"line_end":103,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8071501,"byte_end":8071555,"line_start":83,"line_end":83,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8071560,"byte_end":8071563,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8071568,"byte_end":8071582,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8071587,"byte_end":8071590,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8071595,"byte_end":8071608,"line_start":87,"line_end":87,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8071613,"byte_end":8071693,"line_start":88,"line_end":88,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8071698,"byte_end":8071703,"line_start":89,"line_end":89,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8071708,"byte_end":8071738,"line_start":90,"line_end":90,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8071743,"byte_end":8071771,"line_start":91,"line_end":91,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8071776,"byte_end":8071779,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8071784,"byte_end":8071828,"line_start":93,"line_end":93,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8071833,"byte_end":8071836,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8071841,"byte_end":8071869,"line_start":95,"line_end":95,"column_start":5,"column_end":33}},{"value":"/ let mut handle = file.take(5);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8071874,"byte_end":8071908,"line_start":96,"line_end":96,"column_start":5,"column_end":39}},{"value":"/ handle.read(&mut buffer).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8071913,"byte_end":8071949,"line_start":97,"line_end":97,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8071954,"byte_end":8071957,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let file = handle.into_inner();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8071962,"byte_end":8071997,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8072002,"byte_end":8072007,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8072012,"byte_end":8072029,"line_start":101,"line_end":101,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8072034,"byte_end":8072041,"line_start":102,"line_end":102,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1734},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8072648,"byte_end":8072655,"line_start":127,"line_end":127,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8072107,"byte_end":8072153,"line_start":107,"line_end":107,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8072158,"byte_end":8072161,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8072166,"byte_end":8072180,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8072185,"byte_end":8072188,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8072193,"byte_end":8072206,"line_start":111,"line_end":111,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8072211,"byte_end":8072291,"line_start":112,"line_end":112,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8072296,"byte_end":8072301,"line_start":113,"line_end":113,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8072306,"byte_end":8072336,"line_start":114,"line_end":114,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8072341,"byte_end":8072369,"line_start":115,"line_end":115,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8072374,"byte_end":8072377,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8072382,"byte_end":8072426,"line_start":117,"line_end":117,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8072431,"byte_end":8072434,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8072439,"byte_end":8072467,"line_start":119,"line_end":119,"column_start":5,"column_end":33}},{"value":"/ let mut handle = file.take(5);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8072472,"byte_end":8072506,"line_start":120,"line_end":120,"column_start":5,"column_end":39}},{"value":"/ handle.read(&mut buffer).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8072511,"byte_end":8072547,"line_start":121,"line_end":121,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8072552,"byte_end":8072555,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let file = handle.get_ref();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8072560,"byte_end":8072592,"line_start":123,"line_end":123,"column_start":5,"column_end":37}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8072597,"byte_end":8072602,"line_start":124,"line_end":124,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8072607,"byte_end":8072624,"line_start":125,"line_end":125,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8072629,"byte_end":8072636,"line_start":126,"line_end":126,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1735},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8073430,"byte_end":8073437,"line_start":155,"line_end":155,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8072702,"byte_end":8072756,"line_start":131,"line_end":131,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8072761,"byte_end":8072764,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8072769,"byte_end":8072842,"line_start":133,"line_end":133,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8072847,"byte_end":8072919,"line_start":134,"line_end":134,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8072924,"byte_end":8072935,"line_start":135,"line_end":135,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8072940,"byte_end":8072943,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8072948,"byte_end":8072962,"line_start":137,"line_end":137,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8072967,"byte_end":8072970,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8072975,"byte_end":8072988,"line_start":139,"line_end":139,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8072993,"byte_end":8073073,"line_start":140,"line_end":140,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8073078,"byte_end":8073083,"line_start":141,"line_end":141,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8073088,"byte_end":8073118,"line_start":142,"line_end":142,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8073123,"byte_end":8073151,"line_start":143,"line_end":143,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8073156,"byte_end":8073159,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8073164,"byte_end":8073208,"line_start":145,"line_end":145,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8073213,"byte_end":8073216,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8073221,"byte_end":8073249,"line_start":147,"line_end":147,"column_start":5,"column_end":33}},{"value":"/ let mut handle = file.take(5);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8073254,"byte_end":8073288,"line_start":148,"line_end":148,"column_start":5,"column_end":39}},{"value":"/ handle.read(&mut buffer).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8073293,"byte_end":8073329,"line_start":149,"line_end":149,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8073334,"byte_end":8073337,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ let file = handle.get_mut();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8073342,"byte_end":8073374,"line_start":151,"line_end":151,"column_start":5,"column_end":37}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8073379,"byte_end":8073384,"line_start":152,"line_end":152,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8073389,"byte_end":8073406,"line_start":153,"line_end":153,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8073411,"byte_end":8073418,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":2151},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/mod.rs","byte_start":8041457,"byte_end":8041464,"line_start":80,"line_end":80,"column_start":15,"column_end":22},"name":"ReadExt","qualname":"::io::read::ReadExt","value":"ReadExt: Read","parent":null,"children":[{"krate":0,"index":2154},{"krate":0,"index":2156},{"krate":0,"index":2158},{"krate":0,"index":2160},{"krate":0,"index":2162},{"krate":0,"index":2164},{"krate":0,"index":2165},{"krate":0,"index":2166},{"krate":0,"index":2167}],"decl_id":null,"docs":"\n        Extension methods for [`Read`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2154},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/mod.rs","byte_start":8042657,"byte_end":8042661,"line_start":112,"line_end":112,"column_start":12,"column_end":16},"name":"read","qualname":"::io::read::ReadExt::read","value":"fn <'a> (&'a mut self, buf: &'a mut [u8]) -> ReadFuture<'a, Self>","parent":{"krate":0,"index":2151},"children":[],"decl_id":null,"docs":"\n            Reads some bytes from the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2156},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/mod.rs","byte_start":8043453,"byte_end":8043466,"line_start":134,"line_end":134,"column_start":12,"column_end":25},"name":"read_vectored","qualname":"::io::read::ReadExt::read_vectored","value":"fn <'a> (&'a mut self, bufs: &'a mut [IoSliceMut<'a>]) -> ReadVectoredFuture<'a, Self>","parent":{"krate":0,"index":2151},"children":[],"decl_id":null,"docs":"\n            Like [`read`], except that it reads into a slice of buffers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2158},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/mod.rs","byte_start":8044623,"byte_end":8044634,"line_start":171,"line_end":171,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"::io::read::ReadExt::read_to_end","value":"fn <'a> (&'a mut self, buf: &'a mut Vec<u8>) -> ReadToEndFuture<'a, Self>","parent":{"krate":0,"index":2151},"children":[],"decl_id":null,"docs":"\n            Reads all bytes from the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2160},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/mod.rs","byte_start":8045772,"byte_end":8045786,"line_start":210,"line_end":210,"column_start":12,"column_end":26},"name":"read_to_string","qualname":"::io::read::ReadExt::read_to_string","value":"fn <'a> (&'a mut self, buf: &'a mut String) -> ReadToStringFuture<'a, Self>","parent":{"krate":0,"index":2151},"children":[],"decl_id":null,"docs":"\n            Reads all bytes from the byte stream and appends them into a string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2162},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/mod.rs","byte_start":8047867,"byte_end":8047877,"line_start":265,"line_end":265,"column_start":12,"column_end":22},"name":"read_exact","qualname":"::io::read::ReadExt::read_exact","value":"fn <'a> (&'a mut self, buf: &'a mut [u8]) -> ReadExactFuture<'a, Self>","parent":{"krate":0,"index":2151},"children":[],"decl_id":null,"docs":"\n            Reads the exact number of bytes required to fill `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2164},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/mod.rs","byte_start":8049231,"byte_end":8049235,"line_start":308,"line_end":308,"column_start":12,"column_end":16},"name":"take","qualname":"::io::read::ReadExt::take","value":"fn (self, limit: u64) -> Take<Self>","parent":{"krate":0,"index":2151},"children":[],"decl_id":null,"docs":"\n            Creates an adaptor which will read at most `limit` bytes from it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2165},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/mod.rs","byte_start":8050450,"byte_end":8050456,"line_start":351,"line_end":351,"column_start":12,"column_end":18},"name":"by_ref","qualname":"::io::read::ReadExt::by_ref","value":"fn (&mut self) -> &mut Self","parent":{"krate":0,"index":2151},"children":[],"decl_id":null,"docs":"\n            Creates a \"by reference\" adaptor for this instance of `Read`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2166},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/mod.rs","byte_start":8051458,"byte_end":8051463,"line_start":384,"line_end":384,"column_start":12,"column_end":17},"name":"bytes","qualname":"::io::read::ReadExt::bytes","value":"fn (self) -> Bytes<Self>","parent":{"krate":0,"index":2151},"children":[],"decl_id":null,"docs":"\n            Transforms this `Read` instance to a `Stream` over its bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2167},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/mod.rs","byte_start":8052598,"byte_end":8052603,"line_start":420,"line_end":420,"column_start":12,"column_end":17},"name":"chain","qualname":"::io::read::ReadExt::chain","value":"fn <R> (self, next: R) -> Chain<Self, R>","parent":{"krate":0,"index":2151},"children":[],"decl_id":null,"docs":"\n            Creates an adaptor which will chain this stream with another.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1770},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/seek/seek.rs","byte_start":8079752,"byte_end":8079762,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"SeekFuture","qualname":"::io::seek::seek::SeekFuture","value":"SeekFuture {  }","parent":null,"children":[{"krate":0,"index":1773},{"krate":0,"index":1774}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/seek/seek.rs","byte_start":8079701,"byte_end":8079740,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":2181},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/seek/mod.rs","byte_start":8077514,"byte_end":8077521,"line_start":51,"line_end":51,"column_start":15,"column_end":22},"name":"SeekExt","qualname":"::io::seek::SeekExt","value":"SeekExt: Seek","parent":null,"children":[{"krate":0,"index":2184}],"decl_id":null,"docs":"\n        Extension methods for [`Seek`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2184},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/seek/mod.rs","byte_start":8078255,"byte_end":8078259,"line_start":76,"line_end":76,"column_start":12,"column_end":16},"name":"seek","qualname":"::io::seek::SeekExt::seek","value":"fn (&mut self, pos: SeekFrom) -> SeekFuture<'_, Self>","parent":{"krate":0,"index":2181},"children":[],"decl_id":null,"docs":"\n            Seeks to a new position in a byte stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1791},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/flush.rs","byte_start":8091431,"byte_end":8091442,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"FlushFuture","qualname":"::io::write::flush::FlushFuture","value":"FlushFuture {  }","parent":null,"children":[{"krate":0,"index":1794}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/flush.rs","byte_start":8091380,"byte_end":8091419,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1808},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/write.rs","byte_start":8091943,"byte_end":8091954,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"WriteFuture","qualname":"::io::write::write::WriteFuture","value":"WriteFuture {  }","parent":null,"children":[{"krate":0,"index":1811},{"krate":0,"index":1812}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/write.rs","byte_start":8091892,"byte_end":8091931,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1827},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/write_all.rs","byte_start":8092537,"byte_end":8092551,"line_start":10,"line_end":10,"column_start":12,"column_end":26},"name":"WriteAllFuture","qualname":"::io::write::write_all::WriteAllFuture","value":"WriteAllFuture {  }","parent":null,"children":[{"krate":0,"index":1830},{"krate":0,"index":1831}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/write_all.rs","byte_start":8092486,"byte_end":8092525,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1845},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/write_fmt.rs","byte_start":8093469,"byte_end":8093483,"line_start":10,"line_end":10,"column_start":12,"column_end":26},"name":"WriteFmtFuture","qualname":"::io::write::write_fmt::WriteFmtFuture","value":"WriteFmtFuture {  }","parent":null,"children":[{"krate":0,"index":1848},{"krate":0,"index":1849},{"krate":0,"index":1850},{"krate":0,"index":1851}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/write_fmt.rs","byte_start":8093406,"byte_end":8093445,"line_start":8,"line_end":8,"column_start":1,"column_end":40}},{"value":"must_use","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/write_fmt.rs","byte_start":8093446,"byte_end":8093457,"line_start":9,"line_end":9,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1866},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/write_vectored.rs","byte_start":8095093,"byte_end":8095112,"line_start":9,"line_end":9,"column_start":12,"column_end":31},"name":"WriteVectoredFuture","qualname":"::io::write::write_vectored::WriteVectoredFuture","value":"WriteVectoredFuture {  }","parent":null,"children":[{"krate":0,"index":1869},{"krate":0,"index":1870}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/write_vectored.rs","byte_start":8095042,"byte_end":8095081,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":2197},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/mod.rs","byte_start":8082698,"byte_end":8082706,"line_start":84,"line_end":84,"column_start":15,"column_end":23},"name":"WriteExt","qualname":"::io::write::WriteExt","value":"WriteExt: Write","parent":null,"children":[{"krate":0,"index":2200},{"krate":0,"index":2202},{"krate":0,"index":2203},{"krate":0,"index":2205},{"krate":0,"index":2207}],"decl_id":null,"docs":"\n        Extension methods for [`Write`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2200},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/mod.rs","byte_start":8083623,"byte_end":8083628,"line_start":110,"line_end":110,"column_start":12,"column_end":17},"name":"write","qualname":"::io::write::WriteExt::write","value":"fn <'a> (&'a mut self, buf: &'a [u8]) -> WriteFuture<'a, Self>","parent":{"krate":0,"index":2197},"children":[],"decl_id":null,"docs":"\n            Writes some bytes into the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2202},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/mod.rs","byte_start":8084430,"byte_end":8084435,"line_start":139,"line_end":139,"column_start":12,"column_end":17},"name":"flush","qualname":"::io::write::WriteExt::flush","value":"fn (&mut self) -> FlushFuture<'_, Self>","parent":{"krate":0,"index":2197},"children":[],"decl_id":null,"docs":"\n            Flushes the stream to ensure that all buffered contents reach their destination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2203},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/mod.rs","byte_start":8085158,"byte_end":8085172,"line_start":158,"line_end":158,"column_start":12,"column_end":26},"name":"write_vectored","qualname":"::io::write::WriteExt::write_vectored","value":"fn <'a> (&'a mut self, bufs: &'a [IoSlice<'a>]) -> WriteVectoredFuture<'a, Self>","parent":{"krate":0,"index":2197},"children":[],"decl_id":null,"docs":"\n            Like [`write`], except that it writes from a slice of buffers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2205},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/mod.rs","byte_start":8086269,"byte_end":8086278,"line_start":194,"line_end":194,"column_start":12,"column_end":21},"name":"write_all","qualname":"::io::write::WriteExt::write_all","value":"fn <'a> (&'a mut self, buf: &'a [u8]) -> WriteAllFuture<'a, Self>","parent":{"krate":0,"index":2197},"children":[],"decl_id":null,"docs":"\n            Writes an entire buffer into the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2207},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/mod.rs","byte_start":8087487,"byte_end":8087496,"line_start":231,"line_end":231,"column_start":12,"column_end":21},"name":"write_fmt","qualname":"::io::write::WriteExt::write_fmt","value":"fn <'a> (&'a mut self, fmt: std::fmt::Arguments<'_>) -> WriteFmtFuture<'a, Self>","parent":{"krate":0,"index":2197},"children":[],"decl_id":null,"docs":"\n            Writes a formatted string into this writer, returning any error encountered.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6611},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8098362,"byte_end":8098371,"line_start":46,"line_end":46,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":6613},{"krate":0,"index":6614},{"krate":0,"index":6615},{"krate":0,"index":6616}],"decl_id":null,"docs":" Adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1922},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8099002,"byte_end":8099005,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"fn (inner: R) -> BufReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a buffered reader with default buffer capacity.","sig":null,"attributes":[{"value":"/ Creates a buffered reader with default buffer capacity.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8098520,"byte_end":8098579,"line_start":56,"line_end":56,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8098584,"byte_end":8098587,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The default capacity is currently 8 KB, but may change in the future.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8098592,"byte_end":8098665,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8098670,"byte_end":8098673,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8098678,"byte_end":8098692,"line_start":60,"line_end":60,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8098697,"byte_end":8098700,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8098705,"byte_end":8098718,"line_start":62,"line_end":62,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8098723,"byte_end":8098797,"line_start":63,"line_end":63,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8098802,"byte_end":8098807,"line_start":64,"line_end":64,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8098812,"byte_end":8098840,"line_start":65,"line_end":65,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8098845,"byte_end":8098878,"line_start":66,"line_end":66,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8098883,"byte_end":8098886,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8098891,"byte_end":8098946,"line_start":68,"line_end":68,"column_start":5,"column_end":60}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8098951,"byte_end":8098956,"line_start":69,"line_end":69,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8098961,"byte_end":8098978,"line_start":70,"line_end":70,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8098983,"byte_end":8098990,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1923},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8099518,"byte_end":8099531,"line_start":90,"line_end":90,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"fn (capacity: usize, inner: R) -> BufReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new buffered reader with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates a new buffered reader with the specified capacity.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8099103,"byte_end":8099165,"line_start":76,"line_end":76,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8099170,"byte_end":8099173,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8099178,"byte_end":8099192,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8099197,"byte_end":8099200,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8099205,"byte_end":8099218,"line_start":80,"line_end":80,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8099223,"byte_end":8099297,"line_start":81,"line_end":81,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8099302,"byte_end":8099307,"line_start":82,"line_end":82,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8099312,"byte_end":8099340,"line_start":83,"line_end":83,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8099345,"byte_end":8099378,"line_start":84,"line_end":84,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8099383,"byte_end":8099386,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::with_capacity(1024, File::open(\"a.txt\").await?);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8099391,"byte_end":8099462,"line_start":86,"line_end":86,"column_start":5,"column_end":76}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8099467,"byte_end":8099472,"line_start":87,"line_end":87,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8099477,"byte_end":8099494,"line_start":88,"line_end":88,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8099499,"byte_end":8099506,"line_start":89,"line_end":89,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1926},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8100252,"byte_end":8100259,"line_start":118,"line_end":118,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8099757,"byte_end":8099803,"line_start":101,"line_end":101,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8099808,"byte_end":8099811,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8099816,"byte_end":8099882,"line_start":103,"line_end":103,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8099887,"byte_end":8099890,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8099895,"byte_end":8099909,"line_start":105,"line_end":105,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8099914,"byte_end":8099917,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8099922,"byte_end":8099935,"line_start":107,"line_end":107,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8099940,"byte_end":8100014,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8100019,"byte_end":8100024,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8100029,"byte_end":8100057,"line_start":110,"line_end":110,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8100062,"byte_end":8100095,"line_start":111,"line_end":111,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8100100,"byte_end":8100103,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8100108,"byte_end":8100163,"line_start":113,"line_end":113,"column_start":5,"column_end":60}},{"value":"/ let inner = f.get_ref();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8100168,"byte_end":8100196,"line_start":114,"line_end":114,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8100201,"byte_end":8100206,"line_start":115,"line_end":115,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8100211,"byte_end":8100228,"line_start":116,"line_end":116,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8100233,"byte_end":8100240,"line_start":117,"line_end":117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1927},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8100819,"byte_end":8100826,"line_start":139,"line_end":139,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8100306,"byte_end":8100360,"line_start":122,"line_end":122,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8100365,"byte_end":8100368,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8100373,"byte_end":8100439,"line_start":124,"line_end":124,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8100444,"byte_end":8100447,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8100452,"byte_end":8100466,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8100471,"byte_end":8100474,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8100479,"byte_end":8100492,"line_start":128,"line_end":128,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8100497,"byte_end":8100571,"line_start":129,"line_end":129,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8100576,"byte_end":8100581,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8100586,"byte_end":8100614,"line_start":131,"line_end":131,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8100619,"byte_end":8100652,"line_start":132,"line_end":132,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8100657,"byte_end":8100660,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ let mut file = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8100665,"byte_end":8100727,"line_start":134,"line_end":134,"column_start":5,"column_end":67}},{"value":"/ let inner = file.get_mut();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8100732,"byte_end":8100763,"line_start":135,"line_end":135,"column_start":5,"column_end":36}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8100768,"byte_end":8100773,"line_start":136,"line_end":136,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8100778,"byte_end":8100795,"line_start":137,"line_end":137,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8100800,"byte_end":8100807,"line_start":138,"line_end":138,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1929},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8101623,"byte_end":8101629,"line_start":167,"line_end":167,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internal buffer.","sig":null,"attributes":[{"value":"/ Returns a reference to the internal buffer.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8101124,"byte_end":8101171,"line_start":150,"line_end":150,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8101176,"byte_end":8101179,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This function will not attempt to fill the buffer if it is empty.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8101184,"byte_end":8101253,"line_start":152,"line_end":152,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8101258,"byte_end":8101261,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8101266,"byte_end":8101280,"line_start":154,"line_end":154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8101285,"byte_end":8101288,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8101293,"byte_end":8101306,"line_start":156,"line_end":156,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8101311,"byte_end":8101385,"line_start":157,"line_end":157,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8101390,"byte_end":8101395,"line_start":158,"line_end":158,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8101400,"byte_end":8101428,"line_start":159,"line_end":159,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8101433,"byte_end":8101466,"line_start":160,"line_end":160,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8101471,"byte_end":8101474,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8101479,"byte_end":8101534,"line_start":162,"line_end":162,"column_start":5,"column_end":60}},{"value":"/ let buffer = f.buffer();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8101539,"byte_end":8101567,"line_start":163,"line_end":163,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8101572,"byte_end":8101577,"line_start":164,"line_end":164,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8101582,"byte_end":8101599,"line_start":165,"line_end":165,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8101604,"byte_end":8101611,"line_start":166,"line_end":166,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1930},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8102211,"byte_end":8102221,"line_start":188,"line_end":188,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the buffered reader, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps the buffered reader, returning the underlying reader.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8101697,"byte_end":8101762,"line_start":171,"line_end":171,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8101767,"byte_end":8101770,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8101775,"byte_end":8101838,"line_start":173,"line_end":173,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8101843,"byte_end":8101846,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8101851,"byte_end":8101865,"line_start":175,"line_end":175,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8101870,"byte_end":8101873,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8101878,"byte_end":8101891,"line_start":177,"line_end":177,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8101896,"byte_end":8101970,"line_start":178,"line_end":178,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8101975,"byte_end":8101980,"line_start":179,"line_end":179,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8101985,"byte_end":8102013,"line_start":180,"line_end":180,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8102018,"byte_end":8102051,"line_start":181,"line_end":181,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8102056,"byte_end":8102059,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8102064,"byte_end":8102119,"line_start":183,"line_end":183,"column_start":5,"column_end":60}},{"value":"/ let inner = f.into_inner();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8102124,"byte_end":8102155,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8102160,"byte_end":8102165,"line_start":185,"line_end":185,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8102170,"byte_end":8102187,"line_start":186,"line_end":186,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8102192,"byte_end":8102199,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6570},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8111356,"byte_end":8111365,"line_start":83,"line_end":83,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":6572},{"krate":0,"index":6573},{"krate":0,"index":6574}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2216},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8112230,"byte_end":8112244,"line_start":116,"line_end":116,"column_start":12,"column_end":26},"name":"IntoInnerError","qualname":"::io::buf_writer::IntoInnerError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error returned by `into_inner` which combines an error that\n happened while writing out the buffer, and the buffered writer object\n which may be used to recover from the condition.","sig":null,"attributes":[{"value":"/ An error returned by `into_inner` which combines an error that","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8111459,"byte_end":8111525,"line_start":91,"line_end":91,"column_start":1,"column_end":67}},{"value":"/ happened while writing out the buffer, and the buffered writer object","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8111526,"byte_end":8111599,"line_start":92,"line_end":92,"column_start":1,"column_end":74}},{"value":"/ which may be used to recover from the condition.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8111600,"byte_end":8111652,"line_start":93,"line_end":93,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8111653,"byte_end":8111656,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8111657,"byte_end":8111671,"line_start":95,"line_end":95,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8111672,"byte_end":8111675,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8111676,"byte_end":8111689,"line_start":97,"line_end":97,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8111690,"byte_end":8111764,"line_start":98,"line_end":98,"column_start":1,"column_end":75}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8111765,"byte_end":8111798,"line_start":99,"line_end":99,"column_start":1,"column_end":34}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8111799,"byte_end":8111833,"line_start":100,"line_end":100,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8111834,"byte_end":8111837,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ let buf_writer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34251\").await?);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8111838,"byte_end":8111920,"line_start":102,"line_end":102,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8111921,"byte_end":8111924,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ // unwrap the TcpStream and flush the buffer","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8111925,"byte_end":8111973,"line_start":104,"line_end":104,"column_start":1,"column_end":49}},{"value":"/ let stream = match buf_writer.into_inner().await {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8111974,"byte_end":8112028,"line_start":105,"line_end":105,"column_start":1,"column_end":55}},{"value":"/     Ok(s) => s,","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8112029,"byte_end":8112048,"line_start":106,"line_end":106,"column_start":1,"column_end":20}},{"value":"/     Err(e) => {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8112049,"byte_end":8112068,"line_start":107,"line_end":107,"column_start":1,"column_end":20}},{"value":"/         // Here, e is an IntoInnerError","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8112069,"byte_end":8112112,"line_start":108,"line_end":108,"column_start":1,"column_end":44}},{"value":"/         panic!(\"An error occurred\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8112113,"byte_end":8112153,"line_start":109,"line_end":109,"column_start":1,"column_end":41}},{"value":"/     }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8112154,"byte_end":8112163,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8112164,"byte_end":8112170,"line_start":111,"line_end":111,"column_start":1,"column_end":7}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8112171,"byte_end":8112176,"line_start":112,"line_end":112,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8112177,"byte_end":8112194,"line_start":113,"line_end":113,"column_start":1,"column_end":18}},{"value":"/```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8112195,"byte_end":8112201,"line_start":114,"line_end":114,"column_start":1,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":1965},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8112827,"byte_end":8112830,"line_start":134,"line_end":134,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"fn (inner: W) -> BufWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8112305,"byte_end":8112397,"line_start":119,"line_end":119,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8112402,"byte_end":8112435,"line_start":120,"line_end":120,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8112440,"byte_end":8112443,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8112448,"byte_end":8112462,"line_start":122,"line_end":122,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8112467,"byte_end":8112470,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8112475,"byte_end":8112488,"line_start":124,"line_end":124,"column_start":5,"column_end":18}},{"value":"/ # #![allow(unused_mut)]","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8112493,"byte_end":8112520,"line_start":125,"line_end":125,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8112525,"byte_end":8112599,"line_start":126,"line_end":126,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8112604,"byte_end":8112637,"line_start":127,"line_end":127,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8112642,"byte_end":8112676,"line_start":128,"line_end":128,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8112681,"byte_end":8112684,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34254\").await?);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8112689,"byte_end":8112771,"line_start":130,"line_end":130,"column_start":5,"column_end":87}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8112776,"byte_end":8112781,"line_start":131,"line_end":131,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8112786,"byte_end":8112803,"line_start":132,"line_end":132,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8112808,"byte_end":8112815,"line_start":133,"line_end":133,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1966},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8113497,"byte_end":8113510,"line_start":155,"line_end":155,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"fn (capacity: usize, inner: W) -> BufWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8112928,"byte_end":8112993,"line_start":138,"line_end":138,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8112998,"byte_end":8113001,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8113006,"byte_end":8113020,"line_start":140,"line_end":140,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8113025,"byte_end":8113028,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ Creating a buffer with a buffer of a hundred bytes.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8113033,"byte_end":8113088,"line_start":142,"line_end":142,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8113093,"byte_end":8113096,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8113101,"byte_end":8113114,"line_start":144,"line_end":144,"column_start":5,"column_end":18}},{"value":"/ # #![allow(unused_mut)]","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8113119,"byte_end":8113146,"line_start":145,"line_end":145,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8113151,"byte_end":8113225,"line_start":146,"line_end":146,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8113230,"byte_end":8113263,"line_start":147,"line_end":147,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8113268,"byte_end":8113302,"line_start":148,"line_end":148,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8113307,"byte_end":8113310,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:34254\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8113315,"byte_end":8113377,"line_start":150,"line_end":150,"column_start":5,"column_end":67}},{"value":"/ let mut buffer = BufWriter::with_capacity(100, stream);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8113382,"byte_end":8113441,"line_start":151,"line_end":151,"column_start":5,"column_end":64}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8113446,"byte_end":8113451,"line_start":152,"line_end":152,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8113456,"byte_end":8113473,"line_start":153,"line_end":153,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8113478,"byte_end":8113485,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1967},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8114224,"byte_end":8114231,"line_start":180,"line_end":180,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"fn (&self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8113687,"byte_end":8113733,"line_start":163,"line_end":163,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8113738,"byte_end":8113741,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8113746,"byte_end":8113760,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8113765,"byte_end":8113768,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8113773,"byte_end":8113786,"line_start":167,"line_end":167,"column_start":5,"column_end":18}},{"value":"/ # #![allow(unused_mut)]","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8113791,"byte_end":8113818,"line_start":168,"line_end":168,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8113823,"byte_end":8113897,"line_start":169,"line_end":169,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8113902,"byte_end":8113935,"line_start":170,"line_end":170,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8113940,"byte_end":8113974,"line_start":171,"line_end":171,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8113979,"byte_end":8113982,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34254\").await?);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8113987,"byte_end":8114069,"line_start":173,"line_end":173,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8114074,"byte_end":8114077,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ // We can use reference just like buffer","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8114082,"byte_end":8114126,"line_start":175,"line_end":175,"column_start":5,"column_end":49}},{"value":"/ let reference = buffer.get_ref();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8114131,"byte_end":8114168,"line_start":176,"line_end":176,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8114173,"byte_end":8114178,"line_start":177,"line_end":177,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8114183,"byte_end":8114200,"line_start":178,"line_end":178,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8114205,"byte_end":8114212,"line_start":179,"line_end":179,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1968},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8114869,"byte_end":8114876,"line_start":202,"line_end":202,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"fn (&mut self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8114278,"byte_end":8114332,"line_start":184,"line_end":184,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8114337,"byte_end":8114340,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8114345,"byte_end":8114410,"line_start":186,"line_end":186,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8114415,"byte_end":8114418,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8114423,"byte_end":8114437,"line_start":188,"line_end":188,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8114442,"byte_end":8114445,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8114450,"byte_end":8114463,"line_start":190,"line_end":190,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8114468,"byte_end":8114542,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8114547,"byte_end":8114580,"line_start":192,"line_end":192,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8114585,"byte_end":8114619,"line_start":193,"line_end":193,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8114624,"byte_end":8114627,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34254\").await?);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8114632,"byte_end":8114714,"line_start":195,"line_end":195,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8114719,"byte_end":8114722,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ // We can use reference just like buffer","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8114727,"byte_end":8114771,"line_start":197,"line_end":197,"column_start":5,"column_end":49}},{"value":"/ let reference = buffer.get_mut();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8114776,"byte_end":8114813,"line_start":198,"line_end":198,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8114818,"byte_end":8114823,"line_start":199,"line_end":199,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8114828,"byte_end":8114845,"line_start":200,"line_end":200,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8114850,"byte_end":8114857,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1970},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8115942,"byte_end":8115952,"line_start":233,"line_end":233,"column_start":18,"column_end":28},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"fn (mut self) -> Result<W, IntoInnerError<BufWriter<W>>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes BufWriter, returning the underlying writer","sig":null,"attributes":[{"value":"/ Consumes BufWriter, returning the underlying writer","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8115173,"byte_end":8115228,"line_start":213,"line_end":213,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8115233,"byte_end":8115236,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ This method will not write leftover data, it will be lost.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8115241,"byte_end":8115303,"line_start":215,"line_end":215,"column_start":5,"column_end":67}},{"value":"/ For method that will attempt to write before returning the writer see [`poll_into_inner`]","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8115308,"byte_end":8115401,"line_start":216,"line_end":216,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8115406,"byte_end":8115409,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ [`poll_into_inner`]: #method.poll_into_inner","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8115414,"byte_end":8115462,"line_start":218,"line_end":218,"column_start":5,"column_end":53}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8115467,"byte_end":8115481,"line_start":219,"line_end":219,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8115486,"byte_end":8115489,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8115494,"byte_end":8115507,"line_start":221,"line_end":221,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8115512,"byte_end":8115586,"line_start":222,"line_end":222,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8115591,"byte_end":8115624,"line_start":223,"line_end":223,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8115629,"byte_end":8115663,"line_start":224,"line_end":224,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8115668,"byte_end":8115671,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ let buf_writer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34251\").await?);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8115676,"byte_end":8115758,"line_start":226,"line_end":226,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8115763,"byte_end":8115766,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ // unwrap the TcpStream and flush the buffer","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8115771,"byte_end":8115819,"line_start":228,"line_end":228,"column_start":5,"column_end":53}},{"value":"/ let stream = buf_writer.into_inner().await.unwrap();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8115824,"byte_end":8115880,"line_start":229,"line_end":229,"column_start":5,"column_end":61}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8115885,"byte_end":8115890,"line_start":230,"line_end":230,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8115895,"byte_end":8115912,"line_start":231,"line_end":231,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8115917,"byte_end":8115924,"line_start":232,"line_end":232,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1973},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8116722,"byte_end":8116728,"line_start":259,"line_end":259,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8116189,"byte_end":8116245,"line_start":243,"line_end":243,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8116250,"byte_end":8116253,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8116258,"byte_end":8116272,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8116277,"byte_end":8116280,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8116285,"byte_end":8116298,"line_start":247,"line_end":247,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8116303,"byte_end":8116377,"line_start":248,"line_end":248,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8116382,"byte_end":8116415,"line_start":249,"line_end":249,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8116420,"byte_end":8116454,"line_start":250,"line_end":250,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8116459,"byte_end":8116462,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ let buf_writer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34251\").await?);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8116467,"byte_end":8116549,"line_start":252,"line_end":252,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8116554,"byte_end":8116557,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ // See how many bytes are currently buffered","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8116562,"byte_end":8116610,"line_start":254,"line_end":254,"column_start":5,"column_end":53}},{"value":"/ let bytes_buffered = buf_writer.buffer().len();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8116615,"byte_end":8116666,"line_start":255,"line_end":255,"column_start":5,"column_end":56}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8116671,"byte_end":8116676,"line_start":256,"line_end":256,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8116681,"byte_end":8116698,"line_start":257,"line_end":257,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8116703,"byte_end":8116710,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":2000},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8121496,"byte_end":8121500,"line_start":48,"line_end":48,"column_start":14,"column_end":18},"name":"copy","qualname":"::io::copy::copy","value":"fn <R, W> (reader: &mut R, writer: &mut W) -> io::Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"/ Copies the entire contents of a reader into a writer.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8120244,"byte_end":8120301,"line_start":10,"line_end":10,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8120302,"byte_end":8120305,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function will continuously read data from `reader` and then","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8120306,"byte_end":8120374,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"/ write it into `writer` in a streaming fashion until `reader`","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8120375,"byte_end":8120439,"line_start":13,"line_end":13,"column_start":1,"column_end":65}},{"value":"/ returns EOF.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8120440,"byte_end":8120456,"line_start":14,"line_end":14,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8120457,"byte_end":8120460,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ On success, the total number of bytes that were copied from","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8120461,"byte_end":8120524,"line_start":16,"line_end":16,"column_start":1,"column_end":64}},{"value":"/ `reader` to `writer` is returned.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8120525,"byte_end":8120562,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8120563,"byte_end":8120566,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ If you’re wanting to copy the contents of one file to another and you’re","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8120567,"byte_end":8120647,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ working with filesystem paths, see the [`fs::copy`] function.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8120648,"byte_end":8120713,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8120714,"byte_end":8120717,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::copy`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8120718,"byte_end":8120777,"line_start":22,"line_end":22,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8120778,"byte_end":8120781,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`std::io::copy`]: https://doc.rust-lang.org/std/io/fn.copy.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8120782,"byte_end":8120850,"line_start":24,"line_end":24,"column_start":1,"column_end":69}},{"value":"/ [`fs::copy`]: ../fs/fn.copy.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8120851,"byte_end":8120887,"line_start":25,"line_end":25,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8120888,"byte_end":8120891,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8120892,"byte_end":8120904,"line_start":27,"line_end":27,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8120905,"byte_end":8120908,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This function will return an error immediately if any call to `read` or","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8120909,"byte_end":8120984,"line_start":29,"line_end":29,"column_start":1,"column_end":76}},{"value":"/ `write` returns an error. All instances of `ErrorKind::Interrupted` are","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8120985,"byte_end":8121060,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ handled by this function and the underlying operation is retried.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8121061,"byte_end":8121130,"line_start":31,"line_end":31,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8121131,"byte_end":8121134,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8121135,"byte_end":8121149,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8121150,"byte_end":8121153,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8121154,"byte_end":8121161,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8121162,"byte_end":8121236,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8121237,"byte_end":8121242,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8121243,"byte_end":8121265,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8121266,"byte_end":8121269,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let mut reader: &[u8] = b\"hello\";","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8121270,"byte_end":8121307,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"/ let mut writer = io::stdout();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8121308,"byte_end":8121342,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8121343,"byte_end":8121346,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ io::copy(&mut reader, &mut writer).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8121347,"byte_end":8121393,"line_start":43,"line_end":43,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8121394,"byte_end":8121399,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8121400,"byte_end":8121417,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8121418,"byte_end":8121425,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"cfg(any(feature = \"docs\", not(feature = \"unstable\")))","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8121426,"byte_end":8121482,"line_start":47,"line_end":47,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":2224},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8126645,"byte_end":8126651,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::io::cursor::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":2226}],"decl_id":null,"docs":" A `Cursor` wraps an in-memory buffer and provides it with a\n [`Seek`] implementation.","sig":null,"attributes":[{"value":"/ A `Cursor` wraps an in-memory buffer and provides it with a","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8125821,"byte_end":8125884,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/ [`Seek`] implementation.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8125885,"byte_end":8125913,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8125914,"byte_end":8125917,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ `Cursor`s are used with in-memory buffers, anything implementing","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8125918,"byte_end":8125986,"line_start":9,"line_end":9,"column_start":1,"column_end":69}},{"value":"/ `AsRef<[u8]>`, to allow them to implement [`Read`] and/or [`Write`],","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8125987,"byte_end":8126059,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ allowing these buffers to be used anywhere you might use a reader or writer","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8126060,"byte_end":8126139,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ that does actual I/O.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8126140,"byte_end":8126165,"line_start":12,"line_end":12,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8126166,"byte_end":8126169,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The standard library implements some I/O traits on various types which","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8126170,"byte_end":8126244,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ are commonly used as a buffer, like `Cursor<`[`Vec`]`<u8>>` and","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8126245,"byte_end":8126312,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ `Cursor<`[`&[u8]`][bytes]`>`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8126313,"byte_end":8126346,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8126347,"byte_end":8126350,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`Seek`]: trait.Seek.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8126351,"byte_end":8126380,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/ [`Read`]: trait.Read.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8126381,"byte_end":8126410,"line_start":19,"line_end":19,"column_start":1,"column_end":30}},{"value":"/ [`Write`]: trait.Write.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8126411,"byte_end":8126442,"line_start":20,"line_end":20,"column_start":1,"column_end":32}},{"value":"/ [`Vec`]: https://doc.rust-lang.org/std/vec/struct.Vec.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8126443,"byte_end":8126505,"line_start":21,"line_end":21,"column_start":1,"column_end":63}},{"value":"/ [bytes]: https://doc.rust-lang.org/std/primitive.slice.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8126506,"byte_end":8126569,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ [`File`]: struct.File.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8126570,"byte_end":8126600,"line_start":23,"line_end":23,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2027},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8127238,"byte_end":8127241,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Cursor<T>>::new","value":"fn (inner: T) -> Cursor<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new cursor wrapping the provided underlying in-memory buffer.","sig":null,"attributes":[{"value":"/ Creates a new cursor wrapping the provided underlying in-memory buffer.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8126715,"byte_end":8126790,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8126795,"byte_end":8126798,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Cursor initial position is `0` even if underlying buffer (e.g., `Vec`)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8126803,"byte_end":8126877,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ is not empty. So writing to cursor starts with overwriting `Vec`","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8126882,"byte_end":8126950,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ content, not with appending to it.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8126955,"byte_end":8126993,"line_start":34,"line_end":34,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8126998,"byte_end":8127001,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8127006,"byte_end":8127020,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8127025,"byte_end":8127028,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8127033,"byte_end":8127040,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8127045,"byte_end":8127075,"line_start":39,"line_end":39,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8127080,"byte_end":8127083,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8127088,"byte_end":8127127,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8127132,"byte_end":8127180,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8127185,"byte_end":8127214,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8127219,"byte_end":8127226,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2028},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8127700,"byte_end":8127710,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Cursor<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this cursor, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this cursor, returning the underlying value.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8127353,"byte_end":8127410,"line_start":51,"line_end":51,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8127415,"byte_end":8127418,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8127423,"byte_end":8127437,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8127442,"byte_end":8127445,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8127450,"byte_end":8127457,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8127462,"byte_end":8127492,"line_start":56,"line_end":56,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8127497,"byte_end":8127500,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8127505,"byte_end":8127544,"line_start":58,"line_end":58,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8127549,"byte_end":8127597,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8127602,"byte_end":8127631,"line_start":60,"line_end":60,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8127636,"byte_end":8127639,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let vec = buff.into_inner();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8127644,"byte_end":8127676,"line_start":62,"line_end":62,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8127681,"byte_end":8127688,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2029},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8128120,"byte_end":8128127,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Cursor<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this cursor.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8127767,"byte_end":8127827,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8127832,"byte_end":8127835,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8127840,"byte_end":8127854,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8127859,"byte_end":8127862,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8127867,"byte_end":8127874,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8127879,"byte_end":8127909,"line_start":73,"line_end":73,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8127914,"byte_end":8127917,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8127922,"byte_end":8127961,"line_start":75,"line_end":75,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8127966,"byte_end":8128014,"line_start":76,"line_end":76,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8128019,"byte_end":8128048,"line_start":77,"line_end":77,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8128053,"byte_end":8128056,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_ref();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8128061,"byte_end":8128096,"line_start":79,"line_end":79,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8128101,"byte_end":8128108,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2030},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8128701,"byte_end":8128708,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Cursor<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this cursor.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8128183,"byte_end":8128251,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8128256,"byte_end":8128259,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8128264,"byte_end":8128337,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ underlying value as it may corrupt this cursor's position.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8128342,"byte_end":8128404,"line_start":88,"line_end":88,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8128409,"byte_end":8128412,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8128417,"byte_end":8128431,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8128436,"byte_end":8128439,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8128444,"byte_end":8128451,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8128456,"byte_end":8128486,"line_start":93,"line_end":93,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8128491,"byte_end":8128494,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(Vec::new());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8128499,"byte_end":8128542,"line_start":95,"line_end":95,"column_start":5,"column_end":48}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8128547,"byte_end":8128595,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8128600,"byte_end":8128629,"line_start":97,"line_end":97,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8128634,"byte_end":8128637,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_mut();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8128642,"byte_end":8128677,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8128682,"byte_end":8128689,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2031},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8129429,"byte_end":8129437,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"position","qualname":"<Cursor<T>>::position","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position of this cursor.","sig":null,"attributes":[{"value":"/ Returns the current position of this cursor.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8128772,"byte_end":8128820,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8128825,"byte_end":8128828,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8128833,"byte_end":8128847,"line_start":107,"line_end":107,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8128852,"byte_end":8128855,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8128860,"byte_end":8128867,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8128872,"byte_end":8128946,"line_start":110,"line_end":110,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8128951,"byte_end":8128956,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8128961,"byte_end":8128991,"line_start":112,"line_end":112,"column_start":5,"column_end":35}},{"value":"/ use async_std::io::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8128996,"byte_end":8129030,"line_start":113,"line_end":113,"column_start":5,"column_end":39}},{"value":"/ use async_std::io::SeekFrom;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8129035,"byte_end":8129067,"line_start":114,"line_end":114,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8129072,"byte_end":8129075,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8129080,"byte_end":8129132,"line_start":116,"line_end":116,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8129137,"byte_end":8129140,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8129145,"byte_end":8129180,"line_start":118,"line_end":118,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8129185,"byte_end":8129188,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(2)).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8129193,"byte_end":8129236,"line_start":120,"line_end":120,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8129241,"byte_end":8129276,"line_start":121,"line_end":121,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8129281,"byte_end":8129284,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(-1)).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8129289,"byte_end":8129333,"line_start":123,"line_end":123,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(buff.position(), 1);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8129338,"byte_end":8129373,"line_start":124,"line_end":124,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8129378,"byte_end":8129383,"line_start":125,"line_end":125,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8129388,"byte_end":8129405,"line_start":126,"line_end":126,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8129410,"byte_end":8129417,"line_start":127,"line_end":127,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2032},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8129907,"byte_end":8129919,"line_start":149,"line_end":149,"column_start":12,"column_end":24},"name":"set_position","qualname":"<Cursor<T>>::set_position","value":"fn (&mut self, pos: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the position of this cursor.","sig":null,"attributes":[{"value":"/ Sets the position of this cursor.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8129495,"byte_end":8129532,"line_start":132,"line_end":132,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8129537,"byte_end":8129540,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8129545,"byte_end":8129559,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8129564,"byte_end":8129567,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8129572,"byte_end":8129579,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8129584,"byte_end":8129614,"line_start":137,"line_end":137,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8129619,"byte_end":8129622,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8129627,"byte_end":8129679,"line_start":139,"line_end":139,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8129684,"byte_end":8129687,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8129692,"byte_end":8129727,"line_start":141,"line_end":141,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8129732,"byte_end":8129735,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(2);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8129740,"byte_end":8129765,"line_start":143,"line_end":143,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8129770,"byte_end":8129805,"line_start":144,"line_end":144,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8129810,"byte_end":8129813,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(4);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8129818,"byte_end":8129843,"line_start":146,"line_end":146,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 4);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8129848,"byte_end":8129883,"line_start":147,"line_end":147,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8129888,"byte_end":8129895,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":2067},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8133724,"byte_end":8133729,"line_start":25,"line_end":25,"column_start":8,"column_end":13},"name":"empty","qualname":"::io::empty::empty","value":"fn () -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Creates a reader that contains no data.","sig":null,"attributes":[{"value":"/ Creates a reader that contains no data.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8133329,"byte_end":8133372,"line_start":7,"line_end":7,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8133373,"byte_end":8133376,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8133377,"byte_end":8133391,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8133392,"byte_end":8133395,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8133396,"byte_end":8133407,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8133408,"byte_end":8133482,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8133483,"byte_end":8133488,"line_start":13,"line_end":13,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8133489,"byte_end":8133511,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8133512,"byte_end":8133542,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8133543,"byte_end":8133546,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8133547,"byte_end":8133576,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"/ let mut reader = io::empty();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8133577,"byte_end":8133610,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/ reader.read_to_end(&mut buf).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8133611,"byte_end":8133651,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8133652,"byte_end":8133655,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ assert!(buf.is_empty());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8133656,"byte_end":8133684,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8133685,"byte_end":8133690,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8133691,"byte_end":8133708,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8133709,"byte_end":8133716,"line_start":24,"line_end":24,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2068},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8133947,"byte_end":8133952,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"Empty","qualname":"::io::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":2069}],"decl_id":null,"docs":" A reader that contains no data.","sig":null,"attributes":[{"value":"/ A reader that contains no data.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8133773,"byte_end":8133808,"line_start":29,"line_end":29,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8133809,"byte_end":8133812,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This reader is created by the [`empty`] function. See its","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8133813,"byte_end":8133874,"line_start":31,"line_end":31,"column_start":1,"column_end":62}},{"value":"/ documentation for more.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8133875,"byte_end":8133902,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8133903,"byte_end":8133906,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [`empty`]: fn.empty.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8133907,"byte_end":8133935,"line_start":34,"line_end":34,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":2087},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8135264,"byte_end":8135270,"line_start":26,"line_end":26,"column_start":8,"column_end":14},"name":"repeat","qualname":"::io::repeat::repeat","value":"fn (byte: u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"/ Creates an instance of a reader that infinitely repeats one byte.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8134745,"byte_end":8134814,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8134815,"byte_end":8134818,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ All reads from this reader will succeed by filling the specified buffer with the given byte.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8134819,"byte_end":8134915,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8134916,"byte_end":8134919,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8134920,"byte_end":8134935,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8134936,"byte_end":8134939,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8134940,"byte_end":8134951,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8134952,"byte_end":8135026,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8135027,"byte_end":8135032,"line_start":15,"line_end":15,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8135033,"byte_end":8135055,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8135056,"byte_end":8135086,"line_start":17,"line_end":17,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8135087,"byte_end":8135090,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = [0; 3];","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8135091,"byte_end":8135119,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ io::repeat(0b101).read_exact(&mut buffer).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8135120,"byte_end":8135173,"line_start":20,"line_end":20,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8135174,"byte_end":8135177,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(buffer, [0b101, 0b101, 0b101]);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8135178,"byte_end":8135224,"line_start":22,"line_end":22,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8135225,"byte_end":8135230,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8135231,"byte_end":8135248,"line_start":24,"line_end":24,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8135249,"byte_end":8135256,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2088},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8135540,"byte_end":8135546,"line_start":36,"line_end":36,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::io::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":2089}],"decl_id":null,"docs":" A reader which yields one byte over and over and over and over and over and...","sig":null,"attributes":[{"value":"/ A reader which yields one byte over and over and over and over and over and...","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8135316,"byte_end":8135398,"line_start":30,"line_end":30,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8135399,"byte_end":8135402,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This reader is created by the [`repeat`] function. See its","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8135403,"byte_end":8135465,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ documentation for more.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8135466,"byte_end":8135493,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8135494,"byte_end":8135497,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`repeat`]: fn.repeat.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8135498,"byte_end":8135528,"line_start":35,"line_end":35,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":2103},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8136480,"byte_end":8136484,"line_start":22,"line_end":22,"column_start":8,"column_end":12},"name":"sink","qualname":"::io::sink::sink","value":"fn () -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates a writer that consumes and drops all data.","sig":null,"attributes":[{"value":"/ Creates a writer that consumes and drops all data.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8136138,"byte_end":8136192,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8136193,"byte_end":8136196,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8136197,"byte_end":8136211,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8136212,"byte_end":8136215,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8136216,"byte_end":8136227,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8136228,"byte_end":8136302,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8136303,"byte_end":8136308,"line_start":13,"line_end":13,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8136309,"byte_end":8136331,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8136332,"byte_end":8136362,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8136363,"byte_end":8136366,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ let mut writer = io::sink();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8136367,"byte_end":8136399,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/ writer.write(b\"hello world\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8136400,"byte_end":8136440,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8136441,"byte_end":8136446,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8136447,"byte_end":8136464,"line_start":20,"line_end":20,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8136465,"byte_end":8136472,"line_start":21,"line_end":21,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2104},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8136712,"byte_end":8136716,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"Sink","qualname":"::io::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":2105}],"decl_id":null,"docs":" A writer that consumes and drops all data.","sig":null,"attributes":[{"value":"/ A writer that consumes and drops all data.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8136526,"byte_end":8136572,"line_start":26,"line_end":26,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8136573,"byte_end":8136576,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This writer is constructed by the [`sink`] function. See its documentation","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8136577,"byte_end":8136655,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/ for more.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8136656,"byte_end":8136669,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8136670,"byte_end":8136673,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [`sink`]: fn.sink.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8136674,"byte_end":8136700,"line_start":31,"line_end":31,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":2259},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8167898,"byte_end":8167905,"line_start":35,"line_end":35,"column_start":14,"column_end":21},"name":"timeout","qualname":"::io::timeout::timeout","value":"fn <F, T> (dur: Duration, f: F) -> io::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Awaits an I/O future or times out after a duration of time.","sig":null,"attributes":[{"value":"/ Awaits an I/O future or times out after a duration of time.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8167285,"byte_end":8167348,"line_start":11,"line_end":11,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8167349,"byte_end":8167352,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ If you want to await a non I/O future consider using","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8167353,"byte_end":8167409,"line_start":13,"line_end":13,"column_start":1,"column_end":57}},{"value":"/ [`future::timeout`](../future/fn.timeout.html) instead.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8167410,"byte_end":8167469,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8167470,"byte_end":8167473,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8167474,"byte_end":8167488,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8167489,"byte_end":8167492,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8167493,"byte_end":8167506,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8167507,"byte_end":8167581,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8167582,"byte_end":8167587,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8167588,"byte_end":8167616,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8167617,"byte_end":8167620,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ use async_std::io;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8167621,"byte_end":8167643,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8167644,"byte_end":8167647,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ io::timeout(Duration::from_secs(5), async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8167648,"byte_end":8167695,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/     let stdin = io::stdin();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8167696,"byte_end":8167728,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/     let mut line = String::new();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8167729,"byte_end":8167766,"line_start":27,"line_end":27,"column_start":1,"column_end":38}},{"value":"/     let n = stdin.read_line(&mut line).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8167767,"byte_end":8167817,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"/     Ok(())","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8167818,"byte_end":8167832,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/ })","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8167833,"byte_end":8167839,"line_start":30,"line_end":30,"column_start":1,"column_end":7}},{"value":"/ .await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8167840,"byte_end":8167852,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8167853,"byte_end":8167858,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8167859,"byte_end":8167876,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8167877,"byte_end":8167884,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2281},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8170010,"byte_end":8170016,"line_start":38,"line_end":38,"column_start":8,"column_end":14},"name":"stderr","qualname":"::io::stderr::stderr","value":"fn () -> Stderr","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard error of the current process.","sig":null,"attributes":[{"value":"/ Constructs a new handle to the standard error of the current process.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8169241,"byte_end":8169314,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8169315,"byte_end":8169318,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::stderr`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8169319,"byte_end":8169380,"line_start":15,"line_end":15,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8169381,"byte_end":8169384,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`std::io::stderr`]: https://doc.rust-lang.org/std/io/fn.stderr.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8169385,"byte_end":8169457,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8169458,"byte_end":8169461,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8169462,"byte_end":8169509,"line_start":19,"line_end":19,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8169510,"byte_end":8169513,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8169514,"byte_end":8169605,"line_start":21,"line_end":21,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8169606,"byte_end":8169698,"line_start":22,"line_end":22,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8169699,"byte_end":8169712,"line_start":23,"line_end":23,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8169713,"byte_end":8169716,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8169717,"byte_end":8169731,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8169732,"byte_end":8169735,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8169736,"byte_end":8169749,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8169750,"byte_end":8169824,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8169825,"byte_end":8169830,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8169831,"byte_end":8169853,"line_start":30,"line_end":30,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8169854,"byte_end":8169884,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8169885,"byte_end":8169888,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut stderr = io::stderr();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8169889,"byte_end":8169923,"line_start":33,"line_end":33,"column_start":1,"column_end":35}},{"value":"/ stderr.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8169924,"byte_end":8169970,"line_start":34,"line_end":34,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8169971,"byte_end":8169976,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8169977,"byte_end":8169994,"line_start":36,"line_end":36,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8169995,"byte_end":8170002,"line_start":37,"line_end":37,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2346},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8170646,"byte_end":8170652,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"Stderr","qualname":"::io::stderr::Stderr","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to the standard error of the current process.","sig":null,"attributes":[{"value":"/ A handle to the standard error of the current process.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8170174,"byte_end":8170232,"line_start":46,"line_end":46,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8170233,"byte_end":8170236,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ This writer is created by the [`stderr`] function. See its documentation for","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8170237,"byte_end":8170317,"line_start":48,"line_end":48,"column_start":1,"column_end":81}},{"value":"/ more.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8170318,"byte_end":8170327,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8170328,"byte_end":8170331,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8170332,"byte_end":8170379,"line_start":51,"line_end":51,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8170380,"byte_end":8170383,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8170384,"byte_end":8170475,"line_start":53,"line_end":53,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8170476,"byte_end":8170568,"line_start":54,"line_end":54,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8170569,"byte_end":8170582,"line_start":55,"line_end":55,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8170583,"byte_end":8170586,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`stderr`]: fn.stderr.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8170587,"byte_end":8170617,"line_start":57,"line_end":57,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":2303},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8178595,"byte_end":8178600,"line_start":40,"line_end":40,"column_start":8,"column_end":13},"name":"stdin","qualname":"::io::stdin::stdin","value":"fn () -> Stdin","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard input of the current process.","sig":null,"attributes":[{"value":"/ Constructs a new handle to the standard input of the current process.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8177840,"byte_end":8177913,"line_start":15,"line_end":15,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8177914,"byte_end":8177917,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::stdin`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8177918,"byte_end":8177978,"line_start":17,"line_end":17,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8177979,"byte_end":8177982,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::io::stdin`]: https://doc.rust-lang.org/std/io/fn.stdin.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8177983,"byte_end":8178053,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8178054,"byte_end":8178057,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8178058,"byte_end":8178105,"line_start":21,"line_end":21,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8178106,"byte_end":8178109,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8178110,"byte_end":8178201,"line_start":23,"line_end":23,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8178202,"byte_end":8178294,"line_start":24,"line_end":24,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8178295,"byte_end":8178308,"line_start":25,"line_end":25,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8178309,"byte_end":8178312,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8178313,"byte_end":8178327,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8178328,"byte_end":8178331,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8178332,"byte_end":8178345,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8178346,"byte_end":8178420,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8178421,"byte_end":8178426,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8178427,"byte_end":8178449,"line_start":32,"line_end":32,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8178450,"byte_end":8178453,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let stdin = io::stdin();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8178454,"byte_end":8178482,"line_start":34,"line_end":34,"column_start":1,"column_end":29}},{"value":"/ let mut line = String::new();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8178483,"byte_end":8178516,"line_start":35,"line_end":35,"column_start":1,"column_end":34}},{"value":"/ stdin.read_line(&mut line).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8178517,"byte_end":8178555,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8178556,"byte_end":8178561,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8178562,"byte_end":8178579,"line_start":38,"line_end":38,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8178580,"byte_end":8178587,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2380},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8179252,"byte_end":8179257,"line_start":62,"line_end":62,"column_start":12,"column_end":17},"name":"Stdin","qualname":"::io::stdin::Stdin","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to the standard input of the current process.","sig":null,"attributes":[{"value":"/ A handle to the standard input of the current process.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8178783,"byte_end":8178841,"line_start":49,"line_end":49,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8178842,"byte_end":8178845,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ This reader is created by the [`stdin`] function. See its documentation for","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8178846,"byte_end":8178925,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ more.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8178926,"byte_end":8178935,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8178936,"byte_end":8178939,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8178940,"byte_end":8178987,"line_start":54,"line_end":54,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8178988,"byte_end":8178991,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8178992,"byte_end":8179083,"line_start":56,"line_end":56,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8179084,"byte_end":8179176,"line_start":57,"line_end":57,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8179177,"byte_end":8179190,"line_start":58,"line_end":58,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8179191,"byte_end":8179194,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ [`stdin`]: fn.stdin.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8179195,"byte_end":8179223,"line_start":60,"line_end":60,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2305},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8181076,"byte_end":8181085,"line_start":132,"line_end":132,"column_start":18,"column_end":27},"name":"read_line","qualname":"<Stdin>::read_line","value":"fn (&self, buf: &mut String) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Reads a line of input into the specified buffer.","sig":null,"attributes":[{"value":"/ Reads a line of input into the specified buffer.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8180671,"byte_end":8180723,"line_start":117,"line_end":117,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8180728,"byte_end":8180731,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8180736,"byte_end":8180750,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8180755,"byte_end":8180758,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8180763,"byte_end":8180776,"line_start":121,"line_end":121,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8180781,"byte_end":8180855,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8180860,"byte_end":8180865,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ use async_std::io;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8180870,"byte_end":8180892,"line_start":124,"line_end":124,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8180897,"byte_end":8180900,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let stdin = io::stdin();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8180905,"byte_end":8180933,"line_start":126,"line_end":126,"column_start":5,"column_end":33}},{"value":"/ let mut line = String::new();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8180938,"byte_end":8180971,"line_start":127,"line_end":127,"column_start":5,"column_end":38}},{"value":"/ stdin.read_line(&mut line).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8180976,"byte_end":8181014,"line_start":128,"line_end":128,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8181019,"byte_end":8181024,"line_start":129,"line_end":129,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8181029,"byte_end":8181046,"line_start":130,"line_end":130,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8181051,"byte_end":8181058,"line_start":131,"line_end":131,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":2320},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdio.rs","byte_start":8186914,"byte_end":8186920,"line_start":10,"line_end":10,"column_start":14,"column_end":20},"name":"_print","qualname":"::io::stdio::_print","value":"fn (args: fmt::Arguments<'_>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2323},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdio.rs","byte_start":8187091,"byte_end":8187098,"line_start":17,"line_end":17,"column_start":14,"column_end":21},"name":"_eprint","qualname":"::io::stdio::_eprint","value":"fn (args: fmt::Arguments<'_>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2338},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8188271,"byte_end":8188277,"line_start":38,"line_end":38,"column_start":8,"column_end":14},"name":"stdout","qualname":"::io::stdout::stdout","value":"fn () -> Stdout","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard output of the current process.","sig":null,"attributes":[{"value":"/ Constructs a new handle to the standard output of the current process.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8187501,"byte_end":8187575,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8187576,"byte_end":8187579,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::stdout`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8187580,"byte_end":8187641,"line_start":15,"line_end":15,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8187642,"byte_end":8187645,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`std::io::stdout`]: https://doc.rust-lang.org/std/io/fn.stdout.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8187646,"byte_end":8187718,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8187719,"byte_end":8187722,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8187723,"byte_end":8187770,"line_start":19,"line_end":19,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8187771,"byte_end":8187774,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8187775,"byte_end":8187866,"line_start":21,"line_end":21,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8187867,"byte_end":8187959,"line_start":22,"line_end":22,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8187960,"byte_end":8187973,"line_start":23,"line_end":23,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8187974,"byte_end":8187977,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8187978,"byte_end":8187992,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8187993,"byte_end":8187996,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8187997,"byte_end":8188010,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8188011,"byte_end":8188085,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8188086,"byte_end":8188091,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8188092,"byte_end":8188114,"line_start":30,"line_end":30,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8188115,"byte_end":8188145,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8188146,"byte_end":8188149,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut stdout = io::stdout();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8188150,"byte_end":8188184,"line_start":33,"line_end":33,"column_start":1,"column_end":35}},{"value":"/ stdout.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8188185,"byte_end":8188231,"line_start":34,"line_end":34,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8188232,"byte_end":8188237,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8188238,"byte_end":8188255,"line_start":36,"line_end":36,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8188256,"byte_end":8188263,"line_start":37,"line_end":37,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2415},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8188908,"byte_end":8188914,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"Stdout","qualname":"::io::stdout::Stdout","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to the standard output of the current process.","sig":null,"attributes":[{"value":"/ A handle to the standard output of the current process.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8188435,"byte_end":8188494,"line_start":46,"line_end":46,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8188495,"byte_end":8188498,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ This writer is created by the [`stdout`] function. See its documentation","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8188499,"byte_end":8188575,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ for more.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8188576,"byte_end":8188589,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8188590,"byte_end":8188593,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8188594,"byte_end":8188641,"line_start":51,"line_end":51,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8188642,"byte_end":8188645,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8188646,"byte_end":8188737,"line_start":53,"line_end":53,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8188738,"byte_end":8188830,"line_start":54,"line_end":54,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8188831,"byte_end":8188844,"line_start":55,"line_end":55,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8188845,"byte_end":8188848,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`stdout`]: fn.stdout.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8188849,"byte_end":8188879,"line_start":57,"line_end":57,"column_start":1,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":86},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"os","qualname":"::os","value":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/mod.rs","parent":null,"children":[{"krate":0,"index":2449}],"decl_id":null,"docs":" OS-specific extensions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/utils.rs","byte_start":13436,"byte_end":13459,"line_start":157,"line_end":157,"column_start":13,"column_end":36}},{"value":"! OS-specific extensions.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/mod.rs","byte_start":6908090,"byte_end":6908117,"line_start":1,"line_end":1,"column_start":1,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":2449},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::os::unix","value":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/mod.rs","parent":null,"children":[{"krate":0,"index":2450},{"krate":0,"index":2456},{"krate":0,"index":2466}],"decl_id":null,"docs":" Platform-specific extensions for Unix platforms.\n","sig":null,"attributes":[{"value":"cfg(any(unix, feature = \"docs\"))","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/utils.rs","byte_start":12481,"byte_end":12516,"line_start":110,"line_end":110,"column_start":13,"column_end":48}},{"value":"! Platform-specific extensions for Unix platforms.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/mod.rs","byte_start":8195810,"byte_end":8195862,"line_start":1,"line_end":1,"column_start":1,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":2450},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/io.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::os::unix::io","value":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/io.rs","parent":null,"children":[{"krate":0,"index":2451}],"decl_id":null,"docs":" Unix-specific I/O extensions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/utils.rs","byte_start":13436,"byte_end":13459,"line_start":157,"line_end":157,"column_start":13,"column_end":36}},{"value":"! Unix-specific I/O extensions.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/io.rs","byte_start":8195955,"byte_end":8195988,"line_start":1,"line_end":1,"column_start":1,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":2456},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fs","qualname":"::os::unix::fs","value":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","parent":null,"children":[{"krate":0,"index":2457},{"krate":0,"index":2458},{"krate":0,"index":2459},{"krate":0,"index":2460},{"krate":0,"index":2645}],"decl_id":null,"docs":" Unix-specific filesystem extensions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/utils.rs","byte_start":13641,"byte_end":13668,"line_start":169,"line_end":169,"column_start":13,"column_end":40}},{"value":"! Unix-specific filesystem extensions.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8198247,"byte_end":8198287,"line_start":1,"line_end":1,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2460},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8198908,"byte_end":8198915,"line_start":26,"line_end":26,"column_start":14,"column_end":21},"name":"symlink","qualname":"::os::unix::fs::symlink","value":"fn <P, Q> (src: P, dst: Q) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new symbolic link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a new symbolic link on the filesystem.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8198361,"byte_end":8198411,"line_start":7,"line_end":7,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8198412,"byte_end":8198415,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a symbolic link pointing to the `src` path.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8198416,"byte_end":8198486,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8198487,"byte_end":8198490,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::os::unix::fs::symlink`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8198491,"byte_end":8198563,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8198564,"byte_end":8198567,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::os::unix::fs::symlink`]: https://doc.rust-lang.org/std/os/unix/fs/fn.symlink.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8198568,"byte_end":8198660,"line_start":13,"line_end":13,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8198661,"byte_end":8198664,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8198665,"byte_end":8198679,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8198680,"byte_end":8198683,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8198684,"byte_end":8198697,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8198698,"byte_end":8198772,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8198773,"byte_end":8198778,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ use async_std::os::unix::fs::symlink;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8198779,"byte_end":8198820,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8198821,"byte_end":8198824,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ symlink(\"a.txt\", \"b.txt\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8198825,"byte_end":8198862,"line_start":22,"line_end":22,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8198863,"byte_end":8198868,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8198869,"byte_end":8198886,"line_start":24,"line_end":24,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/fs.rs","byte_start":8198887,"byte_end":8198894,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":2466},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::os::unix::net","value":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/mod.rs","parent":null,"children":[{"krate":0,"index":2467},{"krate":0,"index":2468},{"krate":0,"index":2471},{"krate":0,"index":2472},{"krate":0,"index":2536},{"krate":0,"index":2584},{"krate":0,"index":2657}],"decl_id":null,"docs":" Unix-specific networking extensions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/utils.rs","byte_start":13641,"byte_end":13668,"line_start":169,"line_end":169,"column_start":13,"column_end":40}},{"value":"! Unix-specific networking extensions.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/mod.rs","byte_start":8200831,"byte_end":8200871,"line_start":1,"line_end":1,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":2487},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8204798,"byte_end":8204810,"line_start":44,"line_end":44,"column_start":12,"column_end":24},"name":"UnixDatagram","qualname":"::os::unix::net::datagram::UnixDatagram","value":"UnixDatagram {  }","parent":null,"children":[{"krate":0,"index":2488}],"decl_id":null,"docs":" A Unix datagram socket.","sig":null,"attributes":[{"value":"/ A Unix datagram socket.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8203909,"byte_end":8203936,"line_start":16,"line_end":16,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8203937,"byte_end":8203940,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ After creating a `UnixDatagram` by [`bind`]ing it to a path, data can be [sent to] and","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8203941,"byte_end":8204031,"line_start":18,"line_end":18,"column_start":1,"column_end":91}},{"value":"/ [received from] any other socket address.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8204032,"byte_end":8204077,"line_start":19,"line_end":19,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8204078,"byte_end":8204081,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::os::unix::net::UnixDatagram`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8204082,"byte_end":8204156,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8204157,"byte_end":8204160,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [`std::os::unix::net::UnixDatagram`]:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8204161,"byte_end":8204202,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ https://doc.rust-lang.org/std/os/unix/net/struct.UnixDatagram.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8204203,"byte_end":8204273,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/ [`bind`]: #method.bind","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8204274,"byte_end":8204300,"line_start":25,"line_end":25,"column_start":1,"column_end":27}},{"value":"/ [received from]: #method.recv_from","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8204301,"byte_end":8204339,"line_start":26,"line_end":26,"column_start":1,"column_end":39}},{"value":"/ [sent to]: #method.send_to","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8204340,"byte_end":8204370,"line_start":27,"line_end":27,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8204371,"byte_end":8204374,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8204375,"byte_end":8204390,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8204391,"byte_end":8204394,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8204395,"byte_end":8204408,"line_start":31,"line_end":31,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8204409,"byte_end":8204483,"line_start":32,"line_end":32,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8204484,"byte_end":8204489,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8204490,"byte_end":8204537,"line_start":34,"line_end":34,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8204538,"byte_end":8204541,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let socket = UnixDatagram::bind(\"/tmp/socket1\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8204542,"byte_end":8204601,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"/ socket.send_to(b\"hello world\", \"/tmp/socket2\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8204602,"byte_end":8204660,"line_start":37,"line_end":37,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8204661,"byte_end":8204664,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8204665,"byte_end":8204699,"line_start":39,"line_end":39,"column_start":1,"column_end":35}},{"value":"/ let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8204700,"byte_end":8204754,"line_start":40,"line_end":40,"column_start":1,"column_end":55}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8204755,"byte_end":8204760,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8204761,"byte_end":8204778,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8204779,"byte_end":8204786,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2491},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8205414,"byte_end":8205418,"line_start":68,"line_end":68,"column_start":18,"column_end":22},"name":"bind","qualname":"<UnixDatagram>::bind","value":"fn <P> (path: P) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix datagram socket bound to the given path.","sig":null,"attributes":[{"value":"/ Creates a Unix datagram socket bound to the given path.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8205028,"byte_end":8205087,"line_start":55,"line_end":55,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8205092,"byte_end":8205095,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8205100,"byte_end":8205114,"line_start":57,"line_end":57,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8205119,"byte_end":8205122,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8205127,"byte_end":8205140,"line_start":59,"line_end":59,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8205145,"byte_end":8205219,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8205224,"byte_end":8205229,"line_start":61,"line_end":61,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8205234,"byte_end":8205281,"line_start":62,"line_end":62,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8205286,"byte_end":8205289,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::bind(\"/tmp/socket\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8205294,"byte_end":8205352,"line_start":64,"line_end":64,"column_start":5,"column_end":63}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8205357,"byte_end":8205362,"line_start":65,"line_end":65,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8205367,"byte_end":8205384,"line_start":66,"line_end":66,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8205389,"byte_end":8205396,"line_start":67,"line_end":67,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2496},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8206022,"byte_end":8206029,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"unbound","qualname":"<UnixDatagram>::unbound","value":"fn () -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix datagram which is not bound to any address.","sig":null,"attributes":[{"value":"/ Creates a Unix datagram which is not bound to any address.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8205655,"byte_end":8205717,"line_start":74,"line_end":74,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8205722,"byte_end":8205725,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8205730,"byte_end":8205744,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8205749,"byte_end":8205752,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8205757,"byte_end":8205770,"line_start":78,"line_end":78,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8205775,"byte_end":8205849,"line_start":79,"line_end":79,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8205854,"byte_end":8205859,"line_start":80,"line_end":80,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8205864,"byte_end":8205911,"line_start":81,"line_end":81,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8205916,"byte_end":8205919,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8205924,"byte_end":8205966,"line_start":83,"line_end":83,"column_start":5,"column_end":47}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8205971,"byte_end":8205976,"line_start":84,"line_end":84,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8205981,"byte_end":8205998,"line_start":85,"line_end":85,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8206003,"byte_end":8206010,"line_start":86,"line_end":86,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2497},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8206601,"byte_end":8206605,"line_start":107,"line_end":107,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixDatagram>::pair","value":"fn () -> io::Result<(UnixDatagram, UnixDatagram)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8206167,"byte_end":8206216,"line_start":92,"line_end":92,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8206221,"byte_end":8206224,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Returns two sockets which are connected to each other.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8206229,"byte_end":8206287,"line_start":94,"line_end":94,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8206292,"byte_end":8206295,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8206300,"byte_end":8206314,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8206319,"byte_end":8206322,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8206327,"byte_end":8206340,"line_start":98,"line_end":98,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8206345,"byte_end":8206419,"line_start":99,"line_end":99,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8206424,"byte_end":8206429,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8206434,"byte_end":8206481,"line_start":101,"line_end":101,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8206486,"byte_end":8206489,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let (socket1, socket2) = UnixDatagram::pair()?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8206494,"byte_end":8206545,"line_start":103,"line_end":103,"column_start":5,"column_end":56}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8206550,"byte_end":8206555,"line_start":104,"line_end":104,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8206560,"byte_end":8206577,"line_start":105,"line_end":105,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8206582,"byte_end":8206589,"line_start":106,"line_end":106,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2498},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8207494,"byte_end":8207501,"line_start":135,"line_end":135,"column_start":18,"column_end":25},"name":"connect","qualname":"<UnixDatagram>::connect","value":"fn <P> (&self, path: P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the socket to the specified address.","sig":null,"attributes":[{"value":"/ Connects the socket to the specified address.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8206813,"byte_end":8206862,"line_start":114,"line_end":114,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8206867,"byte_end":8206870,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ The [`send`] method may be used to send data to the specified address. [`recv`] and","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8206875,"byte_end":8206962,"line_start":116,"line_end":116,"column_start":5,"column_end":92}},{"value":"/ [`recv_from`] will only receive data from that address.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8206967,"byte_end":8207026,"line_start":117,"line_end":117,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8207031,"byte_end":8207034,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ [`send`]: #method.send","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8207039,"byte_end":8207065,"line_start":119,"line_end":119,"column_start":5,"column_end":31}},{"value":"/ [`recv`]: #method.recv","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8207070,"byte_end":8207096,"line_start":120,"line_end":120,"column_start":5,"column_end":31}},{"value":"/ [`recv_from`]: #method.recv_from","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8207101,"byte_end":8207137,"line_start":121,"line_end":121,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8207142,"byte_end":8207145,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8207150,"byte_end":8207164,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8207169,"byte_end":8207172,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8207177,"byte_end":8207190,"line_start":125,"line_end":125,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8207195,"byte_end":8207269,"line_start":126,"line_end":126,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8207274,"byte_end":8207279,"line_start":127,"line_end":127,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8207284,"byte_end":8207331,"line_start":128,"line_end":128,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8207336,"byte_end":8207339,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8207344,"byte_end":8207386,"line_start":130,"line_end":130,"column_start":5,"column_end":47}},{"value":"/ socket.connect(\"/tmp/socket\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8207391,"byte_end":8207432,"line_start":131,"line_end":131,"column_start":5,"column_end":46}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8207437,"byte_end":8207442,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8207447,"byte_end":8207464,"line_start":133,"line_end":133,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8207469,"byte_end":8207476,"line_start":134,"line_end":134,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2502},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8208105,"byte_end":8208115,"line_start":155,"line_end":155,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixDatagram>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket.","sig":null,"attributes":[{"value":"/ Returns the address of this socket.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8207704,"byte_end":8207743,"line_start":141,"line_end":141,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8207748,"byte_end":8207751,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8207756,"byte_end":8207770,"line_start":143,"line_end":143,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8207775,"byte_end":8207778,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8207783,"byte_end":8207796,"line_start":145,"line_end":145,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8207801,"byte_end":8207875,"line_start":146,"line_end":146,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8207880,"byte_end":8207885,"line_start":147,"line_end":147,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8207890,"byte_end":8207937,"line_start":148,"line_end":148,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8207942,"byte_end":8207945,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::bind(\"/tmp/socket\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8207950,"byte_end":8208008,"line_start":150,"line_end":150,"column_start":5,"column_end":63}},{"value":"/ let addr = socket.local_addr()?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8208013,"byte_end":8208049,"line_start":151,"line_end":151,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8208054,"byte_end":8208059,"line_start":152,"line_end":152,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8208064,"byte_end":8208081,"line_start":153,"line_end":153,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8208086,"byte_end":8208093,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2503},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8208762,"byte_end":8208771,"line_start":178,"line_end":178,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixDatagram>::peer_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket's peer.","sig":null,"attributes":[{"value":"/ Returns the address of this socket's peer.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8208206,"byte_end":8208252,"line_start":159,"line_end":159,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8208257,"byte_end":8208260,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect the socket to a peer.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8208265,"byte_end":8208326,"line_start":161,"line_end":161,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8208331,"byte_end":8208334,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: #method.connect","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8208339,"byte_end":8208371,"line_start":163,"line_end":163,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8208376,"byte_end":8208379,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8208384,"byte_end":8208398,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8208403,"byte_end":8208406,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8208411,"byte_end":8208424,"line_start":167,"line_end":167,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8208429,"byte_end":8208503,"line_start":168,"line_end":168,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8208508,"byte_end":8208513,"line_start":169,"line_end":169,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8208518,"byte_end":8208565,"line_start":170,"line_end":170,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8208570,"byte_end":8208573,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8208578,"byte_end":8208620,"line_start":172,"line_end":172,"column_start":5,"column_end":47}},{"value":"/ socket.connect(\"/tmp/socket\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8208625,"byte_end":8208666,"line_start":173,"line_end":173,"column_start":5,"column_end":46}},{"value":"/ let peer = socket.peer_addr()?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8208671,"byte_end":8208706,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8208711,"byte_end":8208716,"line_start":175,"line_end":175,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8208721,"byte_end":8208738,"line_start":176,"line_end":176,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8208743,"byte_end":8208750,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2504},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8209405,"byte_end":8209414,"line_start":199,"line_end":199,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UnixDatagram>::recv_from","value":"fn (&self, buf: &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8208861,"byte_end":8208895,"line_start":182,"line_end":182,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8208900,"byte_end":8208903,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read and the address from where the data came.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8208908,"byte_end":8208998,"line_start":184,"line_end":184,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8209003,"byte_end":8209006,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8209011,"byte_end":8209025,"line_start":186,"line_end":186,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8209030,"byte_end":8209033,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8209038,"byte_end":8209051,"line_start":188,"line_end":188,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8209056,"byte_end":8209130,"line_start":189,"line_end":189,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8209135,"byte_end":8209140,"line_start":190,"line_end":190,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8209145,"byte_end":8209192,"line_start":191,"line_end":191,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8209197,"byte_end":8209200,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8209205,"byte_end":8209247,"line_start":193,"line_end":193,"column_start":5,"column_end":47}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8209252,"byte_end":8209284,"line_start":194,"line_end":194,"column_start":5,"column_end":37}},{"value":"/ let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8209289,"byte_end":8209343,"line_start":195,"line_end":195,"column_start":5,"column_end":59}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8209348,"byte_end":8209353,"line_start":196,"line_end":196,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8209358,"byte_end":8209375,"line_start":197,"line_end":197,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8209380,"byte_end":8209387,"line_start":198,"line_end":198,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2509},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8210140,"byte_end":8210144,"line_start":224,"line_end":224,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnixDatagram>::recv","value":"fn (&self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8209634,"byte_end":8209668,"line_start":207,"line_end":207,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8209673,"byte_end":8209676,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8209681,"byte_end":8209730,"line_start":209,"line_end":209,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8209735,"byte_end":8209738,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8209743,"byte_end":8209757,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8209762,"byte_end":8209765,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8209770,"byte_end":8209783,"line_start":213,"line_end":213,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8209788,"byte_end":8209862,"line_start":214,"line_end":214,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8209867,"byte_end":8209872,"line_start":215,"line_end":215,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8209877,"byte_end":8209924,"line_start":216,"line_end":216,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8209929,"byte_end":8209932,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::bind(\"/tmp/socket\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8209937,"byte_end":8209995,"line_start":218,"line_end":218,"column_start":5,"column_end":63}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8210000,"byte_end":8210032,"line_start":219,"line_end":219,"column_start":5,"column_end":37}},{"value":"/ let n = socket.recv(&mut buf).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8210037,"byte_end":8210078,"line_start":220,"line_end":220,"column_start":5,"column_end":46}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8210083,"byte_end":8210088,"line_start":221,"line_end":221,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8210093,"byte_end":8210110,"line_start":222,"line_end":222,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8210115,"byte_end":8210122,"line_start":223,"line_end":223,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2514},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8210787,"byte_end":8210794,"line_start":244,"line_end":244,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UnixDatagram>::send_to","value":"fn <P> (&self, buf: &[u8], path: P) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8210295,"byte_end":8210349,"line_start":228,"line_end":228,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8210354,"byte_end":8210357,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8210362,"byte_end":8210414,"line_start":230,"line_end":230,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8210419,"byte_end":8210422,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8210427,"byte_end":8210441,"line_start":232,"line_end":232,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8210446,"byte_end":8210449,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8210454,"byte_end":8210467,"line_start":234,"line_end":234,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8210472,"byte_end":8210546,"line_start":235,"line_end":235,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8210551,"byte_end":8210556,"line_start":236,"line_end":236,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8210561,"byte_end":8210608,"line_start":237,"line_end":237,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8210613,"byte_end":8210616,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8210621,"byte_end":8210663,"line_start":239,"line_end":239,"column_start":5,"column_end":47}},{"value":"/ socket.send_to(b\"hello world\", \"/tmp/socket\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8210668,"byte_end":8210725,"line_start":240,"line_end":240,"column_start":5,"column_end":62}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8210730,"byte_end":8210735,"line_start":241,"line_end":241,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8210740,"byte_end":8210757,"line_start":242,"line_end":242,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8210762,"byte_end":8210769,"line_start":243,"line_end":243,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2520},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8211551,"byte_end":8211555,"line_start":269,"line_end":269,"column_start":18,"column_end":22},"name":"send","qualname":"<UnixDatagram>::send","value":"fn (&self, buf: &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8211035,"byte_end":8211085,"line_start":252,"line_end":252,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8211090,"byte_end":8211093,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8211098,"byte_end":8211150,"line_start":254,"line_end":254,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8211155,"byte_end":8211158,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8211163,"byte_end":8211177,"line_start":256,"line_end":256,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8211182,"byte_end":8211185,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8211190,"byte_end":8211203,"line_start":258,"line_end":258,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8211208,"byte_end":8211282,"line_start":259,"line_end":259,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8211287,"byte_end":8211292,"line_start":260,"line_end":260,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8211297,"byte_end":8211344,"line_start":261,"line_end":261,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8211349,"byte_end":8211352,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8211357,"byte_end":8211399,"line_start":263,"line_end":263,"column_start":5,"column_end":47}},{"value":"/ socket.connect(\"/tmp/socket\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8211404,"byte_end":8211445,"line_start":264,"line_end":264,"column_start":5,"column_end":46}},{"value":"/ socket.send(b\"hello world\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8211450,"byte_end":8211489,"line_start":265,"line_end":265,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8211494,"byte_end":8211499,"line_start":266,"line_end":266,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8211504,"byte_end":8211521,"line_start":267,"line_end":267,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8211526,"byte_end":8211533,"line_start":268,"line_end":268,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2525},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8212428,"byte_end":8212436,"line_start":293,"line_end":293,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixDatagram>::shutdown","value":"fn (&self, how: Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shut down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shut down the read, write, or both halves of this connection.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8211703,"byte_end":8211768,"line_start":273,"line_end":273,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8211773,"byte_end":8211776,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the specified portions to","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8211781,"byte_end":8211871,"line_start":275,"line_end":275,"column_start":5,"column_end":95}},{"value":"/ immediately return with an appropriate value (see the documentation of [`Shutdown`]).","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8211876,"byte_end":8211965,"line_start":276,"line_end":276,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8211970,"byte_end":8211973,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ [`Shutdown`]: https://doc.rust-lang.org/std/net/enum.Shutdown.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8211978,"byte_end":8212048,"line_start":278,"line_end":278,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8212053,"byte_end":8212056,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8212061,"byte_end":8212076,"line_start":280,"line_end":280,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8212081,"byte_end":8212084,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8212089,"byte_end":8212102,"line_start":282,"line_end":282,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8212107,"byte_end":8212181,"line_start":283,"line_end":283,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8212186,"byte_end":8212191,"line_start":284,"line_end":284,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8212196,"byte_end":8212243,"line_start":285,"line_end":285,"column_start":5,"column_end":52}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8212248,"byte_end":8212275,"line_start":286,"line_end":286,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8212280,"byte_end":8212283,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8212288,"byte_end":8212330,"line_start":288,"line_end":288,"column_start":5,"column_end":47}},{"value":"/ socket.shutdown(Shutdown::Both)?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8212335,"byte_end":8212372,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8212377,"byte_end":8212382,"line_start":290,"line_end":290,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8212387,"byte_end":8212404,"line_start":291,"line_end":291,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8212409,"byte_end":8212416,"line_start":292,"line_end":292,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2557},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8215640,"byte_end":8215652,"line_start":52,"line_end":52,"column_start":12,"column_end":24},"name":"UnixListener","qualname":"::os::unix::net::listener::UnixListener","value":"UnixListener {  }","parent":null,"children":[{"krate":0,"index":2558}],"decl_id":null,"docs":" A Unix domain socket server, listening for connections.","sig":null,"attributes":[{"value":"/ A Unix domain socket server, listening for connections.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8214548,"byte_end":8214607,"line_start":19,"line_end":19,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8214608,"byte_end":8214611,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ After creating a `UnixListener` by [`bind`]ing it to a socket address, it listens for incoming","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8214612,"byte_end":8214710,"line_start":21,"line_end":21,"column_start":1,"column_end":99}},{"value":"/ connections. These can be accepted by awaiting elements from the async stream of [`incoming`]","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8214711,"byte_end":8214808,"line_start":22,"line_end":22,"column_start":1,"column_end":98}},{"value":"/ connections.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8214809,"byte_end":8214825,"line_start":23,"line_end":23,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8214826,"byte_end":8214829,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The socket will be closed when the value is dropped.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8214830,"byte_end":8214886,"line_start":25,"line_end":25,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8214887,"byte_end":8214890,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::os::unix::net::UnixListener`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8214891,"byte_end":8214965,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8214966,"byte_end":8214969,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [`std::os::unix::net::UnixListener`]:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8214970,"byte_end":8215011,"line_start":29,"line_end":29,"column_start":1,"column_end":42}},{"value":"/ https://doc.rust-lang.org/std/os/unix/net/struct.UnixListener.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8215012,"byte_end":8215082,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/ [`bind`]: #method.bind","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8215083,"byte_end":8215109,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/ [`incoming`]: #method.incoming","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8215110,"byte_end":8215144,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8215145,"byte_end":8215148,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8215149,"byte_end":8215163,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8215164,"byte_end":8215167,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8215168,"byte_end":8215181,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8215182,"byte_end":8215256,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8215257,"byte_end":8215262,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ use async_std::os::unix::net::UnixListener;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8215263,"byte_end":8215310,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8215311,"byte_end":8215341,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8215342,"byte_end":8215345,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ let listener = UnixListener::bind(\"/tmp/socket\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8215346,"byte_end":8215406,"line_start":42,"line_end":42,"column_start":1,"column_end":61}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8215407,"byte_end":8215450,"line_start":43,"line_end":43,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8215451,"byte_end":8215454,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8215455,"byte_end":8215507,"line_start":45,"line_end":45,"column_start":1,"column_end":53}},{"value":"/     let mut stream = stream?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8215508,"byte_end":8215541,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/     stream.write_all(b\"hello world\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8215542,"byte_end":8215590,"line_start":47,"line_end":47,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8215591,"byte_end":8215596,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8215597,"byte_end":8215602,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8215603,"byte_end":8215620,"line_start":50,"line_end":50,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8215621,"byte_end":8215628,"line_start":51,"line_end":51,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2560},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8216117,"byte_end":8216121,"line_start":70,"line_end":70,"column_start":18,"column_end":22},"name":"bind","qualname":"<UnixListener>::bind","value":"fn <P> (path: P) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix datagram listener bound to the given path.","sig":null,"attributes":[{"value":"/ Creates a Unix datagram listener bound to the given path.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8215727,"byte_end":8215788,"line_start":57,"line_end":57,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8215793,"byte_end":8215796,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8215801,"byte_end":8215815,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8215820,"byte_end":8215823,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8215828,"byte_end":8215841,"line_start":61,"line_end":61,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8215846,"byte_end":8215920,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8215925,"byte_end":8215930,"line_start":63,"line_end":63,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixListener;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8215935,"byte_end":8215982,"line_start":64,"line_end":64,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8215987,"byte_end":8215990,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ let listener = UnixListener::bind(\"/tmp/socket\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8215995,"byte_end":8216055,"line_start":66,"line_end":66,"column_start":5,"column_end":65}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8216060,"byte_end":8216065,"line_start":67,"line_end":67,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8216070,"byte_end":8216087,"line_start":68,"line_end":68,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8216092,"byte_end":8216099,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2565},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8216949,"byte_end":8216955,"line_start":95,"line_end":95,"column_start":18,"column_end":24},"name":"accept","qualname":"<UnixListener>::accept","value":"fn (&self) -> io::Result<(UnixStream, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8216405,"byte_end":8216460,"line_start":79,"line_end":79,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8216465,"byte_end":8216468,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ When a connection is established, the corresponding stream and address will be returned.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8216473,"byte_end":8216565,"line_start":81,"line_end":81,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8216570,"byte_end":8216573,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8216578,"byte_end":8216592,"line_start":83,"line_end":83,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8216597,"byte_end":8216600,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8216605,"byte_end":8216618,"line_start":85,"line_end":85,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8216623,"byte_end":8216697,"line_start":86,"line_end":86,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8216702,"byte_end":8216707,"line_start":87,"line_end":87,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixListener;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8216712,"byte_end":8216759,"line_start":88,"line_end":88,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8216764,"byte_end":8216767,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ let listener = UnixListener::bind(\"/tmp/socket\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8216772,"byte_end":8216832,"line_start":90,"line_end":90,"column_start":5,"column_end":65}},{"value":"/ let (socket, addr) = listener.accept().await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8216837,"byte_end":8216887,"line_start":91,"line_end":91,"column_start":5,"column_end":55}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8216892,"byte_end":8216897,"line_start":92,"line_end":92,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8216902,"byte_end":8216919,"line_start":93,"line_end":93,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8216924,"byte_end":8216931,"line_start":94,"line_end":94,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2569},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8218910,"byte_end":8218918,"line_start":147,"line_end":147,"column_start":12,"column_end":20},"name":"incoming","qualname":"<UnixListener>::incoming","value":"fn (&self) -> Incoming<'_>","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of incoming connections.","sig":null,"attributes":[{"value":"/ Returns a stream of incoming connections.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8217964,"byte_end":8218009,"line_start":121,"line_end":121,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8218014,"byte_end":8218017,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Iterating over this stream is equivalent to calling [`accept`] in a loop. The stream of","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8218022,"byte_end":8218113,"line_start":123,"line_end":123,"column_start":5,"column_end":96}},{"value":"/ connections is infinite, i.e awaiting the next connection will never result in [`None`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8218118,"byte_end":8218210,"line_start":124,"line_end":124,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8218215,"byte_end":8218218,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ [`accept`]: #method.accept","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8218223,"byte_end":8218253,"line_start":126,"line_end":126,"column_start":5,"column_end":35}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8218258,"byte_end":8218338,"line_start":127,"line_end":127,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8218343,"byte_end":8218346,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8218351,"byte_end":8218365,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8218370,"byte_end":8218373,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8218378,"byte_end":8218391,"line_start":131,"line_end":131,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8218396,"byte_end":8218470,"line_start":132,"line_end":132,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8218475,"byte_end":8218480,"line_start":133,"line_end":133,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixListener;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8218485,"byte_end":8218532,"line_start":134,"line_end":134,"column_start":5,"column_end":52}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8218537,"byte_end":8218567,"line_start":135,"line_end":135,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8218572,"byte_end":8218575,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ let listener = UnixListener::bind(\"/tmp/socket\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8218580,"byte_end":8218640,"line_start":137,"line_end":137,"column_start":5,"column_end":65}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8218645,"byte_end":8218688,"line_start":138,"line_end":138,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8218693,"byte_end":8218696,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8218701,"byte_end":8218753,"line_start":140,"line_end":140,"column_start":5,"column_end":57}},{"value":"/     let mut stream = stream?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8218758,"byte_end":8218791,"line_start":141,"line_end":141,"column_start":5,"column_end":38}},{"value":"/     stream.write_all(b\"hello world\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8218796,"byte_end":8218844,"line_start":142,"line_end":142,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8218849,"byte_end":8218854,"line_start":143,"line_end":143,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8218859,"byte_end":8218864,"line_start":144,"line_end":144,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8218869,"byte_end":8218886,"line_start":145,"line_end":145,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8218891,"byte_end":8218898,"line_start":146,"line_end":146,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2570},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8219398,"byte_end":8219408,"line_start":165,"line_end":165,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixListener>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8218978,"byte_end":8219032,"line_start":151,"line_end":151,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8219037,"byte_end":8219040,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8219045,"byte_end":8219059,"line_start":153,"line_end":153,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8219064,"byte_end":8219067,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8219072,"byte_end":8219085,"line_start":155,"line_end":155,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8219090,"byte_end":8219164,"line_start":156,"line_end":156,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8219169,"byte_end":8219174,"line_start":157,"line_end":157,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixListener;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8219179,"byte_end":8219226,"line_start":158,"line_end":158,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8219231,"byte_end":8219234,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ let listener = UnixListener::bind(\"/tmp/socket\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8219239,"byte_end":8219299,"line_start":160,"line_end":160,"column_start":5,"column_end":65}},{"value":"/ let addr = listener.local_addr()?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8219304,"byte_end":8219342,"line_start":161,"line_end":161,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8219347,"byte_end":8219352,"line_start":162,"line_end":162,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8219357,"byte_end":8219374,"line_start":163,"line_end":163,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8219379,"byte_end":8219386,"line_start":164,"line_end":164,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2650},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8220451,"byte_end":8220459,"line_start":195,"line_end":195,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::os::unix::net::listener::Incoming","value":"","parent":null,"children":[],"decl_id":null,"docs":" A stream of incoming Unix domain socket connections.","sig":null,"attributes":[{"value":"/ A stream of incoming Unix domain socket connections.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8219836,"byte_end":8219892,"line_start":183,"line_end":183,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8219893,"byte_end":8219896,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ This stream is infinite, i.e awaiting the next connection will never result in [`None`]. It is","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8219897,"byte_end":8219995,"line_start":185,"line_end":185,"column_start":1,"column_end":99}},{"value":"/ created by the [`incoming`] method on [`UnixListener`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8219996,"byte_end":8220055,"line_start":186,"line_end":186,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8220056,"byte_end":8220059,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::os::unix::net::Incoming`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8220060,"byte_end":8220130,"line_start":188,"line_end":188,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8220131,"byte_end":8220134,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ [`std::os::unix::net::Incoming`]: https://doc.rust-lang.org/std/os/unix/net/struct.Incoming.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8220135,"byte_end":8220235,"line_start":190,"line_end":190,"column_start":1,"column_end":101}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8220236,"byte_end":8220316,"line_start":191,"line_end":191,"column_start":1,"column_end":81}},{"value":"/ [`incoming`]: struct.UnixListener.html#method.incoming","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8220317,"byte_end":8220375,"line_start":192,"line_end":192,"column_start":1,"column_end":59}},{"value":"/ [`UnixListener`]: struct.UnixListener.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8220376,"byte_end":8220422,"line_start":193,"line_end":193,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":2608},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8222949,"byte_end":8222959,"line_start":40,"line_end":40,"column_start":12,"column_end":22},"name":"UnixStream","qualname":"::os::unix::net::stream::UnixStream","value":"UnixStream {  }","parent":null,"children":[{"krate":0,"index":2609}],"decl_id":null,"docs":" A Unix stream socket.","sig":null,"attributes":[{"value":"/ A Unix stream socket.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8222297,"byte_end":8222322,"line_start":17,"line_end":17,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8222323,"byte_end":8222326,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::os::unix::net::UnixStream`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8222327,"byte_end":8222399,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8222400,"byte_end":8222403,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`std::os::unix::net::UnixStream`]:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8222404,"byte_end":8222443,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ https://doc.rust-lang.org/std/os/unix/net/struct.UnixStream.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8222444,"byte_end":8222512,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8222513,"byte_end":8222516,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8222517,"byte_end":8222531,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8222532,"byte_end":8222535,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8222536,"byte_end":8222549,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8222550,"byte_end":8222624,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8222625,"byte_end":8222630,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8222631,"byte_end":8222676,"line_start":29,"line_end":29,"column_start":1,"column_end":46}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8222677,"byte_end":8222707,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8222708,"byte_end":8222711,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut stream = UnixStream::connect(\"/tmp/socket\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8222712,"byte_end":8222775,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ stream.write_all(b\"hello world\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8222776,"byte_end":8222820,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8222821,"byte_end":8222824,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let mut response = Vec::new();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8222825,"byte_end":8222859,"line_start":35,"line_end":35,"column_start":1,"column_end":35}},{"value":"/ stream.read_to_end(&mut response).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8222860,"byte_end":8222905,"line_start":36,"line_end":36,"column_start":1,"column_end":46}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8222906,"byte_end":8222911,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8222912,"byte_end":8222929,"line_start":38,"line_end":38,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8222930,"byte_end":8222937,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2611},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8223419,"byte_end":8223426,"line_start":58,"line_end":58,"column_start":18,"column_end":25},"name":"connect","qualname":"<UnixStream>::connect","value":"fn <P> (path: P) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Connects to the socket to the specified address.","sig":null,"attributes":[{"value":"/ Connects to the socket to the specified address.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8223041,"byte_end":8223093,"line_start":45,"line_end":45,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8223098,"byte_end":8223101,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8223106,"byte_end":8223120,"line_start":47,"line_end":47,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8223125,"byte_end":8223128,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8223133,"byte_end":8223146,"line_start":49,"line_end":49,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8223151,"byte_end":8223225,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8223230,"byte_end":8223235,"line_start":51,"line_end":51,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8223240,"byte_end":8223285,"line_start":52,"line_end":52,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8223290,"byte_end":8223293,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ let stream = UnixStream::connect(\"/tmp/socket\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8223298,"byte_end":8223357,"line_start":54,"line_end":54,"column_start":5,"column_end":64}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8223362,"byte_end":8223367,"line_start":55,"line_end":55,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8223372,"byte_end":8223389,"line_start":56,"line_end":56,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8223394,"byte_end":8223401,"line_start":57,"line_end":57,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2616},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8224261,"byte_end":8224265,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixStream>::pair","value":"fn () -> io::Result<(UnixStream, UnixStream)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8223843,"byte_end":8223892,"line_start":71,"line_end":71,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8223897,"byte_end":8223900,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Returns two streams which are connected to each other.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8223905,"byte_end":8223963,"line_start":73,"line_end":73,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8223968,"byte_end":8223971,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8223976,"byte_end":8223990,"line_start":75,"line_end":75,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8223995,"byte_end":8223998,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8224003,"byte_end":8224016,"line_start":77,"line_end":77,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8224021,"byte_end":8224095,"line_start":78,"line_end":78,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8224100,"byte_end":8224105,"line_start":79,"line_end":79,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8224110,"byte_end":8224155,"line_start":80,"line_end":80,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8224160,"byte_end":8224163,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ let stream = UnixStream::pair()?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8224168,"byte_end":8224205,"line_start":82,"line_end":82,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8224210,"byte_end":8224215,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8224220,"byte_end":8224237,"line_start":84,"line_end":84,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8224242,"byte_end":8224249,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2617},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8224976,"byte_end":8224986,"line_start":111,"line_end":111,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixStream>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this connection.","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this connection.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8224547,"byte_end":8224615,"line_start":97,"line_end":97,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8224620,"byte_end":8224623,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8224628,"byte_end":8224642,"line_start":99,"line_end":99,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8224647,"byte_end":8224650,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8224655,"byte_end":8224668,"line_start":101,"line_end":101,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8224673,"byte_end":8224747,"line_start":102,"line_end":102,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8224752,"byte_end":8224757,"line_start":103,"line_end":103,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8224762,"byte_end":8224807,"line_start":104,"line_end":104,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8224812,"byte_end":8224815,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ let stream = UnixStream::connect(\"/tmp/socket\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8224820,"byte_end":8224879,"line_start":106,"line_end":106,"column_start":5,"column_end":64}},{"value":"/ let addr = stream.local_addr()?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8224884,"byte_end":8224920,"line_start":107,"line_end":107,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8224925,"byte_end":8224930,"line_start":108,"line_end":108,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8224935,"byte_end":8224952,"line_start":109,"line_end":109,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8224957,"byte_end":8224964,"line_start":110,"line_end":110,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2618},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8225506,"byte_end":8225515,"line_start":129,"line_end":129,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixStream>::peer_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote half of this connection.","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote half of this connection.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8225077,"byte_end":8225146,"line_start":115,"line_end":115,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8225151,"byte_end":8225154,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8225159,"byte_end":8225173,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8225178,"byte_end":8225181,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8225186,"byte_end":8225199,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8225204,"byte_end":8225278,"line_start":120,"line_end":120,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8225283,"byte_end":8225288,"line_start":121,"line_end":121,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8225293,"byte_end":8225338,"line_start":122,"line_end":122,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8225343,"byte_end":8225346,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let stream = UnixStream::connect(\"/tmp/socket\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8225351,"byte_end":8225410,"line_start":124,"line_end":124,"column_start":5,"column_end":64}},{"value":"/ let peer = stream.peer_addr()?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8225415,"byte_end":8225450,"line_start":125,"line_end":125,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8225455,"byte_end":8225460,"line_start":126,"line_end":126,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8225465,"byte_end":8225482,"line_start":127,"line_end":127,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8225487,"byte_end":8225494,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2619},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8226318,"byte_end":8226326,"line_start":151,"line_end":151,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixStream>::shutdown","value":"fn (&self, how: Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8225605,"byte_end":8225671,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8225676,"byte_end":8225679,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the specified portions to","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8225684,"byte_end":8225774,"line_start":135,"line_end":135,"column_start":5,"column_end":95}},{"value":"/ immediately return with an appropriate value (see the documentation of [`Shutdown`]).","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8225779,"byte_end":8225868,"line_start":136,"line_end":136,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8225873,"byte_end":8225876,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ [`Shutdown`]: https://doc.rust-lang.org/std/net/enum.Shutdown.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8225881,"byte_end":8225951,"line_start":138,"line_end":138,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8225956,"byte_end":8225959,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8225964,"byte_end":8225977,"line_start":140,"line_end":140,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8225982,"byte_end":8226056,"line_start":141,"line_end":141,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8226061,"byte_end":8226066,"line_start":142,"line_end":142,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8226071,"byte_end":8226116,"line_start":143,"line_end":143,"column_start":5,"column_end":50}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8226121,"byte_end":8226148,"line_start":144,"line_end":144,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8226153,"byte_end":8226156,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ let stream = UnixStream::connect(\"/tmp/socket\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8226161,"byte_end":8226220,"line_start":146,"line_end":146,"column_start":5,"column_end":64}},{"value":"/ stream.shutdown(Shutdown::Both)?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8226225,"byte_end":8226262,"line_start":147,"line_end":147,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8226267,"byte_end":8226272,"line_start":148,"line_end":148,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8226277,"byte_end":8226294,"line_start":149,"line_end":149,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8226299,"byte_end":8226306,"line_start":150,"line_end":150,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":87},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","parent":null,"children":[{"krate":0,"index":2658},{"krate":0,"index":2659},{"krate":0,"index":2660},{"krate":0,"index":2661},{"krate":0,"index":2662},{"krate":0,"index":2663},{"krate":0,"index":2664},{"krate":0,"index":2665},{"krate":0,"index":2666},{"krate":0,"index":2667},{"krate":0,"index":2668},{"krate":0,"index":2669},{"krate":0,"index":2670}],"decl_id":null,"docs":" The async prelude.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/utils.rs","byte_start":13436,"byte_end":13459,"line_start":157,"line_end":157,"column_start":13,"column_end":36}},{"value":"! The async prelude.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6908200,"byte_end":6908222,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6908223,"byte_end":6908226,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The prelude re-exports most commonly used traits and macros from this crate.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6908227,"byte_end":6908307,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6908308,"byte_end":6908311,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6908312,"byte_end":6908326,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6908327,"byte_end":6908330,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! Import the prelude with:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6908331,"byte_end":6908359,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6908360,"byte_end":6908363,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6908364,"byte_end":6908371,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"! # #[allow(unused_imports)]","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6908372,"byte_end":6908402,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"! use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6908403,"byte_end":6908433,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/prelude.rs","byte_start":6908434,"byte_end":6908441,"line_start":12,"line_end":12,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":88},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":92},{"krate":0,"index":95},{"krate":0,"index":98},{"krate":0,"index":101},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":1022},{"krate":0,"index":1035},{"krate":0,"index":1051},{"krate":0,"index":1064},{"krate":0,"index":1077},{"krate":0,"index":1089}],"decl_id":null,"docs":" Composable asynchronous iteration.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/utils.rs","byte_start":13436,"byte_end":13459,"line_start":157,"line_end":157,"column_start":13,"column_end":36}},{"value":"! Composable asynchronous iteration.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6909482,"byte_end":6909520,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6909521,"byte_end":6909524,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module is an async version of [`std::iter`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6909525,"byte_end":6909578,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6909579,"byte_end":6909582,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! If you've found yourself with an asynchronous collection of some kind,","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6909583,"byte_end":6909657,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"! and needed to perform an operation on the elements of said collection,","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6909658,"byte_end":6909732,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"! you'll quickly run into 'streams'. Streams are heavily used in idiomatic","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6909733,"byte_end":6909809,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"! asynchronous Rust code, so it's worth becoming familiar with them.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6909810,"byte_end":6909880,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6909881,"byte_end":6909884,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! Before explaining more, let's talk about how this module is structured:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6909885,"byte_end":6909960,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6909961,"byte_end":6909964,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! # Organization","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6909965,"byte_end":6909983,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6909984,"byte_end":6909987,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! This module is largely organized by type:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6909988,"byte_end":6910033,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6910034,"byte_end":6910037,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! * [Traits] are the core portion: these traits define what kind of streams","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6910038,"byte_end":6910115,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"!   exist and what you can do with them. The methods of these traits are worth","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6910116,"byte_end":6910196,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"!   putting some extra study time into.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6910197,"byte_end":6910238,"line_start":18,"line_end":18,"column_start":1,"column_end":42}},{"value":"! * [Functions] provide some helpful ways to create some basic streams.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6910239,"byte_end":6910312,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"! * [Structs] are often the return types of the various methods on this","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6910313,"byte_end":6910386,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"!   module's traits. You'll usually want to look at the method that creates","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6910387,"byte_end":6910464,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"!   the `struct`, rather than the `struct` itself. For more detail about why,","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6910465,"byte_end":6910544,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"!   see '[Implementing Stream](#implementing-stream)'.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6910545,"byte_end":6910601,"line_start":23,"line_end":23,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6910602,"byte_end":6910605,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! [Traits]: #traits","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6910606,"byte_end":6910627,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"! [Functions]: #functions","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6910628,"byte_end":6910655,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"! [Structs]: #structs","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6910656,"byte_end":6910679,"line_start":27,"line_end":27,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6910680,"byte_end":6910683,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! That's it! Let's dig into streams.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6910684,"byte_end":6910722,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6910723,"byte_end":6910726,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! # Stream","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6910727,"byte_end":6910739,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6910740,"byte_end":6910743,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! The heart and soul of this module is the [`Stream`] trait. The core of","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6910744,"byte_end":6910818,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"! [`Stream`] looks like this:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6910819,"byte_end":6910850,"line_start":34,"line_end":34,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6910851,"byte_end":6910854,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6910855,"byte_end":6910862,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"! # use async_std::task::{Context, Poll};","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6910863,"byte_end":6910906,"line_start":37,"line_end":37,"column_start":1,"column_end":44}},{"value":"! # use std::pin::Pin;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6910907,"byte_end":6910931,"line_start":38,"line_end":38,"column_start":1,"column_end":25}},{"value":"! trait Stream {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6910932,"byte_end":6910950,"line_start":39,"line_end":39,"column_start":1,"column_end":19}},{"value":"!     type Item;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6910951,"byte_end":6910969,"line_start":40,"line_end":40,"column_start":1,"column_end":19}},{"value":"!     fn poll_next(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Option<Self::Item>>;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6910970,"byte_end":6911063,"line_start":41,"line_end":41,"column_start":1,"column_end":94}},{"value":"! }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6911064,"byte_end":6911069,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6911070,"byte_end":6911077,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6911078,"byte_end":6911081,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! A stream has a method, [`next`], which when called, returns an","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6911082,"byte_end":6911148,"line_start":45,"line_end":45,"column_start":1,"column_end":67}},{"value":"! [`Poll`]<[`Option`]`<Item>>`. [`next`] will return `Ready(Some(Item))`","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6911149,"byte_end":6911223,"line_start":46,"line_end":46,"column_start":1,"column_end":75}},{"value":"! as long as there are elements, and once they've all been exhausted, will","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6911224,"byte_end":6911300,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"! return `None` to indicate that iteration is finished. If we're waiting on","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6911301,"byte_end":6911378,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"! something asynchronous to resolve `Pending` is returned.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6911379,"byte_end":6911439,"line_start":49,"line_end":49,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6911440,"byte_end":6911443,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! Individual streams may choose to resume iteration, and so calling","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6911444,"byte_end":6911513,"line_start":51,"line_end":51,"column_start":1,"column_end":70}},{"value":"! [`next`] again may or may not eventually start returning `Ready(Some(Item))`","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6911514,"byte_end":6911594,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"! again at some point.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6911595,"byte_end":6911619,"line_start":53,"line_end":53,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6911620,"byte_end":6911623,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"! [`Stream`]'s full definition includes a number of other methods as well,","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6911624,"byte_end":6911700,"line_start":55,"line_end":55,"column_start":1,"column_end":77}},{"value":"! but they are default methods, built on top of [`next`], and so you get","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6911701,"byte_end":6911775,"line_start":56,"line_end":56,"column_start":1,"column_end":75}},{"value":"! them for free.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6911776,"byte_end":6911794,"line_start":57,"line_end":57,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6911795,"byte_end":6911798,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! Streams are also composable, and it's common to chain them together to do","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6911799,"byte_end":6911876,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"! more complex forms of processing. See the [Adapters](#adapters) section","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6911877,"byte_end":6911952,"line_start":60,"line_end":60,"column_start":1,"column_end":76}},{"value":"! below for more details.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6911953,"byte_end":6911980,"line_start":61,"line_end":61,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6911981,"byte_end":6911984,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! [`Poll`]: ../task/enum.Poll.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6911985,"byte_end":6912021,"line_start":63,"line_end":63,"column_start":1,"column_end":37}},{"value":"! [`Stream`]: trait.Stream.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6912022,"byte_end":6912055,"line_start":64,"line_end":64,"column_start":1,"column_end":34}},{"value":"! [`next`]: trait.Stream.html#tymethod.next","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6912056,"byte_end":6912101,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"! [`Option`]: ../../std/option/enum.Option.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6912102,"byte_end":6912151,"line_start":66,"line_end":66,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6912152,"byte_end":6912155,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"! # The three forms of streaming","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6912156,"byte_end":6912190,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6912191,"byte_end":6912194,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! There are three common methods which can create streams from a collection:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6912195,"byte_end":6912273,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6912274,"byte_end":6912277,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"! * `stream()`, which iterates over `&T`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6912278,"byte_end":6912321,"line_start":72,"line_end":72,"column_start":1,"column_end":44}},{"value":"! * `stream_mut()`, which iterates over `&mut T`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6912322,"byte_end":6912373,"line_start":73,"line_end":73,"column_start":1,"column_end":52}},{"value":"! * `into_stream()`, which iterates over `T`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6912374,"byte_end":6912421,"line_start":74,"line_end":74,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6912422,"byte_end":6912425,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"! Various things in async-std may implement one or more of the","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6912426,"byte_end":6912490,"line_start":76,"line_end":76,"column_start":1,"column_end":65}},{"value":"! three, where appropriate.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6912491,"byte_end":6912520,"line_start":77,"line_end":77,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6912521,"byte_end":6912524,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"! # Implementing Stream","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6912525,"byte_end":6912550,"line_start":79,"line_end":79,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6912551,"byte_end":6912554,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! Creating a stream of your own involves two steps: creating a `struct` to","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6912555,"byte_end":6912631,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"! hold the stream's state, and then `impl`ementing [`Stream`] for that","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6912632,"byte_end":6912704,"line_start":82,"line_end":82,"column_start":1,"column_end":73}},{"value":"! `struct`. This is why there are so many `struct`s in this module: there is","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6912705,"byte_end":6912783,"line_start":83,"line_end":83,"column_start":1,"column_end":79}},{"value":"! one for each stream and iterator adapter.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6912784,"byte_end":6912829,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6912830,"byte_end":6912833,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"! Let's make a stream named `Counter` which counts from `1` to `5`:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6912834,"byte_end":6912903,"line_start":86,"line_end":86,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6912904,"byte_end":6912907,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6912908,"byte_end":6912915,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"! # use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6912916,"byte_end":6912948,"line_start":89,"line_end":89,"column_start":1,"column_end":33}},{"value":"! # use async_std::task::{Context, Poll};","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6912949,"byte_end":6912992,"line_start":90,"line_end":90,"column_start":1,"column_end":44}},{"value":"! # use std::pin::Pin;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6912993,"byte_end":6913017,"line_start":91,"line_end":91,"column_start":1,"column_end":25}},{"value":"! // First, the struct:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6913018,"byte_end":6913043,"line_start":92,"line_end":92,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6913044,"byte_end":6913047,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"! /// A stream which counts from one to five","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6913048,"byte_end":6913094,"line_start":94,"line_end":94,"column_start":1,"column_end":47}},{"value":"! struct Counter {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6913095,"byte_end":6913115,"line_start":95,"line_end":95,"column_start":1,"column_end":21}},{"value":"!     count: usize,","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6913116,"byte_end":6913137,"line_start":96,"line_end":96,"column_start":1,"column_end":22}},{"value":"! }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6913138,"byte_end":6913143,"line_start":97,"line_end":97,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6913144,"byte_end":6913147,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"! // we want our count to start at one, so let's add a new() method to help.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6913148,"byte_end":6913226,"line_start":99,"line_end":99,"column_start":1,"column_end":79}},{"value":"! // This isn't strictly necessary, but is convenient. Note that we start","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6913227,"byte_end":6913302,"line_start":100,"line_end":100,"column_start":1,"column_end":76}},{"value":"! // `count` at zero, we'll see why in `next()`'s implementation below.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6913303,"byte_end":6913376,"line_start":101,"line_end":101,"column_start":1,"column_end":74}},{"value":"! impl Counter {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6913377,"byte_end":6913395,"line_start":102,"line_end":102,"column_start":1,"column_end":19}},{"value":"!     fn new() -> Counter {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6913396,"byte_end":6913425,"line_start":103,"line_end":103,"column_start":1,"column_end":30}},{"value":"!         Counter { count: 0 }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6913426,"byte_end":6913458,"line_start":104,"line_end":104,"column_start":1,"column_end":33}},{"value":"!     }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6913459,"byte_end":6913468,"line_start":105,"line_end":105,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6913469,"byte_end":6913474,"line_start":106,"line_end":106,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6913475,"byte_end":6913478,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"! // Then, we implement `Stream` for our `Counter`:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6913479,"byte_end":6913532,"line_start":108,"line_end":108,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6913533,"byte_end":6913536,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"! impl Stream for Counter {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6913537,"byte_end":6913566,"line_start":110,"line_end":110,"column_start":1,"column_end":30}},{"value":"!     // we will be counting with usize","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6913567,"byte_end":6913608,"line_start":111,"line_end":111,"column_start":1,"column_end":42}},{"value":"!     type Item = usize;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6913609,"byte_end":6913635,"line_start":112,"line_end":112,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6913636,"byte_end":6913639,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"!     // poll_next() is the only required method","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6913640,"byte_end":6913690,"line_start":114,"line_end":114,"column_start":1,"column_end":51}},{"value":"!     fn poll_next(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Option<Self::Item>> {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6913691,"byte_end":6913789,"line_start":115,"line_end":115,"column_start":1,"column_end":99}},{"value":"!         // Increment our count. This is why we started at zero.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6913790,"byte_end":6913857,"line_start":116,"line_end":116,"column_start":1,"column_end":68}},{"value":"!         self.count += 1;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6913858,"byte_end":6913886,"line_start":117,"line_end":117,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6913887,"byte_end":6913890,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"!         // Check to see if we've finished counting or not.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6913891,"byte_end":6913953,"line_start":119,"line_end":119,"column_start":1,"column_end":63}},{"value":"!         if self.count < 6 {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6913954,"byte_end":6913985,"line_start":120,"line_end":120,"column_start":1,"column_end":32}},{"value":"!             Poll::Ready(Some(self.count))","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6913986,"byte_end":6914031,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"!         } else {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6914032,"byte_end":6914052,"line_start":122,"line_end":122,"column_start":1,"column_end":21}},{"value":"!             Poll::Ready(None)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6914053,"byte_end":6914086,"line_start":123,"line_end":123,"column_start":1,"column_end":34}},{"value":"!         }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6914087,"byte_end":6914100,"line_start":124,"line_end":124,"column_start":1,"column_end":14}},{"value":"!     }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6914101,"byte_end":6914110,"line_start":125,"line_end":125,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6914111,"byte_end":6914116,"line_start":126,"line_end":126,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6914117,"byte_end":6914120,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"! // And now we can use it!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6914121,"byte_end":6914150,"line_start":128,"line_end":128,"column_start":1,"column_end":30}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6914151,"byte_end":6914225,"line_start":129,"line_end":129,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6914226,"byte_end":6914231,"line_start":130,"line_end":130,"column_start":1,"column_end":6}},{"value":"! let mut counter = Counter::new();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6914232,"byte_end":6914269,"line_start":131,"line_end":131,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6914270,"byte_end":6914273,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"! let x = counter.next().await.unwrap();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6914274,"byte_end":6914316,"line_start":133,"line_end":133,"column_start":1,"column_end":43}},{"value":"! println!(\"{}\", x);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6914317,"byte_end":6914339,"line_start":134,"line_end":134,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6914340,"byte_end":6914343,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"! let x = counter.next().await.unwrap();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6914344,"byte_end":6914386,"line_start":136,"line_end":136,"column_start":1,"column_end":43}},{"value":"! println!(\"{}\", x);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6914387,"byte_end":6914409,"line_start":137,"line_end":137,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6914410,"byte_end":6914413,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"! let x = counter.next().await.unwrap();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6914414,"byte_end":6914456,"line_start":139,"line_end":139,"column_start":1,"column_end":43}},{"value":"! println!(\"{}\", x);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6914457,"byte_end":6914479,"line_start":140,"line_end":140,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6914480,"byte_end":6914483,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"! let x = counter.next().await.unwrap();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6914484,"byte_end":6914526,"line_start":142,"line_end":142,"column_start":1,"column_end":43}},{"value":"! println!(\"{}\", x);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6914527,"byte_end":6914549,"line_start":143,"line_end":143,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6914550,"byte_end":6914553,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"! let x = counter.next().await.unwrap();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6914554,"byte_end":6914596,"line_start":145,"line_end":145,"column_start":1,"column_end":43}},{"value":"! println!(\"{}\", x);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6914597,"byte_end":6914619,"line_start":146,"line_end":146,"column_start":1,"column_end":23}},{"value":"! #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6914620,"byte_end":6914625,"line_start":147,"line_end":147,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6914626,"byte_end":6914643,"line_start":148,"line_end":148,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6914644,"byte_end":6914651,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6914652,"byte_end":6914655,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"! This will print `1` through `5`, each on their own line.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6914656,"byte_end":6914716,"line_start":151,"line_end":151,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6914717,"byte_end":6914720,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"! Calling `next().await` this way gets repetitive. Rust has a construct which","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6914721,"byte_end":6914800,"line_start":153,"line_end":153,"column_start":1,"column_end":80}},{"value":"! can call `next()` on your stream, until it reaches `None`. Let's go over","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6914801,"byte_end":6914877,"line_start":154,"line_end":154,"column_start":1,"column_end":77}},{"value":"! that next.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6914878,"byte_end":6914892,"line_start":155,"line_end":155,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6914893,"byte_end":6914896,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"! # while let Loops and IntoStream","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6914897,"byte_end":6914933,"line_start":157,"line_end":157,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6914934,"byte_end":6914937,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"! Rust's `while let` loop syntax is an idiomatic way to iterate over streams. Here's a basic","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6914938,"byte_end":6915032,"line_start":159,"line_end":159,"column_start":1,"column_end":95}},{"value":"! example of `while let`:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6915033,"byte_end":6915060,"line_start":160,"line_end":160,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6915061,"byte_end":6915064,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6915065,"byte_end":6915072,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6915073,"byte_end":6915147,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6915148,"byte_end":6915153,"line_start":164,"line_end":164,"column_start":1,"column_end":6}},{"value":"! # use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6915154,"byte_end":6915186,"line_start":165,"line_end":165,"column_start":1,"column_end":33}},{"value":"! # use async_std::stream;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6915187,"byte_end":6915215,"line_start":166,"line_end":166,"column_start":1,"column_end":29}},{"value":"! let mut values = stream::repeat(1u8).take(5);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6915216,"byte_end":6915265,"line_start":167,"line_end":167,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6915266,"byte_end":6915269,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"! while let Some(x) = values.next().await {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6915270,"byte_end":6915315,"line_start":169,"line_end":169,"column_start":1,"column_end":46}},{"value":"!     println!(\"{}\", x);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6915316,"byte_end":6915342,"line_start":170,"line_end":170,"column_start":1,"column_end":27}},{"value":"! }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6915343,"byte_end":6915348,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"! #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6915349,"byte_end":6915354,"line_start":172,"line_end":172,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6915355,"byte_end":6915372,"line_start":173,"line_end":173,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6915373,"byte_end":6915380,"line_start":174,"line_end":174,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6915381,"byte_end":6915384,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"! This will print the numbers one through five, each on their own line. But","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6915385,"byte_end":6915462,"line_start":176,"line_end":176,"column_start":1,"column_end":78}},{"value":"! you'll notice something here: we never called anything on our vector to","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6915463,"byte_end":6915538,"line_start":177,"line_end":177,"column_start":1,"column_end":76}},{"value":"! produce a stream. What gives?","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6915539,"byte_end":6915572,"line_start":178,"line_end":178,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6915573,"byte_end":6915576,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"! There's a trait in the standard library for converting something into an","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6915577,"byte_end":6915653,"line_start":180,"line_end":180,"column_start":1,"column_end":77}},{"value":"! stream: [`IntoStream`]. This trait has one method, [`into_stream`],","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6915654,"byte_end":6915725,"line_start":181,"line_end":181,"column_start":1,"column_end":72}},{"value":"! which converts the thing implementing [`IntoStream`] into a stream.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6915726,"byte_end":6915797,"line_start":182,"line_end":182,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6915798,"byte_end":6915801,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"! Unlike `std::iter::IntoIterator`, `IntoStream` does not have compiler","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6915802,"byte_end":6915875,"line_start":184,"line_end":184,"column_start":1,"column_end":74}},{"value":"! support yet. This means that automatic conversions like with `for` loops","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6915876,"byte_end":6915952,"line_start":185,"line_end":185,"column_start":1,"column_end":77}},{"value":"! doesn't occur yet, and `into_stream` will always have to be called manually.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6915953,"byte_end":6916033,"line_start":186,"line_end":186,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6916034,"byte_end":6916037,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"! [`IntoStream`]: trait.IntoStream.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6916038,"byte_end":6916079,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"! [`into_stream`]: trait.IntoStream.html#tymethod.into_stream","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6916080,"byte_end":6916143,"line_start":189,"line_end":189,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6916144,"byte_end":6916147,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"! # Adapters","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6916148,"byte_end":6916162,"line_start":191,"line_end":191,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6916163,"byte_end":6916166,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"! Functions which take an [`Stream`] and return another [`Stream`] are","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6916167,"byte_end":6916239,"line_start":193,"line_end":193,"column_start":1,"column_end":73}},{"value":"! often called 'stream adapters', as they are a form of the 'adapter","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6916240,"byte_end":6916310,"line_start":194,"line_end":194,"column_start":1,"column_end":71}},{"value":"! pattern'.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6916311,"byte_end":6916324,"line_start":195,"line_end":195,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6916325,"byte_end":6916328,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"! Common stream adapters include [`map`], [`take`], and [`filter`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6916329,"byte_end":6916398,"line_start":197,"line_end":197,"column_start":1,"column_end":70}},{"value":"! For more, see their documentation.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6916399,"byte_end":6916437,"line_start":198,"line_end":198,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6916438,"byte_end":6916441,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"! [`map`]: trait.Stream.html#method.map","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6916442,"byte_end":6916483,"line_start":200,"line_end":200,"column_start":1,"column_end":42}},{"value":"! [`take`]: trait.Stream.html#method.take","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6916484,"byte_end":6916527,"line_start":201,"line_end":201,"column_start":1,"column_end":44}},{"value":"! [`filter`]: trait.Stream.html#method.filter","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6916528,"byte_end":6916575,"line_start":202,"line_end":202,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6916576,"byte_end":6916579,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"! # Laziness","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6916580,"byte_end":6916594,"line_start":204,"line_end":204,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6916595,"byte_end":6916598,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"! Streams (and stream [adapters](#adapters)) are *lazy*. This means that","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6916599,"byte_end":6916673,"line_start":206,"line_end":206,"column_start":1,"column_end":75}},{"value":"! just creating a stream doesn't _do_ a whole lot. Nothing really happens","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6916674,"byte_end":6916749,"line_start":207,"line_end":207,"column_start":1,"column_end":76}},{"value":"! until you call [`next`]. This is sometimes a source of confusion when","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6916750,"byte_end":6916823,"line_start":208,"line_end":208,"column_start":1,"column_end":74}},{"value":"! creating a stream solely for its side effects. For example, the [`map`]","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6916824,"byte_end":6916899,"line_start":209,"line_end":209,"column_start":1,"column_end":76}},{"value":"! method calls a closure on each element it iterates over:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6916900,"byte_end":6916960,"line_start":210,"line_end":210,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6916961,"byte_end":6916964,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6916965,"byte_end":6916972,"line_start":212,"line_end":212,"column_start":1,"column_end":8}},{"value":"! # #![allow(unused_must_use)]","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6916973,"byte_end":6917005,"line_start":213,"line_end":213,"column_start":1,"column_end":33}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6917006,"byte_end":6917080,"line_start":214,"line_end":214,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6917081,"byte_end":6917086,"line_start":215,"line_end":215,"column_start":1,"column_end":6}},{"value":"! # use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6917087,"byte_end":6917119,"line_start":216,"line_end":216,"column_start":1,"column_end":33}},{"value":"! # use async_std::stream;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6917120,"byte_end":6917148,"line_start":217,"line_end":217,"column_start":1,"column_end":29}},{"value":"! let v = stream::repeat(1u8).take(5);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6917149,"byte_end":6917189,"line_start":218,"line_end":218,"column_start":1,"column_end":41}},{"value":"! v.map(|x| println!(\"{}\", x));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6917190,"byte_end":6917223,"line_start":219,"line_end":219,"column_start":1,"column_end":34}},{"value":"! #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6917224,"byte_end":6917229,"line_start":220,"line_end":220,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6917230,"byte_end":6917247,"line_start":221,"line_end":221,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6917248,"byte_end":6917255,"line_start":222,"line_end":222,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6917256,"byte_end":6917259,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"! This will not print any values, as we only created a stream, rather than","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6917260,"byte_end":6917336,"line_start":224,"line_end":224,"column_start":1,"column_end":77}},{"value":"! using it. The compiler will warn us about this kind of behavior:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6917337,"byte_end":6917405,"line_start":225,"line_end":225,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6917406,"byte_end":6917409,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6917410,"byte_end":6917421,"line_start":227,"line_end":227,"column_start":1,"column_end":12}},{"value":"! warning: unused result that must be used: streams are lazy and","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6917422,"byte_end":6917488,"line_start":228,"line_end":228,"column_start":1,"column_end":67}},{"value":"! do nothing unless consumed","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6917489,"byte_end":6917519,"line_start":229,"line_end":229,"column_start":1,"column_end":31}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6917520,"byte_end":6917527,"line_start":230,"line_end":230,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6917528,"byte_end":6917531,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"! The idiomatic way to write a [`map`] for its side effects is to use a","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6917532,"byte_end":6917605,"line_start":232,"line_end":232,"column_start":1,"column_end":74}},{"value":"! `while let` loop instead:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6917606,"byte_end":6917635,"line_start":233,"line_end":233,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6917636,"byte_end":6917639,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6917640,"byte_end":6917647,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6917648,"byte_end":6917722,"line_start":236,"line_end":236,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6917723,"byte_end":6917728,"line_start":237,"line_end":237,"column_start":1,"column_end":6}},{"value":"! # use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6917729,"byte_end":6917761,"line_start":238,"line_end":238,"column_start":1,"column_end":33}},{"value":"! # use async_std::stream;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6917762,"byte_end":6917790,"line_start":239,"line_end":239,"column_start":1,"column_end":29}},{"value":"! let mut v = stream::repeat(1u8).take(5);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6917791,"byte_end":6917835,"line_start":240,"line_end":240,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6917836,"byte_end":6917839,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"! while let Some(x) = &v.next().await {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6917840,"byte_end":6917881,"line_start":242,"line_end":242,"column_start":1,"column_end":42}},{"value":"!     println!(\"{}\", x);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6917882,"byte_end":6917908,"line_start":243,"line_end":243,"column_start":1,"column_end":27}},{"value":"! }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6917909,"byte_end":6917914,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"! #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6917915,"byte_end":6917920,"line_start":245,"line_end":245,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6917921,"byte_end":6917938,"line_start":246,"line_end":246,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6917939,"byte_end":6917946,"line_start":247,"line_end":247,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6917947,"byte_end":6917950,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"! [`map`]: trait.Stream.html#method.map","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6917951,"byte_end":6917992,"line_start":249,"line_end":249,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6917993,"byte_end":6917996,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"! The two most common ways to evaluate a stream are to use a `while let` loop","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6917997,"byte_end":6918076,"line_start":251,"line_end":251,"column_start":1,"column_end":80}},{"value":"! like this, or using the [`collect`] method to produce a new collection.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6918077,"byte_end":6918152,"line_start":252,"line_end":252,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6918153,"byte_end":6918156,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"! [`collect`]: trait.Stream.html#method.collect","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6918157,"byte_end":6918206,"line_start":254,"line_end":254,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6918207,"byte_end":6918210,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"! # Infinity","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6918211,"byte_end":6918225,"line_start":256,"line_end":256,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6918226,"byte_end":6918229,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"! Streams do not have to be finite. As an example, an repeat stream is","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6918230,"byte_end":6918302,"line_start":258,"line_end":258,"column_start":1,"column_end":73}},{"value":"! an infinite stream:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6918303,"byte_end":6918326,"line_start":259,"line_end":259,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6918327,"byte_end":6918330,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6918331,"byte_end":6918338,"line_start":261,"line_end":261,"column_start":1,"column_end":8}},{"value":"! # use async_std::stream;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6918339,"byte_end":6918367,"line_start":262,"line_end":262,"column_start":1,"column_end":29}},{"value":"! let numbers = stream::repeat(1u8);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6918368,"byte_end":6918406,"line_start":263,"line_end":263,"column_start":1,"column_end":39}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6918407,"byte_end":6918414,"line_start":264,"line_end":264,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6918415,"byte_end":6918418,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"! It is common to use the [`take`] stream adapter to turn an infinite","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6918419,"byte_end":6918490,"line_start":266,"line_end":266,"column_start":1,"column_end":72}},{"value":"! stream into a finite one:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6918491,"byte_end":6918520,"line_start":267,"line_end":267,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6918521,"byte_end":6918524,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6918525,"byte_end":6918532,"line_start":269,"line_end":269,"column_start":1,"column_end":8}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6918533,"byte_end":6918607,"line_start":270,"line_end":270,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6918608,"byte_end":6918613,"line_start":271,"line_end":271,"column_start":1,"column_end":6}},{"value":"! # use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6918614,"byte_end":6918646,"line_start":272,"line_end":272,"column_start":1,"column_end":33}},{"value":"! # use async_std::stream;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6918647,"byte_end":6918675,"line_start":273,"line_end":273,"column_start":1,"column_end":29}},{"value":"! let numbers = stream::repeat(1u8);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6918676,"byte_end":6918714,"line_start":274,"line_end":274,"column_start":1,"column_end":39}},{"value":"! let mut five_numbers = numbers.take(5);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6918715,"byte_end":6918758,"line_start":275,"line_end":275,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6918759,"byte_end":6918762,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"! while let Some(number) = five_numbers.next().await {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6918763,"byte_end":6918819,"line_start":277,"line_end":277,"column_start":1,"column_end":57}},{"value":"!     println!(\"{}\", number);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6918820,"byte_end":6918851,"line_start":278,"line_end":278,"column_start":1,"column_end":32}},{"value":"! }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6918852,"byte_end":6918857,"line_start":279,"line_end":279,"column_start":1,"column_end":6}},{"value":"! #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6918858,"byte_end":6918863,"line_start":280,"line_end":280,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6918864,"byte_end":6918881,"line_start":281,"line_end":281,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6918882,"byte_end":6918889,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6918890,"byte_end":6918893,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"! This will print the numbers `0` through `4`, each on their own line.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6918894,"byte_end":6918966,"line_start":284,"line_end":284,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6918967,"byte_end":6918970,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"! Bear in mind that methods on infinite streams, even those for which a","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6918971,"byte_end":6919044,"line_start":286,"line_end":286,"column_start":1,"column_end":74}},{"value":"! result can be determined mathematically in finite time, may not terminate.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6919045,"byte_end":6919123,"line_start":287,"line_end":287,"column_start":1,"column_end":79}},{"value":"! Specifically, methods such as [`min`], which in the general case require","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6919124,"byte_end":6919200,"line_start":288,"line_end":288,"column_start":1,"column_end":77}},{"value":"! traversing every element in the stream, are likely not to return","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6919201,"byte_end":6919269,"line_start":289,"line_end":289,"column_start":1,"column_end":69}},{"value":"! successfully for any infinite streams.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6919270,"byte_end":6919312,"line_start":290,"line_end":290,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6919313,"byte_end":6919316,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"! ```ignore","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6919317,"byte_end":6919330,"line_start":292,"line_end":292,"column_start":1,"column_end":14}},{"value":"! let ones = async_std::stream::repeat(1);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6919331,"byte_end":6919375,"line_start":293,"line_end":293,"column_start":1,"column_end":45}},{"value":"! let least = ones.min().await.unwrap(); // Oh no! An infinite loop!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6919376,"byte_end":6919446,"line_start":294,"line_end":294,"column_start":1,"column_end":71}},{"value":"! // `ones.min()` causes an infinite loop, so we won't reach this point!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6919447,"byte_end":6919521,"line_start":295,"line_end":295,"column_start":1,"column_end":75}},{"value":"! println!(\"The smallest number one is {}.\", least);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6919522,"byte_end":6919576,"line_start":296,"line_end":296,"column_start":1,"column_end":55}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6919577,"byte_end":6919584,"line_start":297,"line_end":297,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6919585,"byte_end":6919588,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"! [`std::iter`]: https://doc.rust-lang.org/std/iter/index.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6919589,"byte_end":6919653,"line_start":299,"line_end":299,"column_start":1,"column_end":65}},{"value":"! [`take`]: trait.Stream.html#method.take","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6919654,"byte_end":6919697,"line_start":300,"line_end":300,"column_start":1,"column_end":44}},{"value":"! [`min`]: trait.Stream.html#method.min","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/mod.rs","byte_start":6919698,"byte_end":6919739,"line_start":301,"line_end":301,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":117},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/all.rs","byte_start":6994475,"byte_end":6994484,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AllFuture","qualname":"::stream::stream::all::AllFuture","value":"AllFuture {  }","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/all.rs","byte_start":6994424,"byte_end":6994463,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":148},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/any.rs","byte_start":6995880,"byte_end":6995889,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AnyFuture","qualname":"::stream::stream::any::AnyFuture","value":"AnyFuture {  }","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/any.rs","byte_start":6995829,"byte_end":6995868,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":6463},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/chain.rs","byte_start":6997546,"byte_end":6997551,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":6466},{"krate":0,"index":6467}],"decl_id":null,"docs":" A stream that chains two streams one after another.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6417},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/cloned.rs","byte_start":6998937,"byte_end":6998943,"line_start":9,"line_end":9,"column_start":16,"column_end":22},"name":"Cloned","qualname":"::stream::stream::cloned::Cloned","value":"Cloned {  }","parent":null,"children":[{"krate":0,"index":6419}],"decl_id":null,"docs":" A stream that clones the elements of an underlying stream.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6334},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/cmp.rs","byte_start":6999882,"byte_end":6999891,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"CmpFuture","qualname":"::stream::stream::cmp::CmpFuture","value":"CmpFuture {  }","parent":null,"children":[{"krate":0,"index":6337},{"krate":0,"index":6338},{"krate":0,"index":6339},{"krate":0,"index":6340}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.4/src/lib.rs","byte_start":8476310,"byte_end":8476319,"line_start":240,"line_end":240,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6328},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/copied.rs","byte_start":7002665,"byte_end":7002671,"line_start":9,"line_end":9,"column_start":16,"column_end":22},"name":"Copied","qualname":"::stream::stream::copied::Copied","value":"Copied {  }","parent":null,"children":[{"krate":0,"index":6330}],"decl_id":null,"docs":" A stream that copies the elements of an underlying stream.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2671},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/cycle.rs","byte_start":7003402,"byte_end":7003407,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Cycle","qualname":"::stream::stream::cycle::Cycle","value":"Cycle {  }","parent":null,"children":[{"krate":0,"index":2673},{"krate":0,"index":2674}],"decl_id":null,"docs":" A stream that will repeatedly yield the same list of elements.\n","sig":null,"attributes":[{"value":"/ A stream that will repeatedly yield the same list of elements.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/cycle.rs","byte_start":7003307,"byte_end":7003373,"line_start":7,"line_end":7,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":6291},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/enumerate.rs","byte_start":7004697,"byte_end":7004706,"line_start":10,"line_end":10,"column_start":16,"column_end":25},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":6293},{"krate":0,"index":6294}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6213},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/eq.rs","byte_start":7005808,"byte_end":7005816,"line_start":16,"line_end":16,"column_start":16,"column_end":24},"name":"EqFuture","qualname":"::stream::stream::eq::EqFuture","value":"EqFuture {  }","parent":null,"children":[{"krate":0,"index":6216},{"krate":0,"index":6217}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.4/src/lib.rs","byte_start":8476310,"byte_end":8476319,"line_start":240,"line_end":240,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6204},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/filter.rs","byte_start":7007417,"byte_end":7007423,"line_start":17,"line_end":17,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":6207},{"krate":0,"index":6208}],"decl_id":null,"docs":" A stream to filter elements of another stream with a predicate.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6155},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/filter_map.rs","byte_start":7008447,"byte_end":7008456,"line_start":10,"line_end":10,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":6158},{"krate":0,"index":6159}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":330},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/find.rs","byte_start":7009477,"byte_end":7009487,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"FindFuture","qualname":"::stream::stream::find::FindFuture","value":"FindFuture {  }","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":335}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/find.rs","byte_start":7009426,"byte_end":7009465,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":357},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/find_map.rs","byte_start":7010511,"byte_end":7010524,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"FindMapFuture","qualname":"::stream::stream::find_map::FindMapFuture","value":"FindMapFuture {  }","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":362}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/find_map.rs","byte_start":7010460,"byte_end":7010499,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":6103},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/fold.rs","byte_start":7011642,"byte_end":7011652,"line_start":11,"line_end":11,"column_start":16,"column_end":26},"name":"FoldFuture","qualname":"::stream::stream::fold::FoldFuture","value":"FoldFuture {  }","parent":null,"children":[{"krate":0,"index":6107},{"krate":0,"index":6108},{"krate":0,"index":6109}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6008},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/for_each.rs","byte_start":7012891,"byte_end":7012904,"line_start":12,"line_end":12,"column_start":16,"column_end":29},"name":"ForEachFuture","qualname":"::stream::stream::for_each::ForEachFuture","value":"ForEachFuture {  }","parent":null,"children":[{"krate":0,"index":6011},{"krate":0,"index":6012}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.4/src/lib.rs","byte_start":8476310,"byte_end":8476319,"line_start":240,"line_end":240,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5998},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/fuse.rs","byte_start":7014129,"byte_end":7014133,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":6000},{"krate":0,"index":6001}],"decl_id":null,"docs":" A stream that yields `None` forever after the underlying stream yields `None` once.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5924},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/ge.rs","byte_start":7015319,"byte_end":7015327,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"GeFuture","qualname":"::stream::stream::ge::GeFuture","value":"GeFuture {  }","parent":null,"children":[{"krate":0,"index":5927}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.4/src/lib.rs","byte_start":8476310,"byte_end":8476319,"line_start":240,"line_end":240,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5883},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/gt.rs","byte_start":7016584,"byte_end":7016592,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"GtFuture","qualname":"::stream::stream::gt::GtFuture","value":"GtFuture {  }","parent":null,"children":[{"krate":0,"index":5886}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.4/src/lib.rs","byte_start":8476310,"byte_end":8476319,"line_start":240,"line_end":240,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5874},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/inspect.rs","byte_start":7017870,"byte_end":7017877,"line_start":17,"line_end":17,"column_start":16,"column_end":23},"name":"Inspect","qualname":"::stream::stream::inspect::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":5877},{"krate":0,"index":5878}],"decl_id":null,"docs":" A stream that does something with each element of another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5789},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/last.rs","byte_start":7018797,"byte_end":7018807,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"LastFuture","qualname":"::stream::stream::last::LastFuture","value":"LastFuture {  }","parent":null,"children":[{"krate":0,"index":5792},{"krate":0,"index":5793}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.4/src/lib.rs","byte_start":8476310,"byte_end":8476319,"line_start":240,"line_end":240,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5748},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/le.rs","byte_start":7020047,"byte_end":7020055,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"LeFuture","qualname":"::stream::stream::le::LeFuture","value":"LeFuture {  }","parent":null,"children":[{"krate":0,"index":5751}],"decl_id":null,"docs":" Determines if the elements of this `Stream` are lexicographically\n less or equal to those of another.\n","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.4/src/lib.rs","byte_start":8476310,"byte_end":8476319,"line_start":240,"line_end":240,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5707},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/lt.rs","byte_start":7021322,"byte_end":7021330,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"LtFuture","qualname":"::stream::stream::lt::LtFuture","value":"LtFuture {  }","parent":null,"children":[{"krate":0,"index":5710}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.4/src/lib.rs","byte_start":8476310,"byte_end":8476319,"line_start":240,"line_end":240,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5698},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/map.rs","byte_start":7022377,"byte_end":7022380,"line_start":11,"line_end":11,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":5701},{"krate":0,"index":5702}],"decl_id":null,"docs":" A stream that maps value of another stream with a function.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5601},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/max.rs","byte_start":7023270,"byte_end":7023279,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"MaxFuture","qualname":"::stream::stream::max::MaxFuture","value":"MaxFuture {  }","parent":null,"children":[{"krate":0,"index":5605},{"krate":0,"index":5606},{"krate":0,"index":5607}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.4/src/lib.rs","byte_start":8476310,"byte_end":8476319,"line_start":240,"line_end":240,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5544},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/max_by.rs","byte_start":7024767,"byte_end":7024778,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"MaxByFuture","qualname":"::stream::stream::max_by::MaxByFuture","value":"MaxByFuture {  }","parent":null,"children":[{"krate":0,"index":5548},{"krate":0,"index":5549},{"krate":0,"index":5550}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.4/src/lib.rs","byte_start":8476310,"byte_end":8476319,"line_start":240,"line_end":240,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5487},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/max_by_key.rs","byte_start":7026245,"byte_end":7026259,"line_start":13,"line_end":13,"column_start":16,"column_end":30},"name":"MaxByKeyFuture","qualname":"::stream::stream::max_by_key::MaxByKeyFuture","value":"MaxByKeyFuture {  }","parent":null,"children":[{"krate":0,"index":5491},{"krate":0,"index":5492},{"krate":0,"index":5493}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.4/src/lib.rs","byte_start":8476310,"byte_end":8476319,"line_start":240,"line_end":240,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5430},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/min.rs","byte_start":7027991,"byte_end":7028000,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"MinFuture","qualname":"::stream::stream::min::MinFuture","value":"MinFuture {  }","parent":null,"children":[{"krate":0,"index":5434},{"krate":0,"index":5435},{"krate":0,"index":5436}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.4/src/lib.rs","byte_start":8476310,"byte_end":8476319,"line_start":240,"line_end":240,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5373},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/min_by.rs","byte_start":7029485,"byte_end":7029496,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"MinByFuture","qualname":"::stream::stream::min_by::MinByFuture","value":"MinByFuture {  }","parent":null,"children":[{"krate":0,"index":5377},{"krate":0,"index":5378},{"krate":0,"index":5379}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.4/src/lib.rs","byte_start":8476310,"byte_end":8476319,"line_start":240,"line_end":240,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5316},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/min_by_key.rs","byte_start":7030990,"byte_end":7031004,"line_start":13,"line_end":13,"column_start":16,"column_end":30},"name":"MinByKeyFuture","qualname":"::stream::stream::min_by_key::MinByKeyFuture","value":"MinByKeyFuture {  }","parent":null,"children":[{"krate":0,"index":5320},{"krate":0,"index":5321},{"krate":0,"index":5322}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.4/src/lib.rs","byte_start":8476310,"byte_end":8476319,"line_start":240,"line_end":240,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5271},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/ne.rs","byte_start":7032812,"byte_end":7032820,"line_start":16,"line_end":16,"column_start":16,"column_end":24},"name":"NeFuture","qualname":"::stream::stream::ne::NeFuture","value":"NeFuture {  }","parent":null,"children":[{"krate":0,"index":5274},{"krate":0,"index":5275}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.4/src/lib.rs","byte_start":8476310,"byte_end":8476319,"line_start":240,"line_end":240,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":718},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/next.rs","byte_start":7034183,"byte_end":7034193,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"NextFuture","qualname":"::stream::stream::next::NextFuture","value":"NextFuture {  }","parent":null,"children":[{"krate":0,"index":721}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/next.rs","byte_start":7034132,"byte_end":7034171,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":733},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/nth.rs","byte_start":7034689,"byte_end":7034698,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"NthFuture","qualname":"::stream::stream::nth::NthFuture","value":"NthFuture {  }","parent":null,"children":[{"krate":0,"index":736},{"krate":0,"index":737}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/nth.rs","byte_start":7034638,"byte_end":7034677,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":5218},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/partial_cmp.rs","byte_start":7035976,"byte_end":7035992,"line_start":17,"line_end":17,"column_start":16,"column_end":32},"name":"PartialCmpFuture","qualname":"::stream::stream::partial_cmp::PartialCmpFuture","value":"PartialCmpFuture {  }","parent":null,"children":[{"krate":0,"index":5221},{"krate":0,"index":5222},{"krate":0,"index":5223},{"krate":0,"index":5224}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.4/src/lib.rs","byte_start":8476310,"byte_end":8476319,"line_start":240,"line_end":240,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":776},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/position.rs","byte_start":7038813,"byte_end":7038827,"line_start":9,"line_end":9,"column_start":12,"column_end":26},"name":"PositionFuture","qualname":"::stream::stream::position::PositionFuture","value":"PositionFuture {  }","parent":null,"children":[{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/position.rs","byte_start":7038762,"byte_end":7038801,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":5207},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/scan.rs","byte_start":7040348,"byte_end":7040352,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":5211},{"krate":0,"index":5212}],"decl_id":null,"docs":" A stream to maintain state while polling another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5153},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/skip.rs","byte_start":7041616,"byte_end":7041620,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":5155},{"krate":0,"index":5156}],"decl_id":null,"docs":" A stream to skip first n elements of another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5111},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/skip_while.rs","byte_start":7042884,"byte_end":7042893,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":5114},{"krate":0,"index":5115}],"decl_id":null,"docs":" A stream to skip elements of another stream based on a predicate.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5063},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/step_by.rs","byte_start":7044485,"byte_end":7044491,"line_start":17,"line_end":17,"column_start":16,"column_end":22},"name":"StepBy","qualname":"::stream::stream::step_by::StepBy","value":"StepBy {  }","parent":null,"children":[{"krate":0,"index":5065},{"krate":0,"index":5066},{"krate":0,"index":5067}],"decl_id":null,"docs":" A stream that steps a given amount of elements of another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5017},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/take.rs","byte_start":7045951,"byte_end":7045955,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":5019},{"krate":0,"index":5020}],"decl_id":null,"docs":" A stream that yields the first `n` items of another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4975},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/take_while.rs","byte_start":7047238,"byte_end":7047247,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":4978},{"krate":0,"index":4979}],"decl_id":null,"docs":" A stream that yields elements based on a predicate.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":900},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/try_fold.rs","byte_start":7048310,"byte_end":7048323,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"TryFoldFuture","qualname":"::stream::stream::try_fold::TryFoldFuture","value":"TryFoldFuture {  }","parent":null,"children":[{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/try_fold.rs","byte_start":7048259,"byte_end":7048298,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":934},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/try_for_each.rs","byte_start":7049700,"byte_end":7049716,"line_start":9,"line_end":9,"column_start":12,"column_end":28},"name":"TryForEachFuture","qualname":"::stream::stream::try_for_each::TryForEachFuture","value":"TryForEachFuture {  }","parent":null,"children":[{"krate":0,"index":938},{"krate":0,"index":939}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/try_for_each.rs","byte_start":7049649,"byte_end":7049688,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4886},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/zip.rs","byte_start":7051116,"byte_end":7051119,"line_start":17,"line_end":17,"column_start":16,"column_end":19},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":4889},{"krate":0,"index":4890},{"krate":0,"index":4891}],"decl_id":null,"docs":" A stream that takes items from two other streams simultaneously.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2690},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6926728,"byte_end":6926737,"line_start":237,"line_end":237,"column_start":15,"column_end":24},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":2693},{"krate":0,"index":2694},{"krate":0,"index":2695},{"krate":0,"index":2697},{"krate":0,"index":2698},{"krate":0,"index":2700},{"krate":0,"index":2703},{"krate":0,"index":2706},{"krate":0,"index":2707},{"krate":0,"index":2708},{"krate":0,"index":2711},{"krate":0,"index":2713},{"krate":0,"index":2714},{"krate":0,"index":2715},{"krate":0,"index":2717},{"krate":0,"index":2720},{"krate":0,"index":2723},{"krate":0,"index":2726},{"krate":0,"index":2728},{"krate":0,"index":2730},{"krate":0,"index":2732},{"krate":0,"index":2734},{"krate":0,"index":2735},{"krate":0,"index":2737},{"krate":0,"index":2739},{"krate":0,"index":2742},{"krate":0,"index":2745},{"krate":0,"index":2747},{"krate":0,"index":2749},{"krate":0,"index":2753},{"krate":0,"index":2755},{"krate":0,"index":2756},{"krate":0,"index":2761},{"krate":0,"index":2764},{"krate":0,"index":2766},{"krate":0,"index":2768},{"krate":0,"index":2770},{"krate":0,"index":2772},{"krate":0,"index":2774},{"krate":0,"index":2776},{"krate":0,"index":2778},{"krate":0,"index":2780},{"krate":0,"index":2782}],"decl_id":null,"docs":"\n        Extension methods for [`Stream`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2693},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6927572,"byte_end":6927576,"line_start":263,"line_end":263,"column_start":12,"column_end":16},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"fn (&mut self) -> NextFuture<'_, Self>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Advances the stream and returns the next value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2694},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6928256,"byte_end":6928260,"line_start":290,"line_end":290,"column_start":12,"column_end":16},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"fn (self, n: usize) -> Take<Self>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Creates a stream that yields its first `n` elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2695},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6928989,"byte_end":6928999,"line_start":318,"line_end":318,"column_start":12,"column_end":22},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"fn <P> (self, predicate: P) -> TakeWhile<Self, P>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Creates a stream that yields elements based on a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2697},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6931240,"byte_end":6931247,"line_start":396,"line_end":396,"column_start":12,"column_end":19},"name":"step_by","qualname":"::stream::stream::StreamExt::step_by","value":"fn (self, step: usize) -> StepBy<Self>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Creates a stream that yields each `step`th element.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2698},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6932167,"byte_end":6932172,"line_start":430,"line_end":430,"column_start":12,"column_end":17},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"fn <U> (self, other: U) -> Chain<Self, U>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Takes two streams and creates a new stream over both in sequence.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2700},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6933056,"byte_end":6933062,"line_start":464,"line_end":464,"column_start":12,"column_end":18},"name":"cloned","qualname":"::stream::stream::StreamExt::cloned","value":"fn <'a, T> (self) -> Cloned<Self>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Creates an stream which copies all of its elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2703},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6933928,"byte_end":6933934,"line_start":497,"line_end":497,"column_start":12,"column_end":18},"name":"copied","qualname":"::stream::stream::StreamExt::copied","value":"fn <'a, T> (self) -> Copied<Self>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Creates an stream which copies all of its elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2706},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6934778,"byte_end":6934783,"line_start":529,"line_end":529,"column_start":12,"column_end":17},"name":"cycle","qualname":"::stream::stream::StreamExt::cycle","value":"fn (self) -> Cycle<Self>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Creates a stream that yields the provided values infinitely and in order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2707},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6935693,"byte_end":6935702,"line_start":562,"line_end":562,"column_start":12,"column_end":21},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"fn (self) -> Enumerate<Self>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Creates a stream that gives the current element's count as well as the next value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2708},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6937859,"byte_end":6937862,"line_start":633,"line_end":633,"column_start":12,"column_end":15},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"fn <B, F> (self, f: F) -> Map<Self, F>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Takes a closure and creates a stream that calls that closure on every element of this stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2711},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6938802,"byte_end":6938809,"line_start":669,"line_end":669,"column_start":12,"column_end":19},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"fn <F> (self, f: F) -> Inspect<Self, F>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            A combinator that does something with each element in the stream, passing the value\n            on.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2713},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6939858,"byte_end":6939862,"line_start":713,"line_end":713,"column_start":12,"column_end":16},"name":"last","qualname":"::stream::stream::StreamExt::last","value":"fn (self) -> LastFuture<Self, Self::Item>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Returns the last element of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2714},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6940821,"byte_end":6940825,"line_start":745,"line_end":745,"column_start":12,"column_end":16},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"fn (self) -> Fuse<Self>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Creates a stream which ends after the first `None`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2715},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6941591,"byte_end":6941597,"line_start":775,"line_end":775,"column_start":12,"column_end":18},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"fn <P> (self, predicate: P) -> Filter<Self, P>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Creates a stream that uses a predicate to determine if an element should be yielded.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2717},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6944721,"byte_end":6944731,"line_start":890,"line_end":890,"column_start":12,"column_end":22},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"fn <B, F> (self, f: F) -> FilterMap<Self, F>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Both filters and maps a stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2720},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6945720,"byte_end":6945730,"line_start":922,"line_end":922,"column_start":12,"column_end":22},"name":"min_by_key","qualname":"::stream::stream::StreamExt::min_by_key","value":"fn <B, F> (self, key_by: F) -> MinByKeyFuture<Self, Self::Item, F>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Returns the element that gives the minimum value with respect to the\n            specified key function. If several elements are equally minimum,\n            the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2723},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6946849,"byte_end":6946859,"line_start":958,"line_end":958,"column_start":12,"column_end":22},"name":"max_by_key","qualname":"::stream::stream::StreamExt::max_by_key","value":"fn <B, F> (self, key_by: F) -> MaxByKeyFuture<Self, Self::Item, F>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Returns the element that gives the maximum value with respect to the\n            specified key function. If several elements are equally maximum,\n            the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2726},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6948063,"byte_end":6948069,"line_start":997,"line_end":997,"column_start":12,"column_end":18},"name":"min_by","qualname":"::stream::stream::StreamExt::min_by","value":"fn <F> (self, compare: F) -> MinByFuture<Self, F, Self::Item>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Returns the element that gives the minimum value with respect to the\n            specified comparison function. If several elements are equally minimum,\n            the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2728},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6949086,"byte_end":6949089,"line_start":1031,"line_end":1031,"column_start":12,"column_end":15},"name":"max","qualname":"::stream::stream::StreamExt::max","value":"fn <F> (self) -> MaxFuture<Self, F, Self::Item>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Returns the element that gives the maximum value. If several elements are equally maximum,\n            the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2730},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6950077,"byte_end":6950080,"line_start":1064,"line_end":1064,"column_start":12,"column_end":15},"name":"min","qualname":"::stream::stream::StreamExt::min","value":"fn <F> (self) -> MinFuture<Self, F, Self::Item>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Returns the element that gives the minimum value. If several elements are equally minimum,\n            the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2732},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6951244,"byte_end":6951250,"line_start":1101,"line_end":1101,"column_start":12,"column_end":18},"name":"max_by","qualname":"::stream::stream::StreamExt::max_by","value":"fn <F> (self, compare: F) -> MaxByFuture<Self, F, Self::Item>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Returns the element that gives the maximum value with respect to the\n            specified comparison function. If several elements are equally maximum,\n            the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2734},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6952975,"byte_end":6952978,"line_start":1165,"line_end":1165,"column_start":12,"column_end":15},"name":"nth","qualname":"::stream::stream::StreamExt::nth","value":"fn (&mut self, n: usize) -> NthFuture<'_, Self>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Returns the nth element of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2735},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6954568,"byte_end":6954571,"line_start":1221,"line_end":1221,"column_start":12,"column_end":15},"name":"all","qualname":"::stream::stream::StreamExt::all","value":"fn <F> (&mut self, f: F) -> AllFuture<'_, Self, F, Self::Item>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Tests if every element of the stream matches a predicate.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6954547,"byte_end":6954556,"line_start":1220,"line_end":1220,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2737},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6955856,"byte_end":6955860,"line_start":1270,"line_end":1270,"column_start":12,"column_end":16},"name":"find","qualname":"::stream::stream::StreamExt::find","value":"fn <P> (&mut self, p: P) -> FindFuture<'_, Self, P>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Searches for an element in a stream that satisfies a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2739},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6956681,"byte_end":6956689,"line_start":1298,"line_end":1298,"column_start":12,"column_end":20},"name":"find_map","qualname":"::stream::stream::StreamExt::find_map","value":"fn <F, B> (&mut self, f: F) -> FindMapFuture<'_, Self, F>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Applies function to the elements of stream and returns the first non-none result.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2742},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6957549,"byte_end":6957553,"line_start":1331,"line_end":1331,"column_start":12,"column_end":16},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"fn <B, F> (self, init: B, f: F) -> FoldFuture<Self, F, B>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            A combinator that applies a function to every element in a stream\n            producing a single, final value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2745},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6959536,"byte_end":6959544,"line_start":1405,"line_end":1405,"column_start":12,"column_end":20},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"fn <F> (self, f: F) -> ForEachFuture<Self, F>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Call a closure on each element of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2747},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6961137,"byte_end":6961140,"line_start":1461,"line_end":1461,"column_start":12,"column_end":15},"name":"any","qualname":"::stream::stream::StreamExt::any","value":"fn <F> (&mut self, f: F) -> AnyFuture<'_, Self, F, Self::Item>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Tests if any element of the stream matches a predicate.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6961116,"byte_end":6961125,"line_start":1460,"line_end":1460,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2749},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6964156,"byte_end":6964160,"line_start":1557,"line_end":1557,"column_start":12,"column_end":16},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"fn <St, B, F> (self, initial_state: St, f: F) -> Scan<Self, St, F>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            A stream adaptor similar to [`fold`] that holds internal state and produces a new\n            stream.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6964135,"byte_end":6964144,"line_start":1556,"line_end":1556,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2753},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6965280,"byte_end":6965290,"line_start":1592,"line_end":1592,"column_start":12,"column_end":22},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"fn <P> (self, predicate: P) -> SkipWhile<Self, P>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Combinator that `skip`s elements based on a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2755},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6966039,"byte_end":6966043,"line_start":1620,"line_end":1620,"column_start":12,"column_end":16},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"fn (self, n: usize) -> Skip<Self>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Creates a combinator that skips the first `n` elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2756},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6968232,"byte_end":6968240,"line_start":1696,"line_end":1696,"column_start":12,"column_end":20},"name":"try_fold","qualname":"::stream::stream::StreamExt::try_fold","value":"fn <B, F, T, E> (&mut self, init: T, f: F) -> TryFoldFuture<'_, Self, F, T>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            A combinator that applies a function as long as it returns successfully, producing a single, final value.\n            Immediately returns the error when the function returns unsuccessfully.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2761},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6969535,"byte_end":6969547,"line_start":1742,"line_end":1742,"column_start":12,"column_end":24},"name":"try_for_each","qualname":"::stream::stream::StreamExt::try_for_each","value":"fn <F, E> (&mut self, f: F) -> TryForEachFuture<'_, Self, F>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Applies a falliable function to each element in a stream, stopping at first error and returning it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2764},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6971254,"byte_end":6971257,"line_start":1790,"line_end":1790,"column_start":12,"column_end":15},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"fn <U> (self, other: U) -> Zip<Self, U>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            'Zips up' two streams into a single stream of pairs.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6971233,"byte_end":6971242,"line_start":1789,"line_end":1789,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2766},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6977190,"byte_end":6977201,"line_start":1961,"line_end":1961,"column_start":12,"column_end":23},"name":"partial_cmp","qualname":"::stream::stream::StreamExt::partial_cmp","value":"fn <S> (self, other: S) -> PartialCmpFuture<Self, S>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Lexicographically compares the elements of this `Stream` with those\n            of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2768},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6978362,"byte_end":6978370,"line_start":2001,"line_end":2001,"column_start":12,"column_end":20},"name":"position","qualname":"::stream::stream::StreamExt::position","value":"fn <P> (&mut self, predicate: P) -> PositionFuture<'_, Self, P>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Searches for an element in a Stream that satisfies a predicate, returning\n            its index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2770},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6979688,"byte_end":6979691,"line_start":2039,"line_end":2039,"column_start":12,"column_end":15},"name":"cmp","qualname":"::stream::stream::StreamExt::cmp","value":"fn <S> (self, other: S) -> CmpFuture<Self, S>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Lexicographically compares the elements of this `Stream` with those\n            of another using 'Ord'.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2772},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6981705,"byte_end":6981707,"line_start":2105,"line_end":2105,"column_start":12,"column_end":14},"name":"ne","qualname":"::stream::stream::StreamExt::ne","value":"fn <S> (self, other: S) -> NeFuture<Self, S>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Determines if the elements of this `Stream` are lexicographically\n            not equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2774},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6982931,"byte_end":6982933,"line_start":2142,"line_end":2142,"column_start":12,"column_end":14},"name":"ge","qualname":"::stream::stream::StreamExt::ge","value":"fn <S> (self, other: S) -> GeFuture<Self, S>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Determines if the elements of this `Stream` are lexicographically\n            greater than or equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2776},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6984149,"byte_end":6984151,"line_start":2179,"line_end":2179,"column_start":12,"column_end":14},"name":"eq","qualname":"::stream::stream::StreamExt::eq","value":"fn <S> (self, other: S) -> EqFuture<Self, S>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Determines if the elements of this `Stream` are lexicographically\n            equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2778},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6985365,"byte_end":6985367,"line_start":2216,"line_end":2216,"column_start":12,"column_end":14},"name":"gt","qualname":"::stream::stream::StreamExt::gt","value":"fn <S> (self, other: S) -> GtFuture<Self, S>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Determines if the elements of this `Stream` are lexicographically\n            greater than those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2780},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6986577,"byte_end":6986579,"line_start":2253,"line_end":2253,"column_start":12,"column_end":14},"name":"le","qualname":"::stream::stream::StreamExt::le","value":"fn <S> (self, other: S) -> LeFuture<Self, S>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Determines if the elements of this `Stream` are lexicographically\n            less or equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2782},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6987783,"byte_end":6987785,"line_start":2290,"line_end":2290,"column_start":12,"column_end":14},"name":"lt","qualname":"::stream::stream::StreamExt::lt","value":"fn <S> (self, other: S) -> LtFuture<Self, S>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"\n            Determines if the elements of this `Stream` are lexicographically\n            less than those of another.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1029},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":7053051,"byte_end":7053056,"line_start":28,"line_end":28,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"fn <T> () -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that doesn't yield any items.","sig":null,"attributes":[{"value":"/ Creates a stream that doesn't yield any items.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":7052620,"byte_end":7052670,"line_start":7,"line_end":7,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":7052671,"byte_end":7052674,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`empty`] function. See its","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":7052675,"byte_end":7052738,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ documentation for more.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":7052739,"byte_end":7052766,"line_start":10,"line_end":10,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":7052767,"byte_end":7052770,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`empty`]: fn.empty.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":7052771,"byte_end":7052799,"line_start":12,"line_end":12,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":7052800,"byte_end":7052803,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":7052804,"byte_end":7052818,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":7052819,"byte_end":7052822,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":7052823,"byte_end":7052830,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":7052831,"byte_end":7052870,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":7052871,"byte_end":7052876,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":7052877,"byte_end":7052907,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":7052908,"byte_end":7052934,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":7052935,"byte_end":7052938,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::empty::<i32>();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":7052939,"byte_end":7052978,"line_start":22,"line_end":22,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":7052979,"byte_end":7052982,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":7052983,"byte_end":7053020,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":7053021,"byte_end":7053026,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":7053027,"byte_end":7053035,"line_start":26,"line_end":26,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":7053036,"byte_end":7053043,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2784},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":7053293,"byte_end":7053298,"line_start":40,"line_end":40,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":2786}],"decl_id":null,"docs":" A stream that doesn't yield any items.","sig":null,"attributes":[{"value":"/ A stream that doesn't yield any items.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":7053127,"byte_end":7053169,"line_start":34,"line_end":34,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":7053170,"byte_end":7053173,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This stream is constructed by the [`empty`] function.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":7053174,"byte_end":7053231,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":7053232,"byte_end":7053235,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`empty`]: fn.empty.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":7053236,"byte_end":7053264,"line_start":38,"line_end":38,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":2790},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7053867,"byte_end":7053873,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"FromFn","qualname":"::stream::from_fn::FromFn","value":"FromFn {  }","parent":null,"children":[{"krate":0,"index":2792}],"decl_id":null,"docs":" A stream that yields elements by calling a closure.","sig":null,"attributes":[{"value":"/ A stream that yields elements by calling a closure.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7053643,"byte_end":7053698,"line_start":6,"line_end":6,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7053699,"byte_end":7053702,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`from_fn`] function. See its","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7053703,"byte_end":7053766,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"/ documentation for more.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7053767,"byte_end":7053794,"line_start":9,"line_end":9,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7053795,"byte_end":7053798,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`from_fn`]: fn.from_fn.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7053799,"byte_end":7053831,"line_start":11,"line_end":11,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":1043},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7054733,"byte_end":7054740,"line_start":51,"line_end":51,"column_start":8,"column_end":15},"name":"from_fn","qualname":"::stream::from_fn::from_fn","value":"fn <T, F> (f: F) -> FromFn<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream where to produce each new element a provided closure is called.","sig":null,"attributes":[{"value":"/ Creates a new stream where to produce each new element a provided closure is called.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7053924,"byte_end":7054012,"line_start":19,"line_end":19,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7054013,"byte_end":7054016,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This allows creating a custom stream with any behaviour without using the more verbose","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7054017,"byte_end":7054107,"line_start":21,"line_end":21,"column_start":1,"column_end":91}},{"value":"/ syntax of creating a dedicated type and implementing a `Stream` trait for it.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7054108,"byte_end":7054189,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7054190,"byte_end":7054193,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7054194,"byte_end":7054208,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7054209,"byte_end":7054212,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7054213,"byte_end":7054220,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7054221,"byte_end":7054260,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7054261,"byte_end":7054266,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7054267,"byte_end":7054297,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7054298,"byte_end":7054324,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7054325,"byte_end":7054328,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut count = 0u8;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7054329,"byte_end":7054353,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"/ let s = stream::from_fn(|| {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7054354,"byte_end":7054386,"line_start":33,"line_end":33,"column_start":1,"column_end":33}},{"value":"/     count += 1;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7054387,"byte_end":7054406,"line_start":34,"line_end":34,"column_start":1,"column_end":20}},{"value":"/     if count > 3 {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7054407,"byte_end":7054429,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/         None","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7054430,"byte_end":7054446,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/     } else {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7054447,"byte_end":7054463,"line_start":37,"line_end":37,"column_start":1,"column_end":17}},{"value":"/         Some(count)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7054464,"byte_end":7054487,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/     }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7054488,"byte_end":7054497,"line_start":39,"line_end":39,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7054498,"byte_end":7054505,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7054506,"byte_end":7054509,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ pin_utils::pin_mut!(s);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7054510,"byte_end":7054537,"line_start":42,"line_end":42,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7054538,"byte_end":7054541,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7054542,"byte_end":7054582,"line_start":44,"line_end":44,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(2));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7054583,"byte_end":7054623,"line_start":45,"line_end":45,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(3));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7054624,"byte_end":7054664,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7054665,"byte_end":7054702,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7054703,"byte_end":7054708,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7054709,"byte_end":7054717,"line_start":49,"line_end":49,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7054718,"byte_end":7054725,"line_start":50,"line_end":50,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4877},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":7055616,"byte_end":7055624,"line_start":18,"line_end":18,"column_start":16,"column_end":24},"name":"FromIter","qualname":"::stream::from_iter::FromIter","value":"FromIter {  }","parent":null,"children":[{"krate":0,"index":4879}],"decl_id":null,"docs":" A stream that was created from iterator.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1058},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":7056124,"byte_end":7056133,"line_start":43,"line_end":43,"column_start":8,"column_end":17},"name":"from_iter","qualname":"::stream::from_iter::from_iter","value":"fn <I> (iter: I) -> FromIter<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Converts an iterator into a stream.","sig":null,"attributes":[{"value":"/ Converts an iterator into a stream.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":7055656,"byte_end":7055695,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":7055696,"byte_end":7055699,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":7055700,"byte_end":7055714,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":7055715,"byte_end":7055718,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":7055719,"byte_end":7055726,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":7055727,"byte_end":7055766,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":7055767,"byte_end":7055772,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":7055773,"byte_end":7055803,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":7055804,"byte_end":7055830,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":7055831,"byte_end":7055834,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::from_iter(vec![0, 1, 2, 3]);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":7055835,"byte_end":7055887,"line_start":33,"line_end":33,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":7055888,"byte_end":7055891,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(0));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":7055892,"byte_end":7055932,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":7055933,"byte_end":7055973,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(2));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":7055974,"byte_end":7056014,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(3));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":7056015,"byte_end":7056055,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":7056056,"byte_end":7056093,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":7056094,"byte_end":7056099,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":7056100,"byte_end":7056108,"line_start":41,"line_end":41,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":7056109,"byte_end":7056116,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1071},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":7057280,"byte_end":7057284,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"fn <T> (t: T) -> Once<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that yields a single item.","sig":null,"attributes":[{"value":"/ Creates a stream that yields a single item.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":7056947,"byte_end":7056994,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":7056995,"byte_end":7056998,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":7056999,"byte_end":7057013,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":7057014,"byte_end":7057017,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":7057018,"byte_end":7057025,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":7057026,"byte_end":7057065,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":7057066,"byte_end":7057071,"line_start":17,"line_end":17,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":7057072,"byte_end":7057102,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":7057103,"byte_end":7057129,"line_start":19,"line_end":19,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":7057130,"byte_end":7057133,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::once(7);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":7057134,"byte_end":7057166,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":7057167,"byte_end":7057170,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(7));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":7057171,"byte_end":7057211,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":7057212,"byte_end":7057249,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":7057250,"byte_end":7057255,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":7057256,"byte_end":7057264,"line_start":26,"line_end":26,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":7057265,"byte_end":7057272,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4838},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":7057584,"byte_end":7057588,"line_start":40,"line_end":40,"column_start":16,"column_end":20},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":4840}],"decl_id":null,"docs":" A stream that yields a single item.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1083},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":7058531,"byte_end":7058537,"line_start":23,"line_end":23,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"fn <T> (item: T) -> Repeat<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that yields the same item repeatedly.","sig":null,"attributes":[{"value":"/ Creates a stream that yields the same item repeatedly.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":7058182,"byte_end":7058240,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":7058241,"byte_end":7058244,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":7058245,"byte_end":7058259,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":7058260,"byte_end":7058263,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":7058264,"byte_end":7058271,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":7058272,"byte_end":7058311,"line_start":11,"line_end":11,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":7058312,"byte_end":7058317,"line_start":12,"line_end":12,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":7058318,"byte_end":7058348,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":7058349,"byte_end":7058375,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":7058376,"byte_end":7058379,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::repeat(7);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":7058380,"byte_end":7058414,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":7058415,"byte_end":7058418,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(7));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":7058419,"byte_end":7058459,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(7));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":7058460,"byte_end":7058500,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":7058501,"byte_end":7058506,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":7058507,"byte_end":7058515,"line_start":21,"line_end":21,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":7058516,"byte_end":7058523,"line_start":22,"line_end":22,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2799},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":7058824,"byte_end":7058830,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":2801}],"decl_id":null,"docs":" A stream that yields the same item repeatedly.","sig":null,"attributes":[{"value":"/ A stream that yields the same item repeatedly.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":7058608,"byte_end":7058658,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":7058659,"byte_end":7058662,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`repeat`] function. See its","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":7058663,"byte_end":7058725,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ documentation for more.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":7058726,"byte_end":7058753,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":7058754,"byte_end":7058757,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`repeat`]: fn.repeat.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":7058758,"byte_end":7058788,"line_start":35,"line_end":35,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":2808},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7059452,"byte_end":7059462,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"RepeatWith","qualname":"::stream::repeat_with::RepeatWith","value":"RepeatWith {  }","parent":null,"children":[{"krate":0,"index":2810}],"decl_id":null,"docs":" A stream that repeats elements of type `T` endlessly by applying a provided closure.","sig":null,"attributes":[{"value":"/ A stream that repeats elements of type `T` endlessly by applying a provided closure.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7059183,"byte_end":7059271,"line_start":6,"line_end":6,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7059272,"byte_end":7059275,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`repeat_with`] function. See its","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7059276,"byte_end":7059343,"line_start":8,"line_end":8,"column_start":1,"column_end":68}},{"value":"/ documentation for more.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7059344,"byte_end":7059371,"line_start":9,"line_end":9,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7059372,"byte_end":7059375,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`repeat_with`]: fn.repeat_with.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7059376,"byte_end":7059416,"line_start":11,"line_end":11,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1097},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7060568,"byte_end":7060579,"line_start":67,"line_end":67,"column_start":8,"column_end":19},"name":"repeat_with","qualname":"::stream::repeat_with::repeat_with","value":"fn <T, F> (repeater: F) -> RepeatWith<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that repeats elements of type `A` endlessly by applying the provided closure.","sig":null,"attributes":[{"value":"/ Creates a new stream that repeats elements of type `A` endlessly by applying the provided closure.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7059517,"byte_end":7059619,"line_start":19,"line_end":19,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7059620,"byte_end":7059623,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7059624,"byte_end":7059638,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7059639,"byte_end":7059642,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7059643,"byte_end":7059659,"line_start":23,"line_end":23,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7059660,"byte_end":7059663,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7059664,"byte_end":7059671,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7059672,"byte_end":7059711,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7059712,"byte_end":7059717,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7059718,"byte_end":7059748,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7059749,"byte_end":7059775,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7059776,"byte_end":7059779,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let s = stream::repeat_with(|| 1);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7059780,"byte_end":7059818,"line_start":31,"line_end":31,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7059819,"byte_end":7059822,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ pin_utils::pin_mut!(s);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7059823,"byte_end":7059850,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7059851,"byte_end":7059854,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7059855,"byte_end":7059895,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7059896,"byte_end":7059936,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7059937,"byte_end":7059977,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7059978,"byte_end":7060018,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/ # })","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7060019,"byte_end":7060027,"line_start":39,"line_end":39,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7060028,"byte_end":7060035,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7060036,"byte_end":7060039,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Going finite:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7060040,"byte_end":7060057,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7060058,"byte_end":7060061,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7060062,"byte_end":7060069,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7060070,"byte_end":7060109,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7060110,"byte_end":7060115,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7060116,"byte_end":7060146,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7060147,"byte_end":7060173,"line_start":48,"line_end":48,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7060174,"byte_end":7060177,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ let mut n = 1;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7060178,"byte_end":7060196,"line_start":50,"line_end":50,"column_start":1,"column_end":19}},{"value":"/ let s = stream::repeat_with(|| {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7060197,"byte_end":7060233,"line_start":51,"line_end":51,"column_start":1,"column_end":37}},{"value":"/     let item = n;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7060234,"byte_end":7060255,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"/     n *= 2;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7060256,"byte_end":7060271,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/     item","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7060272,"byte_end":7060284,"line_start":54,"line_end":54,"column_start":1,"column_end":13}},{"value":"/ })","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7060285,"byte_end":7060291,"line_start":55,"line_end":55,"column_start":1,"column_end":7}},{"value":"/ .take(4);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7060292,"byte_end":7060305,"line_start":56,"line_end":56,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7060306,"byte_end":7060309,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ pin_utils::pin_mut!(s);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7060310,"byte_end":7060337,"line_start":58,"line_end":58,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7060338,"byte_end":7060341,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7060342,"byte_end":7060382,"line_start":60,"line_end":60,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(2));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7060383,"byte_end":7060423,"line_start":61,"line_end":61,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(4));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7060424,"byte_end":7060464,"line_start":62,"line_end":62,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(8));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7060465,"byte_end":7060505,"line_start":63,"line_end":63,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7060506,"byte_end":7060543,"line_start":64,"line_end":64,"column_start":1,"column_end":38}},{"value":"/ # })","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7060544,"byte_end":7060552,"line_start":65,"line_end":65,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7060553,"byte_end":7060560,"line_start":66,"line_end":66,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":1105},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":1106},{"krate":0,"index":1109},{"krate":0,"index":1112},{"krate":0,"index":1116},{"krate":0,"index":1202},{"krate":0,"index":1333},{"krate":0,"index":1374}],"decl_id":null,"docs":" Synchronization primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/utils.rs","byte_start":13436,"byte_end":13459,"line_start":157,"line_end":157,"column_start":13,"column_end":36}},{"value":"! Synchronization primitives.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7061019,"byte_end":7061050,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7061051,"byte_end":7061054,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module is an async version of [`std::sync`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7061055,"byte_end":7061108,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7061109,"byte_end":7061112,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! [`std::sync`]: https://doc.rust-lang.org/std/sync/index.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7061113,"byte_end":7061177,"line_start":5,"line_end":5,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7061178,"byte_end":7061181,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! ## The need for synchronization","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7061182,"byte_end":7061217,"line_start":7,"line_end":7,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7061218,"byte_end":7061221,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! async-std's sync primitives are scheduler-aware, making it possible to","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7061222,"byte_end":7061296,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"! `.await` their operations - for example the locking of a [`Mutex`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7061297,"byte_end":7061368,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7061369,"byte_end":7061372,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! Conceptually, a Rust program is a series of operations which will","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7061373,"byte_end":7061442,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"! be executed on a computer. The timeline of events happening in the","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7061443,"byte_end":7061513,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"! program is consistent with the order of the operations in the code.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7061514,"byte_end":7061585,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7061586,"byte_end":7061589,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! Consider the following code, operating on some global static variables:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7061590,"byte_end":7061665,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7061666,"byte_end":7061669,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7061670,"byte_end":7061677,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"! static mut A: u32 = 0;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7061678,"byte_end":7061704,"line_start":19,"line_end":19,"column_start":1,"column_end":27}},{"value":"! static mut B: u32 = 0;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7061705,"byte_end":7061731,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"! static mut C: u32 = 0;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7061732,"byte_end":7061758,"line_start":21,"line_end":21,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7061759,"byte_end":7061762,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! fn main() {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7061763,"byte_end":7061778,"line_start":23,"line_end":23,"column_start":1,"column_end":16}},{"value":"!     unsafe {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7061779,"byte_end":7061795,"line_start":24,"line_end":24,"column_start":1,"column_end":17}},{"value":"!         A = 3;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7061796,"byte_end":7061814,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"!         B = 4;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7061815,"byte_end":7061833,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"!         A = A + B;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7061834,"byte_end":7061856,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"!         C = B;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7061857,"byte_end":7061875,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"!         println!(\"{} {} {}\", A, B, C);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7061876,"byte_end":7061918,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"!         C = A;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7061919,"byte_end":7061937,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"!     }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7061938,"byte_end":7061947,"line_start":31,"line_end":31,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7061948,"byte_end":7061953,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7061954,"byte_end":7061961,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7061962,"byte_end":7061965,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! It appears as if some variables stored in memory are changed, an addition","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7061966,"byte_end":7062043,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"! is performed, result is stored in `A` and the variable `C` is","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7062044,"byte_end":7062109,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"! modified twice.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7062110,"byte_end":7062129,"line_start":37,"line_end":37,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7062130,"byte_end":7062133,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! When only a single thread is involved, the results are as expected:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7062134,"byte_end":7062205,"line_start":39,"line_end":39,"column_start":1,"column_end":72}},{"value":"! the line `7 4 4` gets printed.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7062206,"byte_end":7062240,"line_start":40,"line_end":40,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7062241,"byte_end":7062244,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! As for what happens behind the scenes, when optimizations are enabled the","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7062245,"byte_end":7062322,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"! final generated machine code might look very different from the code:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7062323,"byte_end":7062396,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7062397,"byte_end":7062400,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! - The first store to `C` might be moved before the store to `A` or `B`,","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7062401,"byte_end":7062476,"line_start":45,"line_end":45,"column_start":1,"column_end":76}},{"value":"!   _as if_ we had written `C = 4; A = 3; B = 4`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7062477,"byte_end":7062528,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7062529,"byte_end":7062532,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! - Assignment of `A + B` to `A` might be removed, since the sum can be stored","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7062533,"byte_end":7062613,"line_start":48,"line_end":48,"column_start":1,"column_end":81}},{"value":"!   in a temporary location until it gets printed, with the global variable","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7062614,"byte_end":7062691,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"!   never getting updated.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7062692,"byte_end":7062720,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7062721,"byte_end":7062724,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"! - The final result could be determined just by looking at the code","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7062725,"byte_end":7062795,"line_start":52,"line_end":52,"column_start":1,"column_end":71}},{"value":"!   at compile time, so [constant folding] might turn the whole","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7062796,"byte_end":7062861,"line_start":53,"line_end":53,"column_start":1,"column_end":66}},{"value":"!   block into a simple `println!(\"7 4 4\")`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7062862,"byte_end":7062908,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7062909,"byte_end":7062912,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! The compiler is allowed to perform any combination of these","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7062913,"byte_end":7062976,"line_start":56,"line_end":56,"column_start":1,"column_end":64}},{"value":"! optimizations, as long as the final optimized code, when executed,","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7062977,"byte_end":7063047,"line_start":57,"line_end":57,"column_start":1,"column_end":71}},{"value":"! produces the same results as the one without optimizations.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7063048,"byte_end":7063111,"line_start":58,"line_end":58,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7063112,"byte_end":7063115,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"! Due to the [concurrency] involved in modern computers, assumptions","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7063116,"byte_end":7063186,"line_start":60,"line_end":60,"column_start":1,"column_end":71}},{"value":"! about the program's execution order are often wrong. Access to","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7063187,"byte_end":7063253,"line_start":61,"line_end":61,"column_start":1,"column_end":67}},{"value":"! global variables can lead to nondeterministic results, **even if**","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7063254,"byte_end":7063324,"line_start":62,"line_end":62,"column_start":1,"column_end":71}},{"value":"! compiler optimizations are disabled, and it is **still possible**","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7063325,"byte_end":7063394,"line_start":63,"line_end":63,"column_start":1,"column_end":70}},{"value":"! to introduce synchronization bugs.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7063395,"byte_end":7063433,"line_start":64,"line_end":64,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7063434,"byte_end":7063437,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"! Note that thanks to Rust's safety guarantees, accessing global (static)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7063438,"byte_end":7063513,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"! variables requires `unsafe` code, assuming we don't use any of the","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7063514,"byte_end":7063584,"line_start":67,"line_end":67,"column_start":1,"column_end":71}},{"value":"! synchronization primitives in this module.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7063585,"byte_end":7063631,"line_start":68,"line_end":68,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7063632,"byte_end":7063635,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! [constant folding]: https://en.wikipedia.org/wiki/Constant_folding","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7063636,"byte_end":7063706,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"! [concurrency]: https://en.wikipedia.org/wiki/Concurrency_(computer_science)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7063707,"byte_end":7063786,"line_start":71,"line_end":71,"column_start":1,"column_end":80}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7063787,"byte_end":7063790,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"! ## Out-of-order execution","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7063791,"byte_end":7063820,"line_start":73,"line_end":73,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7063821,"byte_end":7063824,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"! Instructions can execute in a different order from the one we define, due to","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7063825,"byte_end":7063905,"line_start":75,"line_end":75,"column_start":1,"column_end":81}},{"value":"! various reasons:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7063906,"byte_end":7063926,"line_start":76,"line_end":76,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7063927,"byte_end":7063930,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"! - The **compiler** reordering instructions: If the compiler can issue an","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7063931,"byte_end":7064007,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"!   instruction at an earlier point, it will try to do so. For example, it","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7064008,"byte_end":7064084,"line_start":79,"line_end":79,"column_start":1,"column_end":77}},{"value":"!   might hoist memory loads at the top of a code block, so that the CPU can","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7064085,"byte_end":7064163,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"!   start [prefetching] the values from memory.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7064164,"byte_end":7064213,"line_start":81,"line_end":81,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7064214,"byte_end":7064217,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"!   In single-threaded scenarios, this can cause issues when writing","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7064218,"byte_end":7064288,"line_start":83,"line_end":83,"column_start":1,"column_end":71}},{"value":"!   signal handlers or certain kinds of low-level code.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7064289,"byte_end":7064346,"line_start":84,"line_end":84,"column_start":1,"column_end":58}},{"value":"!   Use [compiler fences] to prevent this reordering.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7064347,"byte_end":7064402,"line_start":85,"line_end":85,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7064403,"byte_end":7064406,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"! - A **single processor** executing instructions [out-of-order]:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7064407,"byte_end":7064474,"line_start":87,"line_end":87,"column_start":1,"column_end":68}},{"value":"!   Modern CPUs are capable of [superscalar] execution,","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7064475,"byte_end":7064532,"line_start":88,"line_end":88,"column_start":1,"column_end":58}},{"value":"!   i.e., multiple instructions might be executing at the same time,","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7064533,"byte_end":7064603,"line_start":89,"line_end":89,"column_start":1,"column_end":71}},{"value":"!   even though the machine code describes a sequential process.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7064604,"byte_end":7064670,"line_start":90,"line_end":90,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7064671,"byte_end":7064674,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"!   This kind of reordering is handled transparently by the CPU.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7064675,"byte_end":7064741,"line_start":92,"line_end":92,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7064742,"byte_end":7064745,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"! - A **multiprocessor** system executing multiple hardware threads","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7064746,"byte_end":7064815,"line_start":94,"line_end":94,"column_start":1,"column_end":70}},{"value":"!   at the same time: In multi-threaded scenarios, you can use two","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7064816,"byte_end":7064884,"line_start":95,"line_end":95,"column_start":1,"column_end":69}},{"value":"!   kinds of primitives to deal with synchronization:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7064885,"byte_end":7064940,"line_start":96,"line_end":96,"column_start":1,"column_end":56}},{"value":"!   - [memory fences] to ensure memory accesses are made visible to","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7064941,"byte_end":7065010,"line_start":97,"line_end":97,"column_start":1,"column_end":70}},{"value":"!   other CPUs in the right order.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7065011,"byte_end":7065047,"line_start":98,"line_end":98,"column_start":1,"column_end":37}},{"value":"!   - [atomic operations] to ensure simultaneous access to the same","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7065048,"byte_end":7065117,"line_start":99,"line_end":99,"column_start":1,"column_end":70}},{"value":"!   memory location doesn't lead to undefined behavior.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7065118,"byte_end":7065175,"line_start":100,"line_end":100,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7065176,"byte_end":7065179,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"! [prefetching]: https://en.wikipedia.org/wiki/Cache_prefetching","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7065180,"byte_end":7065246,"line_start":102,"line_end":102,"column_start":1,"column_end":67}},{"value":"! [compiler fences]: https://doc.rust-lang.org/std/sync/atomic/fn.compiler_fence.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7065247,"byte_end":7065334,"line_start":103,"line_end":103,"column_start":1,"column_end":88}},{"value":"! [out-of-order]: https://en.wikipedia.org/wiki/Out-of-order_execution","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7065335,"byte_end":7065407,"line_start":104,"line_end":104,"column_start":1,"column_end":73}},{"value":"! [superscalar]: https://en.wikipedia.org/wiki/Superscalar_processor","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7065408,"byte_end":7065478,"line_start":105,"line_end":105,"column_start":1,"column_end":71}},{"value":"! [memory fences]: https://doc.rust-lang.org/std/sync/atomic/fn.fence.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7065479,"byte_end":7065555,"line_start":106,"line_end":106,"column_start":1,"column_end":77}},{"value":"! [atomic operations]: https://doc.rust-lang.org/std/sync/atomic/index.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7065556,"byte_end":7065633,"line_start":107,"line_end":107,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7065634,"byte_end":7065637,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"! ## Higher-level synchronization objects","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7065638,"byte_end":7065681,"line_start":109,"line_end":109,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7065682,"byte_end":7065685,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"! Most of the low-level synchronization primitives are quite error-prone and","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7065686,"byte_end":7065764,"line_start":111,"line_end":111,"column_start":1,"column_end":79}},{"value":"! inconvenient to use, which is why async-std also exposes some","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7065765,"byte_end":7065830,"line_start":112,"line_end":112,"column_start":1,"column_end":66}},{"value":"! higher-level synchronization objects.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7065831,"byte_end":7065872,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7065873,"byte_end":7065876,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"! These abstractions can be built out of lower-level primitives.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7065877,"byte_end":7065943,"line_start":115,"line_end":115,"column_start":1,"column_end":67}},{"value":"! For efficiency, the sync objects in async-std are usually","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7065944,"byte_end":7066005,"line_start":116,"line_end":116,"column_start":1,"column_end":62}},{"value":"! implemented with help from the scheduler, which is","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7066006,"byte_end":7066060,"line_start":117,"line_end":117,"column_start":1,"column_end":55}},{"value":"! able to reschedule the tasks while they are blocked on acquiring","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7066061,"byte_end":7066129,"line_start":118,"line_end":118,"column_start":1,"column_end":69}},{"value":"! a lock.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7066130,"byte_end":7066141,"line_start":119,"line_end":119,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7066142,"byte_end":7066145,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"! The following is an overview of the available synchronization","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7066146,"byte_end":7066211,"line_start":121,"line_end":121,"column_start":1,"column_end":66}},{"value":"! objects:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7066212,"byte_end":7066224,"line_start":122,"line_end":122,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7066225,"byte_end":7066228,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"! - [`Arc`]: Atomically Reference-Counted pointer, which can be used","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7066229,"byte_end":7066299,"line_start":124,"line_end":124,"column_start":1,"column_end":71}},{"value":"!   in multithreaded environments to prolong the lifetime of some","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7066300,"byte_end":7066367,"line_start":125,"line_end":125,"column_start":1,"column_end":68}},{"value":"!   data until all the threads have finished using it.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7066368,"byte_end":7066424,"line_start":126,"line_end":126,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7066425,"byte_end":7066428,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"! - [`Barrier`]: Ensures multiple threads will wait for each other","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7066429,"byte_end":7066497,"line_start":128,"line_end":128,"column_start":1,"column_end":69}},{"value":"!   to reach a point in the program, before continuing execution all","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7066498,"byte_end":7066568,"line_start":129,"line_end":129,"column_start":1,"column_end":71}},{"value":"!   together.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7066569,"byte_end":7066584,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7066585,"byte_end":7066588,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"! - [`channel`]: Multi-producer, multi-consumer queues, used for","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7066589,"byte_end":7066655,"line_start":132,"line_end":132,"column_start":1,"column_end":67}},{"value":"!   message-based communication. Can provide a lightweight","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7066656,"byte_end":7066716,"line_start":133,"line_end":133,"column_start":1,"column_end":61}},{"value":"!   inter-task synchronisation mechanism, at the cost of some","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7066717,"byte_end":7066780,"line_start":134,"line_end":134,"column_start":1,"column_end":64}},{"value":"!   extra memory.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7066781,"byte_end":7066800,"line_start":135,"line_end":135,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7066801,"byte_end":7066804,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"! - [`Mutex`]: Mutual exclusion mechanism, which ensures that at","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7066805,"byte_end":7066871,"line_start":137,"line_end":137,"column_start":1,"column_end":67}},{"value":"!   most one task at a time is able to access some data.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7066872,"byte_end":7066930,"line_start":138,"line_end":138,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7066931,"byte_end":7066934,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"! - [`RwLock`]: Provides a mutual exclusion mechanism which allows","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7066935,"byte_end":7067003,"line_start":140,"line_end":140,"column_start":1,"column_end":69}},{"value":"!   multiple readers at the same time, while allowing only one","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7067004,"byte_end":7067068,"line_start":141,"line_end":141,"column_start":1,"column_end":65}},{"value":"!   writer at a time. In some cases, this can be more efficient than","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7067069,"byte_end":7067139,"line_start":142,"line_end":142,"column_start":1,"column_end":71}},{"value":"!   a mutex.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7067140,"byte_end":7067154,"line_start":143,"line_end":143,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7067155,"byte_end":7067158,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"! [`Arc`]: struct.Arc.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7067159,"byte_end":7067187,"line_start":145,"line_end":145,"column_start":1,"column_end":29}},{"value":"! [`Barrier`]: struct.Barrier.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7067188,"byte_end":7067224,"line_start":146,"line_end":146,"column_start":1,"column_end":37}},{"value":"! [`channel`]: fn.channel.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7067225,"byte_end":7067257,"line_start":147,"line_end":147,"column_start":1,"column_end":33}},{"value":"! [`Mutex`]: struct.Mutex.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7067258,"byte_end":7067290,"line_start":148,"line_end":148,"column_start":1,"column_end":33}},{"value":"! [`RwLock`]: struct.RwLock.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7067291,"byte_end":7067325,"line_start":149,"line_end":149,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7067326,"byte_end":7067329,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7067330,"byte_end":7067344,"line_start":151,"line_end":151,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7067345,"byte_end":7067348,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"! Spawn a task that updates an integer protected by a mutex:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7067349,"byte_end":7067411,"line_start":153,"line_end":153,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7067412,"byte_end":7067415,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7067416,"byte_end":7067423,"line_start":155,"line_end":155,"column_start":1,"column_end":8}},{"value":"! # async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7067424,"byte_end":7067463,"line_start":156,"line_end":156,"column_start":1,"column_end":40}},{"value":"! #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7067464,"byte_end":7067469,"line_start":157,"line_end":157,"column_start":1,"column_end":6}},{"value":"! use async_std::sync::{Arc, Mutex};","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7067470,"byte_end":7067508,"line_start":158,"line_end":158,"column_start":1,"column_end":39}},{"value":"! use async_std::task;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7067509,"byte_end":7067533,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7067534,"byte_end":7067537,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"! let m1 = Arc::new(Mutex::new(0));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7067538,"byte_end":7067575,"line_start":161,"line_end":161,"column_start":1,"column_end":38}},{"value":"! let m2 = m1.clone();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7067576,"byte_end":7067600,"line_start":162,"line_end":162,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7067601,"byte_end":7067604,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"! task::spawn(async move {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7067605,"byte_end":7067633,"line_start":164,"line_end":164,"column_start":1,"column_end":29}},{"value":"!     *m2.lock().await = 1;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7067634,"byte_end":7067663,"line_start":165,"line_end":165,"column_start":1,"column_end":30}},{"value":"! })","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7067664,"byte_end":7067670,"line_start":166,"line_end":166,"column_start":1,"column_end":7}},{"value":"! .await;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7067671,"byte_end":7067682,"line_start":167,"line_end":167,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7067683,"byte_end":7067686,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"! assert_eq!(*m1.lock().await, 1);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7067687,"byte_end":7067723,"line_start":169,"line_end":169,"column_start":1,"column_end":37}},{"value":"! #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7067724,"byte_end":7067729,"line_start":170,"line_end":170,"column_start":1,"column_end":6}},{"value":"! # })","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7067730,"byte_end":7067738,"line_start":171,"line_end":171,"column_start":1,"column_end":9}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7067739,"byte_end":7067746,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mod.rs","byte_start":7067748,"byte_end":7067788,"line_start":174,"line_end":174,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1131},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7069285,"byte_end":7069290,"line_start":42,"line_end":42,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::sync::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1135}],"decl_id":null,"docs":" A mutual exclusion primitive for protecting shared data.","sig":null,"attributes":[{"value":"/ A mutual exclusion primitive for protecting shared data.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7068600,"byte_end":7068660,"line_start":11,"line_end":11,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7068661,"byte_end":7068664,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::sync::Mutex`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7068665,"byte_end":7068723,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7068724,"byte_end":7068727,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`std::sync::Mutex`]: https://doc.rust-lang.org/std/sync/struct.Mutex.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7068728,"byte_end":7068806,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7068807,"byte_end":7068810,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7068811,"byte_end":7068825,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7068826,"byte_end":7068829,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7068830,"byte_end":7068837,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7068838,"byte_end":7068877,"line_start":20,"line_end":20,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7068878,"byte_end":7068883,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"/ use async_std::sync::{Arc, Mutex};","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7068884,"byte_end":7068922,"line_start":22,"line_end":22,"column_start":1,"column_end":39}},{"value":"/ use async_std::task;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7068923,"byte_end":7068947,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7068948,"byte_end":7068951,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let m = Arc::new(Mutex::new(0));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7068952,"byte_end":7068988,"line_start":25,"line_end":25,"column_start":1,"column_end":37}},{"value":"/ let mut tasks = vec![];","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7068989,"byte_end":7069016,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7069017,"byte_end":7069020,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..10 {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7069021,"byte_end":7069041,"line_start":28,"line_end":28,"column_start":1,"column_end":21}},{"value":"/     let m = m.clone();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7069042,"byte_end":7069068,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/     tasks.push(task::spawn(async move {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7069069,"byte_end":7069112,"line_start":30,"line_end":30,"column_start":1,"column_end":44}},{"value":"/         *m.lock().await += 1;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7069113,"byte_end":7069146,"line_start":31,"line_end":31,"column_start":1,"column_end":34}},{"value":"/     }));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7069147,"byte_end":7069159,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7069160,"byte_end":7069165,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7069166,"byte_end":7069169,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ for t in tasks {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7069170,"byte_end":7069190,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"/     t.await;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7069191,"byte_end":7069207,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7069208,"byte_end":7069213,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(*m.lock().await, 10);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7069214,"byte_end":7069250,"line_start":38,"line_end":38,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7069251,"byte_end":7069256,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7069257,"byte_end":7069265,"line_start":40,"line_end":40,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7069266,"byte_end":7069273,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1142},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7069679,"byte_end":7069682,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"fn (t: T) -> Mutex<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new mutex.","sig":null,"attributes":[{"value":"/ Creates a new mutex.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7069505,"byte_end":7069529,"line_start":52,"line_end":52,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7069534,"byte_end":7069537,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7069542,"byte_end":7069556,"line_start":54,"line_end":54,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7069561,"byte_end":7069564,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7069569,"byte_end":7069576,"line_start":56,"line_end":56,"column_start":5,"column_end":12}},{"value":"/ use async_std::sync::Mutex;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7069581,"byte_end":7069612,"line_start":57,"line_end":57,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7069617,"byte_end":7069620,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(0);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7069625,"byte_end":7069655,"line_start":59,"line_end":59,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7069660,"byte_end":7069667,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1145},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7070439,"byte_end":7070443,"line_start":95,"line_end":95,"column_start":18,"column_end":22},"name":"lock","qualname":"<Mutex<T>>::lock","value":"fn (&self) -> MutexGuard<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Acquires the lock.","sig":null,"attributes":[{"value":"/ Acquires the lock.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7069889,"byte_end":7069911,"line_start":71,"line_end":71,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7069916,"byte_end":7069919,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Returns a guard that releases the lock when dropped.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7069924,"byte_end":7069980,"line_start":73,"line_end":73,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7069985,"byte_end":7069988,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7069993,"byte_end":7070007,"line_start":75,"line_end":75,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7070012,"byte_end":7070015,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7070020,"byte_end":7070027,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7070032,"byte_end":7070071,"line_start":78,"line_end":78,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7070076,"byte_end":7070081,"line_start":79,"line_end":79,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::{Arc, Mutex};","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7070086,"byte_end":7070124,"line_start":80,"line_end":80,"column_start":5,"column_end":43}},{"value":"/ use async_std::task;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7070129,"byte_end":7070153,"line_start":81,"line_end":81,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7070158,"byte_end":7070161,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let m1 = Arc::new(Mutex::new(10));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7070166,"byte_end":7070204,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/ let m2 = m1.clone();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7070209,"byte_end":7070233,"line_start":84,"line_end":84,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7070238,"byte_end":7070241,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7070246,"byte_end":7070274,"line_start":86,"line_end":86,"column_start":5,"column_end":33}},{"value":"/     *m1.lock().await = 20;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7070279,"byte_end":7070309,"line_start":87,"line_end":87,"column_start":5,"column_end":35}},{"value":"/ })","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7070314,"byte_end":7070320,"line_start":88,"line_end":88,"column_start":5,"column_end":11}},{"value":"/ .await;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7070325,"byte_end":7070336,"line_start":89,"line_end":89,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7070341,"byte_end":7070344,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(*m2.lock().await, 20);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7070349,"byte_end":7070386,"line_start":91,"line_end":91,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7070391,"byte_end":7070396,"line_start":92,"line_end":92,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7070401,"byte_end":7070409,"line_start":93,"line_end":93,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7070414,"byte_end":7070421,"line_start":94,"line_end":94,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1161},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7073007,"byte_end":7073015,"line_start":176,"line_end":176,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"fn (&self) -> Option<MutexGuard<'_, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7072120,"byte_end":7072153,"line_start":144,"line_end":144,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7072158,"byte_end":7072161,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ If the lock could not be acquired at this time, then [`None`] is returned. Otherwise, a","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7072166,"byte_end":7072257,"line_start":146,"line_end":146,"column_start":5,"column_end":96}},{"value":"/ guard is returned that releases the lock when dropped.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7072262,"byte_end":7072320,"line_start":147,"line_end":147,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7072325,"byte_end":7072328,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7072333,"byte_end":7072413,"line_start":149,"line_end":149,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7072418,"byte_end":7072421,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7072426,"byte_end":7072440,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7072445,"byte_end":7072448,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7072453,"byte_end":7072460,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7072465,"byte_end":7072504,"line_start":154,"line_end":154,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7072509,"byte_end":7072514,"line_start":155,"line_end":155,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::{Arc, Mutex};","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7072519,"byte_end":7072557,"line_start":156,"line_end":156,"column_start":5,"column_end":43}},{"value":"/ use async_std::task;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7072562,"byte_end":7072586,"line_start":157,"line_end":157,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7072591,"byte_end":7072594,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ let m1 = Arc::new(Mutex::new(10));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7072599,"byte_end":7072637,"line_start":159,"line_end":159,"column_start":5,"column_end":43}},{"value":"/ let m2 = m1.clone();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7072642,"byte_end":7072666,"line_start":160,"line_end":160,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7072671,"byte_end":7072674,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7072679,"byte_end":7072707,"line_start":162,"line_end":162,"column_start":5,"column_end":33}},{"value":"/     if let Some(mut guard) = m1.try_lock() {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7072712,"byte_end":7072760,"line_start":163,"line_end":163,"column_start":5,"column_end":53}},{"value":"/         *guard = 20;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7072765,"byte_end":7072789,"line_start":164,"line_end":164,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7072794,"byte_end":7072810,"line_start":165,"line_end":165,"column_start":5,"column_end":21}},{"value":"/         println!(\"try_lock failed\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7072815,"byte_end":7072855,"line_start":166,"line_end":166,"column_start":5,"column_end":45}},{"value":"/     }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7072860,"byte_end":7072869,"line_start":167,"line_end":167,"column_start":5,"column_end":14}},{"value":"/ })","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7072874,"byte_end":7072880,"line_start":168,"line_end":168,"column_start":5,"column_end":11}},{"value":"/ .await;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7072885,"byte_end":7072896,"line_start":169,"line_end":169,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7072901,"byte_end":7072904,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(*m2.lock().await, 20);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7072909,"byte_end":7072946,"line_start":171,"line_end":171,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7072951,"byte_end":7072956,"line_start":172,"line_end":172,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7072961,"byte_end":7072969,"line_start":173,"line_end":173,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7072974,"byte_end":7072981,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7072986,"byte_end":7072995,"line_start":175,"line_end":175,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1162},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7073448,"byte_end":7073458,"line_start":194,"line_end":194,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the mutex, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes the mutex, returning the underlying data.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7073199,"byte_end":7073253,"line_start":184,"line_end":184,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7073258,"byte_end":7073261,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7073266,"byte_end":7073280,"line_start":186,"line_end":186,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7073285,"byte_end":7073288,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7073293,"byte_end":7073300,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/ use async_std::sync::Mutex;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7073305,"byte_end":7073336,"line_start":189,"line_end":189,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7073341,"byte_end":7073344,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(10);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7073349,"byte_end":7073380,"line_start":191,"line_end":191,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(mutex.into_inner(), 10);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7073385,"byte_end":7073424,"line_start":192,"line_end":192,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7073429,"byte_end":7073436,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1163},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7074049,"byte_end":7074056,"line_start":216,"line_end":216,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7073530,"byte_end":7073585,"line_start":198,"line_end":198,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7073590,"byte_end":7073593,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the mutex mutably, no actual locking takes place -- the mutable","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7073598,"byte_end":7073689,"line_start":200,"line_end":200,"column_start":5,"column_end":96}},{"value":"/ borrow statically guarantees no locks exist.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7073694,"byte_end":7073742,"line_start":201,"line_end":201,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7073747,"byte_end":7073750,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7073755,"byte_end":7073769,"line_start":203,"line_end":203,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7073774,"byte_end":7073777,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7073782,"byte_end":7073789,"line_start":205,"line_end":205,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7073794,"byte_end":7073833,"line_start":206,"line_end":206,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7073838,"byte_end":7073843,"line_start":207,"line_end":207,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::Mutex;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7073848,"byte_end":7073879,"line_start":208,"line_end":208,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7073884,"byte_end":7073887,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ let mut mutex = Mutex::new(0);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7073892,"byte_end":7073926,"line_start":210,"line_end":210,"column_start":5,"column_end":39}},{"value":"/ *mutex.get_mut() = 10;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7073931,"byte_end":7073957,"line_start":211,"line_end":211,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*mutex.lock().await, 10);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7073962,"byte_end":7074002,"line_start":212,"line_end":212,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7074007,"byte_end":7074012,"line_start":213,"line_end":213,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7074017,"byte_end":7074025,"line_start":214,"line_end":214,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7074030,"byte_end":7074037,"line_start":215,"line_end":215,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1177},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7074944,"byte_end":7074954,"line_start":250,"line_end":250,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::sync::mutex::MutexGuard","value":"","parent":null,"children":[],"decl_id":null,"docs":" A guard that releases the lock when dropped.\n","sig":null,"attributes":[{"value":"/ A guard that releases the lock when dropped.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7074884,"byte_end":7074932,"line_start":249,"line_end":249,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1222},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7077622,"byte_end":7077628,"line_start":52,"line_end":52,"column_start":12,"column_end":18},"name":"RwLock","qualname":"::sync::rwlock::RwLock","value":"RwLock {  }","parent":null,"children":[{"krate":0,"index":1224},{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1227}],"decl_id":null,"docs":" A reader-writer lock for protecting shared data.","sig":null,"attributes":[{"value":"/ A reader-writer lock for protecting shared data.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7076928,"byte_end":7076980,"line_start":23,"line_end":23,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7076981,"byte_end":7076984,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::sync::RwLock`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7076985,"byte_end":7077044,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7077045,"byte_end":7077048,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`std::sync::RwLock`]: https://doc.rust-lang.org/std/sync/struct.RwLock.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7077049,"byte_end":7077129,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7077130,"byte_end":7077133,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7077134,"byte_end":7077148,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7077149,"byte_end":7077152,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7077153,"byte_end":7077160,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7077161,"byte_end":7077200,"line_start":32,"line_end":32,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7077201,"byte_end":7077206,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ use async_std::sync::RwLock;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7077207,"byte_end":7077239,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7077240,"byte_end":7077243,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7077244,"byte_end":7077274,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7077275,"byte_end":7077278,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ // Multiple read locks can be held at a time.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7077279,"byte_end":7077328,"line_start":38,"line_end":38,"column_start":1,"column_end":50}},{"value":"/ let r1 = lock.read().await;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7077329,"byte_end":7077360,"line_start":39,"line_end":39,"column_start":1,"column_end":32}},{"value":"/ let r2 = lock.read().await;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7077361,"byte_end":7077392,"line_start":40,"line_end":40,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(*r1, 5);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7077393,"byte_end":7077416,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(*r2, 5);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7077417,"byte_end":7077440,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"/ drop((r1, r2));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7077441,"byte_end":7077460,"line_start":43,"line_end":43,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7077461,"byte_end":7077464,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // Only one write locks can be held at a time.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7077465,"byte_end":7077515,"line_start":45,"line_end":45,"column_start":1,"column_end":51}},{"value":"/ let mut w = lock.write().await;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7077516,"byte_end":7077551,"line_start":46,"line_end":46,"column_start":1,"column_end":36}},{"value":"/ *w += 1;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7077552,"byte_end":7077564,"line_start":47,"line_end":47,"column_start":1,"column_end":13}},{"value":"/ assert_eq!(*w, 6);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7077565,"byte_end":7077587,"line_start":48,"line_end":48,"column_start":1,"column_end":23}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7077588,"byte_end":7077593,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7077594,"byte_end":7077602,"line_start":50,"line_end":50,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7077603,"byte_end":7077610,"line_start":51,"line_end":51,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1234},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7078074,"byte_end":7078077,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"new","qualname":"<RwLock<T>>::new","value":"fn (t: T) -> RwLock<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new reader-writer lock.","sig":null,"attributes":[{"value":"/ Creates a new reader-writer lock.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7077886,"byte_end":7077923,"line_start":63,"line_end":63,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7077928,"byte_end":7077931,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7077936,"byte_end":7077950,"line_start":65,"line_end":65,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7077955,"byte_end":7077958,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7077963,"byte_end":7077970,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/ use async_std::sync::RwLock;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7077975,"byte_end":7078007,"line_start":68,"line_end":68,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7078012,"byte_end":7078015,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(0);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7078020,"byte_end":7078050,"line_start":70,"line_end":70,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7078055,"byte_end":7078062,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1237},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7078781,"byte_end":7078785,"line_start":103,"line_end":103,"column_start":18,"column_end":22},"name":"read","qualname":"<RwLock<T>>::read","value":"fn (&self) -> RwLockReadGuard<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a read lock.","sig":null,"attributes":[{"value":"/ Acquires a read lock.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7078331,"byte_end":7078356,"line_start":83,"line_end":83,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7078361,"byte_end":7078364,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Returns a guard that releases the lock when dropped.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7078369,"byte_end":7078425,"line_start":85,"line_end":85,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7078430,"byte_end":7078433,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7078438,"byte_end":7078452,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7078457,"byte_end":7078460,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7078465,"byte_end":7078472,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7078477,"byte_end":7078516,"line_start":90,"line_end":90,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7078521,"byte_end":7078526,"line_start":91,"line_end":91,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::RwLock;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7078531,"byte_end":7078563,"line_start":92,"line_end":92,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7078568,"byte_end":7078571,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7078576,"byte_end":7078606,"line_start":94,"line_end":94,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7078611,"byte_end":7078614,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let n = lock.read().await;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7078619,"byte_end":7078649,"line_start":96,"line_end":96,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7078654,"byte_end":7078676,"line_start":97,"line_end":97,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7078681,"byte_end":7078684,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_read().is_some());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7078689,"byte_end":7078728,"line_start":99,"line_end":99,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7078733,"byte_end":7078738,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7078743,"byte_end":7078751,"line_start":101,"line_end":101,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7078756,"byte_end":7078763,"line_start":102,"line_end":102,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1253},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7081467,"byte_end":7081475,"line_start":181,"line_end":181,"column_start":12,"column_end":20},"name":"try_read","qualname":"<RwLock<T>>::try_read","value":"fn (&self) -> Option<RwLockReadGuard<'_, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire a read lock.","sig":null,"attributes":[{"value":"/ Attempts to acquire a read lock.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7080818,"byte_end":7080854,"line_start":158,"line_end":158,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7080859,"byte_end":7080862,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ If a read lock could not be acquired at this time, then [`None`] is returned. Otherwise, a","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7080867,"byte_end":7080961,"line_start":160,"line_end":160,"column_start":5,"column_end":99}},{"value":"/ guard is returned that releases the lock when dropped.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7080966,"byte_end":7081024,"line_start":161,"line_end":161,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7081029,"byte_end":7081032,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7081037,"byte_end":7081117,"line_start":163,"line_end":163,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7081122,"byte_end":7081125,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7081130,"byte_end":7081144,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7081149,"byte_end":7081152,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7081157,"byte_end":7081164,"line_start":167,"line_end":167,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7081169,"byte_end":7081208,"line_start":168,"line_end":168,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7081213,"byte_end":7081218,"line_start":169,"line_end":169,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::RwLock;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7081223,"byte_end":7081255,"line_start":170,"line_end":170,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7081260,"byte_end":7081263,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7081268,"byte_end":7081298,"line_start":172,"line_end":172,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7081303,"byte_end":7081306,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ let n = lock.read().await;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7081311,"byte_end":7081341,"line_start":174,"line_end":174,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7081346,"byte_end":7081368,"line_start":175,"line_end":175,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7081373,"byte_end":7081376,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_read().is_some());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7081381,"byte_end":7081420,"line_start":177,"line_end":177,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7081425,"byte_end":7081430,"line_start":178,"line_end":178,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7081435,"byte_end":7081443,"line_start":179,"line_end":179,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7081448,"byte_end":7081455,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1254},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7082749,"byte_end":7082754,"line_start":228,"line_end":228,"column_start":18,"column_end":23},"name":"write","qualname":"<RwLock<T>>::write","value":"fn (&self) -> RwLockWriteGuard<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a write lock.","sig":null,"attributes":[{"value":"/ Acquires a write lock.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7082304,"byte_end":7082330,"line_start":208,"line_end":208,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7082335,"byte_end":7082338,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Returns a guard that releases the lock when dropped.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7082343,"byte_end":7082399,"line_start":210,"line_end":210,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7082404,"byte_end":7082407,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7082412,"byte_end":7082426,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7082431,"byte_end":7082434,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7082439,"byte_end":7082446,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7082451,"byte_end":7082490,"line_start":215,"line_end":215,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7082495,"byte_end":7082500,"line_start":216,"line_end":216,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::RwLock;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7082505,"byte_end":7082537,"line_start":217,"line_end":217,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7082542,"byte_end":7082545,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7082550,"byte_end":7082580,"line_start":219,"line_end":219,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7082585,"byte_end":7082588,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ let mut n = lock.write().await;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7082593,"byte_end":7082628,"line_start":221,"line_end":221,"column_start":5,"column_end":40}},{"value":"/ *n = 2;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7082633,"byte_end":7082644,"line_start":222,"line_end":222,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7082649,"byte_end":7082652,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_read().is_none());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7082657,"byte_end":7082696,"line_start":224,"line_end":224,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7082701,"byte_end":7082706,"line_start":225,"line_end":225,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7082711,"byte_end":7082719,"line_start":226,"line_end":226,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7082724,"byte_end":7082731,"line_start":227,"line_end":227,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1270},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7085319,"byte_end":7085328,"line_start":303,"line_end":303,"column_start":12,"column_end":21},"name":"try_write","qualname":"<RwLock<T>>::try_write","value":"fn (&self) -> Option<RwLockWriteGuard<'_, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire a write lock.","sig":null,"attributes":[{"value":"/ Attempts to acquire a write lock.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7084667,"byte_end":7084704,"line_start":280,"line_end":280,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7084709,"byte_end":7084712,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ If a write lock could not be acquired at this time, then [`None`] is returned. Otherwise, a","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7084717,"byte_end":7084812,"line_start":282,"line_end":282,"column_start":5,"column_end":100}},{"value":"/ guard is returned that releases the lock when dropped.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7084817,"byte_end":7084875,"line_start":283,"line_end":283,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7084880,"byte_end":7084883,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7084888,"byte_end":7084968,"line_start":285,"line_end":285,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7084973,"byte_end":7084976,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7084981,"byte_end":7084995,"line_start":287,"line_end":287,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7085000,"byte_end":7085003,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7085008,"byte_end":7085015,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7085020,"byte_end":7085059,"line_start":290,"line_end":290,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7085064,"byte_end":7085069,"line_start":291,"line_end":291,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::RwLock;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7085074,"byte_end":7085106,"line_start":292,"line_end":292,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7085111,"byte_end":7085114,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7085119,"byte_end":7085149,"line_start":294,"line_end":294,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7085154,"byte_end":7085157,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ let n = lock.read().await;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7085162,"byte_end":7085192,"line_start":296,"line_end":296,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7085197,"byte_end":7085219,"line_start":297,"line_end":297,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7085224,"byte_end":7085227,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_write().is_none());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7085232,"byte_end":7085272,"line_start":299,"line_end":299,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7085277,"byte_end":7085282,"line_start":300,"line_end":300,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7085287,"byte_end":7085295,"line_start":301,"line_end":301,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7085300,"byte_end":7085307,"line_start":302,"line_end":302,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1271},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7085796,"byte_end":7085806,"line_start":321,"line_end":321,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<RwLock<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the lock, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes the lock, returning the underlying data.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7085548,"byte_end":7085601,"line_start":311,"line_end":311,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7085606,"byte_end":7085609,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7085614,"byte_end":7085628,"line_start":313,"line_end":313,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7085633,"byte_end":7085636,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7085641,"byte_end":7085648,"line_start":315,"line_end":315,"column_start":5,"column_end":12}},{"value":"/ use async_std::sync::RwLock;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7085653,"byte_end":7085685,"line_start":316,"line_end":316,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7085690,"byte_end":7085693,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(10);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7085698,"byte_end":7085729,"line_start":318,"line_end":318,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(lock.into_inner(), 10);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7085734,"byte_end":7085772,"line_start":319,"line_end":319,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7085777,"byte_end":7085784,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1272},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7086396,"byte_end":7086403,"line_start":343,"line_end":343,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<RwLock<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7085878,"byte_end":7085933,"line_start":325,"line_end":325,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7085938,"byte_end":7085941,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the lock mutably, no actual locking takes place -- the mutable","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7085946,"byte_end":7086036,"line_start":327,"line_end":327,"column_start":5,"column_end":95}},{"value":"/ borrow statically guarantees no locks exist.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7086041,"byte_end":7086089,"line_start":328,"line_end":328,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7086094,"byte_end":7086097,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7086102,"byte_end":7086116,"line_start":330,"line_end":330,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7086121,"byte_end":7086124,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7086129,"byte_end":7086136,"line_start":332,"line_end":332,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7086141,"byte_end":7086180,"line_start":333,"line_end":333,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7086185,"byte_end":7086190,"line_start":334,"line_end":334,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::RwLock;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7086195,"byte_end":7086227,"line_start":335,"line_end":335,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7086232,"byte_end":7086235,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ let mut lock = RwLock::new(0);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7086240,"byte_end":7086274,"line_start":337,"line_end":337,"column_start":5,"column_end":39}},{"value":"/ *lock.get_mut() = 10;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7086279,"byte_end":7086304,"line_start":338,"line_end":338,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(*lock.write().await, 10);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7086309,"byte_end":7086349,"line_start":339,"line_end":339,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7086354,"byte_end":7086359,"line_start":340,"line_end":340,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7086364,"byte_end":7086372,"line_start":341,"line_end":341,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7086377,"byte_end":7086384,"line_start":342,"line_end":342,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1286},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7087305,"byte_end":7087320,"line_start":377,"line_end":377,"column_start":12,"column_end":27},"name":"RwLockReadGuard","qualname":"::sync::rwlock::RwLockReadGuard","value":"","parent":null,"children":[],"decl_id":null,"docs":" A guard that releases the read lock when dropped.\n","sig":null,"attributes":[{"value":"/ A guard that releases the read lock when dropped.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7087240,"byte_end":7087293,"line_start":376,"line_end":376,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1308},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7088403,"byte_end":7088419,"line_start":414,"line_end":414,"column_start":12,"column_end":28},"name":"RwLockWriteGuard","qualname":"::sync::rwlock::RwLockWriteGuard","value":"","parent":null,"children":[],"decl_id":null,"docs":" A guard that releases the write lock when dropped.\n","sig":null,"attributes":[{"value":"/ A guard that releases the write lock when dropped.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7088337,"byte_end":7088391,"line_start":413,"line_end":413,"column_start":1,"column_end":55}}]},{"kind":"Mod","id":{"krate":0,"index":1375},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":2833},{"krate":0,"index":2837},{"krate":0,"index":2838},{"krate":0,"index":2839},{"krate":0,"index":2841},{"krate":0,"index":2856},{"krate":0,"index":2857},{"krate":0,"index":2858},{"krate":0,"index":2859},{"krate":0,"index":2860},{"krate":0,"index":2861},{"krate":0,"index":2862},{"krate":0,"index":2863},{"krate":0,"index":2864},{"krate":0,"index":2867},{"krate":0,"index":2868},{"krate":0,"index":2869},{"krate":0,"index":2902},{"krate":0,"index":2927},{"krate":0,"index":2931},{"krate":0,"index":2991},{"krate":0,"index":3010},{"krate":0,"index":3017},{"krate":0,"index":3025},{"krate":0,"index":3055},{"krate":0,"index":3101},{"krate":0,"index":3111},{"krate":0,"index":3148}],"decl_id":null,"docs":" Types and traits for working with asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/utils.rs","byte_start":13436,"byte_end":13459,"line_start":157,"line_end":157,"column_start":13,"column_end":36}},{"value":"! Types and traits for working with asynchronous tasks.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7097012,"byte_end":7097069,"line_start":1,"line_end":1,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7097070,"byte_end":7097073,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module is similar to [`std::thread`], except it uses asynchronous tasks in place of","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7097074,"byte_end":7097166,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"! threads.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7097167,"byte_end":7097179,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7097180,"byte_end":7097183,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! [`std::thread`]: https://doc.rust-lang.org/std/thread","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7097184,"byte_end":7097241,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7097242,"byte_end":7097245,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! ## The task model","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7097246,"byte_end":7097267,"line_start":8,"line_end":8,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7097268,"byte_end":7097271,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! An executing asynchronous Rust program consists of a collection of native OS threads, on top of","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7097272,"byte_end":7097371,"line_start":10,"line_end":10,"column_start":1,"column_end":100}},{"value":"! which multiple stackless coroutines are multiplexed. We refer to these as \"tasks\".  Tasks can","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7097372,"byte_end":7097469,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"! be named, and provide some built-in support for synchronization.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7097470,"byte_end":7097538,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7097539,"byte_end":7097542,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! Communication between tasks can be done through channels, Rust's message-passing types, along","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7097543,"byte_end":7097640,"line_start":14,"line_end":14,"column_start":1,"column_end":98}},{"value":"! with [other forms of tasks synchronization](../sync/index.html) and shared-memory data","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7097641,"byte_end":7097731,"line_start":15,"line_end":15,"column_start":1,"column_end":91}},{"value":"! structures. In particular, types that are guaranteed to be threadsafe are easily shared between","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7097732,"byte_end":7097831,"line_start":16,"line_end":16,"column_start":1,"column_end":100}},{"value":"! tasks using the atomically-reference-counted container, [`Arc`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7097832,"byte_end":7097900,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7097901,"byte_end":7097904,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! Fatal logic errors in Rust cause *thread panic*, during which a thread will unwind the stack,","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7097905,"byte_end":7098002,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"! running destructors and freeing owned resources. If a panic occurs inside a task, there is no","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7098003,"byte_end":7098100,"line_start":20,"line_end":20,"column_start":1,"column_end":98}},{"value":"! meaningful way of recovering, so the panic will propagate through any thread boundaries all the","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7098101,"byte_end":7098200,"line_start":21,"line_end":21,"column_start":1,"column_end":100}},{"value":"! way to the root task. This is also known as a \"panic = abort\" model.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7098201,"byte_end":7098273,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7098274,"byte_end":7098277,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! ## Spawning a task","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7098278,"byte_end":7098300,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7098301,"byte_end":7098304,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! A new task can be spawned using the [`task::spawn`][`spawn`] function:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7098305,"byte_end":7098379,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7098380,"byte_end":7098383,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7098384,"byte_end":7098397,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"! use async_std::task;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7098398,"byte_end":7098422,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7098423,"byte_end":7098426,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! task::spawn(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7098427,"byte_end":7098450,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"!     // some work here","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7098451,"byte_end":7098476,"line_start":32,"line_end":32,"column_start":1,"column_end":26}},{"value":"! });","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7098477,"byte_end":7098484,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7098485,"byte_end":7098492,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7098493,"byte_end":7098496,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! In this example, the spawned task is \"detached\" from the current task. This means that it can","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7098497,"byte_end":7098594,"line_start":36,"line_end":36,"column_start":1,"column_end":98}},{"value":"! outlive its parent (the task that spawned it), unless this parent is the root task.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7098595,"byte_end":7098682,"line_start":37,"line_end":37,"column_start":1,"column_end":88}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7098683,"byte_end":7098686,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! The root task can also wait on the completion of the child task; a call to [`spawn`] produces a","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7098687,"byte_end":7098786,"line_start":39,"line_end":39,"column_start":1,"column_end":100}},{"value":"! [`JoinHandle`], which implements `Future` and can be `await`ed:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7098787,"byte_end":7098854,"line_start":40,"line_end":40,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7098855,"byte_end":7098858,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7098859,"byte_end":7098866,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"! use async_std::task;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7098867,"byte_end":7098891,"line_start":43,"line_end":43,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7098892,"byte_end":7098895,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! # async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7098896,"byte_end":7098935,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"! #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7098936,"byte_end":7098941,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"! let child = task::spawn(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7098942,"byte_end":7098977,"line_start":47,"line_end":47,"column_start":1,"column_end":36}},{"value":"!     // some work here","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7098978,"byte_end":7099003,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"! });","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7099004,"byte_end":7099011,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"! // some work here","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7099012,"byte_end":7099033,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"! let res = child.await;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7099034,"byte_end":7099060,"line_start":51,"line_end":51,"column_start":1,"column_end":27}},{"value":"! #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7099061,"byte_end":7099066,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"! # })","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7099067,"byte_end":7099075,"line_start":53,"line_end":53,"column_start":1,"column_end":9}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7099076,"byte_end":7099083,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7099084,"byte_end":7099087,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! The `await` operator returns the final value produced by the child task.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7099088,"byte_end":7099164,"line_start":56,"line_end":56,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7099165,"byte_end":7099168,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"! ## Configuring tasks","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7099169,"byte_end":7099193,"line_start":58,"line_end":58,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7099194,"byte_end":7099197,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"! A new task can be configured before it is spawned via the [`Builder`] type,","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7099198,"byte_end":7099277,"line_start":60,"line_end":60,"column_start":1,"column_end":80}},{"value":"! which currently allows you to set the name for the child task:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7099278,"byte_end":7099344,"line_start":61,"line_end":61,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7099345,"byte_end":7099348,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7099349,"byte_end":7099356,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"! # #![allow(unused_must_use)]","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7099357,"byte_end":7099389,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"! use async_std::task;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7099390,"byte_end":7099414,"line_start":65,"line_end":65,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7099415,"byte_end":7099418,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"! # async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7099419,"byte_end":7099458,"line_start":67,"line_end":67,"column_start":1,"column_end":40}},{"value":"! #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7099459,"byte_end":7099464,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"! task::Builder::new().name(\"child1\".to_string()).spawn(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7099465,"byte_end":7099530,"line_start":69,"line_end":69,"column_start":1,"column_end":66}},{"value":"!     println!(\"Hello, world!\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7099531,"byte_end":7099565,"line_start":70,"line_end":70,"column_start":1,"column_end":35}},{"value":"! });","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7099566,"byte_end":7099573,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"! #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7099574,"byte_end":7099579,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"! # })","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7099580,"byte_end":7099588,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7099589,"byte_end":7099596,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7099597,"byte_end":7099600,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"! ## The `Task` type","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7099601,"byte_end":7099623,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7099624,"byte_end":7099627,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"! Tasks are represented via the [`Task`] type, which you can get in one of","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7099628,"byte_end":7099704,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"! two ways:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7099705,"byte_end":7099718,"line_start":79,"line_end":79,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7099719,"byte_end":7099722,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! * By spawning a new task, e.g., using the [`task::spawn`][`spawn`]","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7099723,"byte_end":7099793,"line_start":81,"line_end":81,"column_start":1,"column_end":71}},{"value":"!   function, and calling [`task`][`JoinHandle::task`] on the [`JoinHandle`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7099794,"byte_end":7099873,"line_start":82,"line_end":82,"column_start":1,"column_end":80}},{"value":"! * By requesting the current task, using the [`task::current`] function.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7099874,"byte_end":7099949,"line_start":83,"line_end":83,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7099950,"byte_end":7099953,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"! ## Task-local storage","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7099954,"byte_end":7099979,"line_start":85,"line_end":85,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7099980,"byte_end":7099983,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"! This module also provides an implementation of task-local storage for Rust","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7099984,"byte_end":7100062,"line_start":87,"line_end":87,"column_start":1,"column_end":79}},{"value":"! programs. Task-local storage is a method of storing data into a global","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7100063,"byte_end":7100137,"line_start":88,"line_end":88,"column_start":1,"column_end":75}},{"value":"! variable that each task in the program will have its own copy of.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7100138,"byte_end":7100207,"line_start":89,"line_end":89,"column_start":1,"column_end":70}},{"value":"! Tasks do not share this data, so accesses do not need to be synchronized.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7100208,"byte_end":7100285,"line_start":90,"line_end":90,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7100286,"byte_end":7100289,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"! A task-local key owns the value it contains and will destroy the value when the","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7100290,"byte_end":7100373,"line_start":92,"line_end":92,"column_start":1,"column_end":84}},{"value":"! task exits. It is created with the [`task_local!`] macro and can contain any","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7100374,"byte_end":7100454,"line_start":93,"line_end":93,"column_start":1,"column_end":81}},{"value":"! value that is `'static` (no borrowed pointers). It provides an accessor function,","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7100455,"byte_end":7100540,"line_start":94,"line_end":94,"column_start":1,"column_end":86}},{"value":"! [`with`], that yields a shared reference to the value to the specified","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7100541,"byte_end":7100615,"line_start":95,"line_end":95,"column_start":1,"column_end":75}},{"value":"! closure. Task-local keys allow only shared access to values, as there would be no","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7100616,"byte_end":7100701,"line_start":96,"line_end":96,"column_start":1,"column_end":86}},{"value":"! way to guarantee uniqueness if mutable borrows were allowed.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7100702,"byte_end":7100766,"line_start":97,"line_end":97,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7100767,"byte_end":7100770,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"! ## Naming tasks","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7100771,"byte_end":7100790,"line_start":99,"line_end":99,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7100791,"byte_end":7100794,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"! Tasks are able to have associated names for identification purposes. By default, spawned","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7100795,"byte_end":7100887,"line_start":101,"line_end":101,"column_start":1,"column_end":93}},{"value":"! tasks are unnamed. To specify a name for a task, build the task with [`Builder`] and pass","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7100888,"byte_end":7100981,"line_start":102,"line_end":102,"column_start":1,"column_end":94}},{"value":"! the desired task name to [`Builder::name`]. To retrieve the task name from within the","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7100982,"byte_end":7101071,"line_start":103,"line_end":103,"column_start":1,"column_end":90}},{"value":"! task, use [`Task::name`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7101072,"byte_end":7101101,"line_start":104,"line_end":104,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7101102,"byte_end":7101105,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"! [`Arc`]: ../gsync/struct.Arc.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7101106,"byte_end":7101143,"line_start":106,"line_end":106,"column_start":1,"column_end":38}},{"value":"! [`spawn`]: fn.spawn.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7101144,"byte_end":7101172,"line_start":107,"line_end":107,"column_start":1,"column_end":29}},{"value":"! [`JoinHandle`]: struct.JoinHandle.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7101173,"byte_end":7101215,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"! [`JoinHandle::task`]: struct.JoinHandle.html#method.task","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7101216,"byte_end":7101276,"line_start":109,"line_end":109,"column_start":1,"column_end":61}},{"value":"! [`join`]: struct.JoinHandle.html#method.join","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7101277,"byte_end":7101325,"line_start":110,"line_end":110,"column_start":1,"column_end":49}},{"value":"! [`panic!`]: https://doc.rust-lang.org/std/macro.panic.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7101326,"byte_end":7101388,"line_start":111,"line_end":111,"column_start":1,"column_end":63}},{"value":"! [`Builder`]: struct.Builder.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7101389,"byte_end":7101425,"line_start":112,"line_end":112,"column_start":1,"column_end":37}},{"value":"! [`Builder::name`]: struct.Builder.html#method.name","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7101426,"byte_end":7101480,"line_start":113,"line_end":113,"column_start":1,"column_end":55}},{"value":"! [`task::current`]: fn.current.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7101481,"byte_end":7101519,"line_start":114,"line_end":114,"column_start":1,"column_end":39}},{"value":"! [`Task`]: struct.Task.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7101520,"byte_end":7101550,"line_start":115,"line_end":115,"column_start":1,"column_end":31}},{"value":"! [`Task::name`]: struct.Task.html#method.name","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7101551,"byte_end":7101599,"line_start":116,"line_end":116,"column_start":1,"column_end":49}},{"value":"! [`task_local!`]: ../macro.task_local.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7101600,"byte_end":7101645,"line_start":117,"line_end":117,"column_start":1,"column_end":46}},{"value":"! [`with`]: struct.LocalKey.html#method.with","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/mod.rs","byte_start":7101646,"byte_end":7101692,"line_start":118,"line_end":118,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":2847},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8233898,"byte_end":8233907,"line_start":30,"line_end":30,"column_start":14,"column_end":23},"name":"yield_now","qualname":"::task::yield_now::yield_now","value":"fn () -> ()","parent":null,"children":[],"decl_id":null,"docs":" Cooperatively gives up a timeslice to the task scheduler.","sig":null,"attributes":[{"value":"/ Cooperatively gives up a timeslice to the task scheduler.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8233295,"byte_end":8233356,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8233357,"byte_end":8233360,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Calling this function will move the currently executing future to the back","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8233361,"byte_end":8233439,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ of the execution queue, making room for other futures to execute. This is","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8233440,"byte_end":8233517,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ especially useful after running CPU-intensive operations inside a future.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8233518,"byte_end":8233595,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8233596,"byte_end":8233599,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ See also [`task::spawn_blocking`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8233600,"byte_end":8233638,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8233639,"byte_end":8233642,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: fn.spawn_blocking.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8233643,"byte_end":8233695,"line_start":14,"line_end":14,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8233696,"byte_end":8233699,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8233700,"byte_end":8233714,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8233715,"byte_end":8233718,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8233719,"byte_end":8233735,"line_start":18,"line_end":18,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8233736,"byte_end":8233739,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8233740,"byte_end":8233747,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8233748,"byte_end":8233787,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8233788,"byte_end":8233793,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8233794,"byte_end":8233818,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8233819,"byte_end":8233822,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ task::yield_now().await;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8233823,"byte_end":8233851,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8233852,"byte_end":8233857,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8233858,"byte_end":8233866,"line_start":27,"line_end":27,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8233867,"byte_end":8233874,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8233875,"byte_end":8233884,"line_start":29,"line_end":29,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2887},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8235449,"byte_end":8235457,"line_start":36,"line_end":36,"column_start":8,"column_end":16},"name":"block_on","qualname":"::task::block_on::block_on","value":"fn <F, T> (future: F) -> T","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task and blocks the current thread on its result.","sig":null,"attributes":[{"value":"/ Spawns a task and blocks the current thread on its result.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8234800,"byte_end":8234862,"line_start":13,"line_end":13,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8234863,"byte_end":8234866,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Calling this function is similar to [spawning] a thread and immediately [joining] it, except an","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8234867,"byte_end":8234966,"line_start":15,"line_end":15,"column_start":1,"column_end":100}},{"value":"/ asynchronous task will be spawned.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8234967,"byte_end":8235005,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8235006,"byte_end":8235009,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ See also: [`task::spawn_blocking`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8235010,"byte_end":8235049,"line_start":18,"line_end":18,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8235050,"byte_end":8235053,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: fn.spawn_blocking.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8235054,"byte_end":8235106,"line_start":20,"line_end":20,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8235107,"byte_end":8235110,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [spawning]: https://doc.rust-lang.org/std/thread/fn.spawn.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8235111,"byte_end":8235177,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/ [joining]: https://doc.rust-lang.org/std/thread/struct.JoinHandle.html#method.join","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8235178,"byte_end":8235264,"line_start":23,"line_end":23,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8235265,"byte_end":8235268,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8235269,"byte_end":8235283,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8235284,"byte_end":8235287,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8235288,"byte_end":8235301,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ use async_std::task;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8235302,"byte_end":8235326,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8235327,"byte_end":8235330,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8235331,"byte_end":8235346,"line_start":30,"line_end":30,"column_start":1,"column_end":16}},{"value":"/     task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8235347,"byte_end":8235377,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/         println!(\"Hello, world!\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8235378,"byte_end":8235416,"line_start":32,"line_end":32,"column_start":1,"column_end":39}},{"value":"/     })","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8235417,"byte_end":8235427,"line_start":33,"line_end":33,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8235428,"byte_end":8235433,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/block_on.rs","byte_start":8235434,"byte_end":8235441,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3173},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/builder.rs","byte_start":8239038,"byte_end":8239045,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Builder","qualname":"::task::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":3174}],"decl_id":null,"docs":" Task builder that configures the settings of a new task.\n","sig":null,"attributes":[{"value":"/ Task builder that configures the settings of a new task.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/builder.rs","byte_start":8238940,"byte_end":8239000,"line_start":10,"line_end":10,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2913},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/builder.rs","byte_start":8239159,"byte_end":8239162,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"fn () -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new builder.\n","sig":null,"attributes":[{"value":"/ Creates a new builder.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/builder.rs","byte_start":8239107,"byte_end":8239133,"line_start":17,"line_end":17,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/builder.rs","byte_start":8239138,"byte_end":8239147,"line_start":18,"line_end":18,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2914},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/builder.rs","byte_start":8239282,"byte_end":8239286,"line_start":25,"line_end":25,"column_start":12,"column_end":16},"name":"name","qualname":"<Builder>::name","value":"fn (mut self, name: String) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Configures the name of the task.\n","sig":null,"attributes":[{"value":"/ Configures the name of the task.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/builder.rs","byte_start":8239220,"byte_end":8239256,"line_start":23,"line_end":23,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/builder.rs","byte_start":8239261,"byte_end":8239270,"line_start":24,"line_end":24,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2915},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/builder.rs","byte_start":8239439,"byte_end":8239444,"line_start":31,"line_end":31,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Builder>::spawn","value":"fn <F, T> (self, future: F) -> io::Result<JoinHandle<T>>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task with the configured settings.\n","sig":null,"attributes":[{"value":"/ Spawns a task with the configured settings.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/builder.rs","byte_start":8239380,"byte_end":8239427,"line_start":30,"line_end":30,"column_start":5,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":2929},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8241599,"byte_end":8241606,"line_start":25,"line_end":25,"column_start":8,"column_end":15},"name":"current","qualname":"::task::current::current","value":"fn () -> Task","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the current task.","sig":null,"attributes":[{"value":"/ Returns a handle to the current task.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8241069,"byte_end":8241110,"line_start":3,"line_end":3,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8241111,"byte_end":8241114,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8241115,"byte_end":8241127,"line_start":5,"line_end":5,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8241128,"byte_end":8241131,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function will panic if not called within the context of a task created by [`block_on`],","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8241132,"byte_end":8241228,"line_start":7,"line_end":7,"column_start":1,"column_end":97}},{"value":"/ [`spawn`], or [`Builder::spawn`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8241229,"byte_end":8241266,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8241267,"byte_end":8241270,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`block_on`]: fn.block_on.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8241271,"byte_end":8241305,"line_start":10,"line_end":10,"column_start":1,"column_end":35}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8241306,"byte_end":8241334,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"/ [`Builder::spawn`]: struct.Builder.html#method.spawn","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8241335,"byte_end":8241391,"line_start":12,"line_end":12,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8241392,"byte_end":8241395,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8241396,"byte_end":8241410,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8241411,"byte_end":8241414,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8241415,"byte_end":8241422,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8241423,"byte_end":8241462,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8241463,"byte_end":8241468,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8241469,"byte_end":8241493,"line_start":19,"line_end":19,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8241494,"byte_end":8241497,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ println!(\"The name of this task is {:?}\", task::current().name());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8241498,"byte_end":8241568,"line_start":21,"line_end":21,"column_start":1,"column_end":71}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8241569,"byte_end":8241574,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8241575,"byte_end":8241583,"line_start":23,"line_end":23,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/current.rs","byte_start":8241584,"byte_end":8241591,"line_start":24,"line_end":24,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3203},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8249843,"byte_end":8249853,"line_start":15,"line_end":15,"column_start":12,"column_end":22},"name":"JoinHandle","qualname":"::task::join_handle::JoinHandle","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle that awaits the result of a task.","sig":null,"attributes":[{"value":"/ A handle that awaits the result of a task.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8249552,"byte_end":8249598,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8249599,"byte_end":8249602,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Dropping a [`JoinHandle`] will detach the task, meaning that there is no longer","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8249603,"byte_end":8249686,"line_start":8,"line_end":8,"column_start":1,"column_end":84}},{"value":"/ a handle to the task and no way to `join` on it.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8249687,"byte_end":8249739,"line_start":9,"line_end":9,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8249740,"byte_end":8249743,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Created when a task is [spawned].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8249744,"byte_end":8249781,"line_start":11,"line_end":11,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8249782,"byte_end":8249785,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [spawned]: fn.spawn.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8249786,"byte_end":8249814,"line_start":13,"line_end":13,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3005},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8250490,"byte_end":8250494,"line_start":41,"line_end":41,"column_start":12,"column_end":16},"name":"task","qualname":"<JoinHandle<T>>::task","value":"fn (&self) -> &Task","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the underlying task.","sig":null,"attributes":[{"value":"/ Returns a handle to the underlying task.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8250153,"byte_end":8250197,"line_start":26,"line_end":26,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8250202,"byte_end":8250205,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8250210,"byte_end":8250224,"line_start":28,"line_end":28,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8250229,"byte_end":8250232,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8250237,"byte_end":8250244,"line_start":30,"line_end":30,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8250249,"byte_end":8250288,"line_start":31,"line_end":31,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8250293,"byte_end":8250298,"line_start":32,"line_end":32,"column_start":5,"column_end":10}},{"value":"/ use async_std::task;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8250303,"byte_end":8250327,"line_start":33,"line_end":33,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8250332,"byte_end":8250335,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ let handle = task::spawn(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8250340,"byte_end":8250376,"line_start":35,"line_end":35,"column_start":5,"column_end":41}},{"value":"/     1 + 2","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8250381,"byte_end":8250394,"line_start":36,"line_end":36,"column_start":5,"column_end":18}},{"value":"/ });","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8250399,"byte_end":8250406,"line_start":37,"line_end":37,"column_start":5,"column_end":12}},{"value":"/ println!(\"id = {}\", handle.task().id());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8250411,"byte_end":8250455,"line_start":38,"line_end":38,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8250460,"byte_end":8250465,"line_start":39,"line_end":39,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8250470,"byte_end":8250478,"line_start":40,"line_end":40,"column_start":5,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":3014},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8251668,"byte_end":8251673,"line_start":31,"line_end":31,"column_start":14,"column_end":19},"name":"sleep","qualname":"::task::sleep::sleep","value":"fn (dur: Duration) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sleeps for the specified amount of time.","sig":null,"attributes":[{"value":"/ Sleeps for the specified amount of time.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8251054,"byte_end":8251098,"line_start":6,"line_end":6,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8251099,"byte_end":8251102,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function might sleep for slightly longer than the specified duration but never less.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8251103,"byte_end":8251196,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8251197,"byte_end":8251200,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::thread::sleep`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8251201,"byte_end":8251265,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8251266,"byte_end":8251269,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`std::thread::sleep`]: https://doc.rust-lang.org/std/thread/fn.sleep.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8251270,"byte_end":8251348,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8251349,"byte_end":8251352,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ See also: [`stream::interval`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8251353,"byte_end":8251388,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8251389,"byte_end":8251392,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`stream::interval`]: ../stream/fn.interval.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8251393,"byte_end":8251445,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8251446,"byte_end":8251449,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8251450,"byte_end":8251464,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8251465,"byte_end":8251468,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8251469,"byte_end":8251476,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8251477,"byte_end":8251516,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8251517,"byte_end":8251522,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8251523,"byte_end":8251551,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8251552,"byte_end":8251555,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ use async_std::task;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8251556,"byte_end":8251580,"line_start":25,"line_end":25,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8251581,"byte_end":8251584,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ task::sleep(Duration::from_secs(1)).await;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8251585,"byte_end":8251631,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8251632,"byte_end":8251637,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8251638,"byte_end":8251646,"line_start":29,"line_end":29,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/sleep.rs","byte_start":8251647,"byte_end":8251654,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3022},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8252291,"byte_end":8252296,"line_start":26,"line_end":26,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task::spawn::spawn","value":"fn <F, T> (future: F) -> JoinHandle<T>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task.","sig":null,"attributes":[{"value":"/ Spawns a task.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8251865,"byte_end":8251883,"line_start":5,"line_end":5,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8251884,"byte_end":8251887,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is similar to [`std::thread::spawn`], except it spawns an asynchronous task.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8251888,"byte_end":8251982,"line_start":7,"line_end":7,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8251983,"byte_end":8251986,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`std::thread`]: https://doc.rust-lang.org/std/thread/fn.spawn.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8251987,"byte_end":8252058,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8252059,"byte_end":8252062,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8252063,"byte_end":8252077,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8252078,"byte_end":8252081,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8252082,"byte_end":8252089,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8252090,"byte_end":8252129,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8252130,"byte_end":8252135,"line_start":15,"line_end":15,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8252136,"byte_end":8252160,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8252161,"byte_end":8252164,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let handle = task::spawn(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8252165,"byte_end":8252201,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/     1 + 2","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8252202,"byte_end":8252215,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8252216,"byte_end":8252223,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8252224,"byte_end":8252227,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(handle.await, 3);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8252228,"byte_end":8252260,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8252261,"byte_end":8252266,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8252267,"byte_end":8252275,"line_start":24,"line_end":24,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/spawn.rs","byte_start":8252276,"byte_end":8252283,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3074},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8257144,"byte_end":8257148,"line_start":40,"line_end":40,"column_start":12,"column_end":16},"name":"Task","qualname":"::task::task::Task","value":"Task {  }","parent":null,"children":[{"krate":0,"index":3075}],"decl_id":null,"docs":" A handle to a task.\n","sig":null,"attributes":[{"value":"/ A handle to a task.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8257109,"byte_end":8257132,"line_start":39,"line_end":39,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":3080},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8258055,"byte_end":8258057,"line_start":70,"line_end":70,"column_start":12,"column_end":14},"name":"id","qualname":"<Task>::id","value":"fn (&self) -> TaskId","parent":null,"children":[],"decl_id":null,"docs":" Gets the task's unique identifier.\n","sig":null,"attributes":[{"value":"/ Gets the task's unique identifier.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8257991,"byte_end":8258029,"line_start":68,"line_end":68,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8258034,"byte_end":8258043,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3081},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8258302,"byte_end":8258306,"line_start":79,"line_end":79,"column_start":12,"column_end":16},"name":"name","qualname":"<Task>::name","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of this task.","sig":null,"attributes":[{"value":"/ Returns the name of this task.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8258112,"byte_end":8258146,"line_start":74,"line_end":74,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8258151,"byte_end":8258154,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ The name is configured by [`Builder::name`] before spawning.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8258159,"byte_end":8258223,"line_start":76,"line_end":76,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8258228,"byte_end":8258231,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ [`Builder::name`]: struct.Builder.html#method.name","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8258236,"byte_end":8258290,"line_start":78,"line_end":78,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":3223},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_id.rs","byte_start":8261656,"byte_end":8261662,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"TaskId","qualname":"::task::task_id::TaskId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A unique identifier for a task.","sig":null,"attributes":[{"value":"/ A unique identifier for a task.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_id.rs","byte_start":8261403,"byte_end":8261438,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_id.rs","byte_start":8261439,"byte_end":8261442,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_id.rs","byte_start":8261443,"byte_end":8261457,"line_start":6,"line_end":6,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_id.rs","byte_start":8261458,"byte_end":8261461,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_id.rs","byte_start":8261462,"byte_end":8261469,"line_start":8,"line_end":8,"column_start":1,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_id.rs","byte_start":8261470,"byte_end":8261494,"line_start":9,"line_end":9,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_id.rs","byte_start":8261495,"byte_end":8261498,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_id.rs","byte_start":8261499,"byte_end":8261525,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"/     println!(\"id = {:?}\", task::current().id());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_id.rs","byte_start":8261526,"byte_end":8261578,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"/ })","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_id.rs","byte_start":8261579,"byte_end":8261585,"line_start":13,"line_end":13,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_id.rs","byte_start":8261586,"byte_end":8261593,"line_start":14,"line_end":14,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3241},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8262487,"byte_end":8262495,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"LocalKey","qualname":"::task::task_local::LocalKey","value":"LocalKey { __init, __key }","parent":null,"children":[{"krate":0,"index":3243},{"krate":0,"index":3244}],"decl_id":null,"docs":" The key for accessing a task-local value.","sig":null,"attributes":[{"value":"/ The key for accessing a task-local value.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8262301,"byte_end":8262346,"line_start":8,"line_end":8,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8262347,"byte_end":8262350,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Every task-local value is lazily initialized on first access and destroyed when the task","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8262351,"byte_end":8262443,"line_start":10,"line_end":10,"column_start":1,"column_end":93}},{"value":"/ completes.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8262444,"byte_end":8262458,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":3243},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8262544,"byte_end":8262550,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"__init","qualname":"::task::task_local::LocalKey::__init","value":"fn() -> T","parent":{"krate":0,"index":3241},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3244},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8262591,"byte_end":8262596,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"name":"__key","qualname":"::task::task_local::LocalKey::__key","value":"std::sync::atomic::AtomicU32","parent":{"krate":0,"index":3241},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3121},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8263618,"byte_end":8263622,"line_start":55,"line_end":55,"column_start":12,"column_end":16},"name":"with","qualname":"<LocalKey<T>>::with","value":"fn <F, R> (&'static self, f: F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the task-local value with this key.","sig":null,"attributes":[{"value":"/ Gets a reference to the task-local value with this key.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8262654,"byte_end":8262713,"line_start":22,"line_end":22,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8262718,"byte_end":8262721,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ The passed closure receives a reference to the task-local value.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8262726,"byte_end":8262794,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8262799,"byte_end":8262802,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ The task-local value will be lazily initialized if this task has not accessed it before.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8262807,"byte_end":8262899,"line_start":26,"line_end":26,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8262904,"byte_end":8262907,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8262912,"byte_end":8262924,"line_start":28,"line_end":28,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8262929,"byte_end":8262932,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a task created by","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8262937,"byte_end":8263019,"line_start":30,"line_end":30,"column_start":5,"column_end":87}},{"value":"/ [`block_on`], [`spawn`], or [`Builder::spawn`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8263024,"byte_end":8263075,"line_start":31,"line_end":31,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8263080,"byte_end":8263083,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ [`block_on`]: fn.block_on.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8263088,"byte_end":8263122,"line_start":33,"line_end":33,"column_start":5,"column_end":39}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8263127,"byte_end":8263155,"line_start":34,"line_end":34,"column_start":5,"column_end":33}},{"value":"/ [`Builder::spawn`]: struct.Builder.html#method.spawn","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8263160,"byte_end":8263216,"line_start":35,"line_end":35,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8263221,"byte_end":8263224,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8263229,"byte_end":8263243,"line_start":37,"line_end":37,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8263248,"byte_end":8263251,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8263256,"byte_end":8263263,"line_start":39,"line_end":39,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8263268,"byte_end":8263273,"line_start":40,"line_end":40,"column_start":5,"column_end":10}},{"value":"/ use std::cell::Cell;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8263278,"byte_end":8263302,"line_start":41,"line_end":41,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8263307,"byte_end":8263310,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8263315,"byte_end":8263339,"line_start":43,"line_end":43,"column_start":5,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8263344,"byte_end":8263374,"line_start":44,"line_end":44,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8263379,"byte_end":8263382,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ task_local! {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8263387,"byte_end":8263404,"line_start":46,"line_end":46,"column_start":5,"column_end":22}},{"value":"/     static NUMBER: Cell<u32> = Cell::new(5);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8263409,"byte_end":8263457,"line_start":47,"line_end":47,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8263462,"byte_end":8263467,"line_start":48,"line_end":48,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8263472,"byte_end":8263475,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8263480,"byte_end":8263506,"line_start":50,"line_end":50,"column_start":5,"column_end":31}},{"value":"/     let v = NUMBER.with(|c| c.get());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8263511,"byte_end":8263552,"line_start":51,"line_end":51,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(v, 5);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8263557,"byte_end":8263582,"line_start":52,"line_end":52,"column_start":5,"column_end":30}},{"value":"/ });","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8263587,"byte_end":8263594,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8263599,"byte_end":8263606,"line_start":54,"line_end":54,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3124},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8264908,"byte_end":8264916,"line_start":97,"line_end":97,"column_start":12,"column_end":20},"name":"try_with","qualname":"<LocalKey<T>>::try_with","value":"fn <F, R> (&'static self, f: F) -> Result<R, AccessError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to get a reference to the task-local value with this key.","sig":null,"attributes":[{"value":"/ Attempts to get a reference to the task-local value with this key.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8263812,"byte_end":8263882,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8263887,"byte_end":8263890,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The passed closure receives a reference to the task-local value.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8263895,"byte_end":8263963,"line_start":65,"line_end":65,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8263968,"byte_end":8263971,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ The task-local value will be lazily initialized if this task has not accessed it before.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8263976,"byte_end":8264068,"line_start":67,"line_end":67,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8264073,"byte_end":8264076,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This function returns an error if not called within the context of a task created by","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8264081,"byte_end":8264169,"line_start":69,"line_end":69,"column_start":5,"column_end":93}},{"value":"/ [`block_on`], [`spawn`], or [`Builder::spawn`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8264174,"byte_end":8264225,"line_start":70,"line_end":70,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8264230,"byte_end":8264233,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ [`block_on`]: fn.block_on.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8264238,"byte_end":8264272,"line_start":72,"line_end":72,"column_start":5,"column_end":39}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8264277,"byte_end":8264305,"line_start":73,"line_end":73,"column_start":5,"column_end":33}},{"value":"/ [`Builder::spawn`]: struct.Builder.html#method.spawn","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8264310,"byte_end":8264366,"line_start":74,"line_end":74,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8264371,"byte_end":8264374,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8264379,"byte_end":8264393,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8264398,"byte_end":8264401,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8264406,"byte_end":8264413,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8264418,"byte_end":8264423,"line_start":79,"line_end":79,"column_start":5,"column_end":10}},{"value":"/ use std::cell::Cell;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8264428,"byte_end":8264452,"line_start":80,"line_end":80,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8264457,"byte_end":8264460,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8264465,"byte_end":8264489,"line_start":82,"line_end":82,"column_start":5,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8264494,"byte_end":8264524,"line_start":83,"line_end":83,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8264529,"byte_end":8264532,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ task_local! {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8264537,"byte_end":8264554,"line_start":85,"line_end":85,"column_start":5,"column_end":22}},{"value":"/     static VAL: Cell<u32> = Cell::new(5);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8264559,"byte_end":8264604,"line_start":86,"line_end":86,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8264609,"byte_end":8264614,"line_start":87,"line_end":87,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8264619,"byte_end":8264622,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8264627,"byte_end":8264653,"line_start":89,"line_end":89,"column_start":5,"column_end":31}},{"value":"/     let v = VAL.try_with(|c| c.get());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8264658,"byte_end":8264700,"line_start":90,"line_end":90,"column_start":5,"column_end":47}},{"value":"/     assert_eq!(v, Ok(5));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8264705,"byte_end":8264734,"line_start":91,"line_end":91,"column_start":5,"column_end":34}},{"value":"/ });","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8264739,"byte_end":8264746,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8264751,"byte_end":8264754,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ // Returns an error because not called within the context of a task.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8264759,"byte_end":8264831,"line_start":94,"line_end":94,"column_start":5,"column_end":77}},{"value":"/ assert!(VAL.try_with(|c| c.get()).is_err());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8264836,"byte_end":8264884,"line_start":95,"line_end":95,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8264889,"byte_end":8264896,"line_start":96,"line_end":96,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3248},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8266428,"byte_end":8266439,"line_start":144,"line_end":144,"column_start":12,"column_end":23},"name":"AccessError","qualname":"::task::task_local::AccessError","value":"AccessError {  }","parent":null,"children":[{"krate":0,"index":3249}],"decl_id":null,"docs":" An error returned by [`LocalKey::try_with`].","sig":null,"attributes":[{"value":"/ An error returned by [`LocalKey::try_with`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8266261,"byte_end":8266309,"line_start":140,"line_end":140,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8266310,"byte_end":8266313,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ [`LocalKey::try_with`]: struct.LocalKey.html#method.try_with","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8266314,"byte_end":8266378,"line_start":142,"line_end":142,"column_start":1,"column_end":65}}]},{"kind":"Mod","id":{"krate":0,"index":3260},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fs","qualname":"::fs","value":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","parent":null,"children":[{"krate":0,"index":3261},{"krate":0,"index":3262},{"krate":0,"index":3263},{"krate":0,"index":3264},{"krate":0,"index":3265},{"krate":0,"index":3266},{"krate":0,"index":3267},{"krate":0,"index":3268},{"krate":0,"index":3269},{"krate":0,"index":3270},{"krate":0,"index":3271},{"krate":0,"index":3272},{"krate":0,"index":3273},{"krate":0,"index":3274},{"krate":0,"index":3275},{"krate":0,"index":3276},{"krate":0,"index":3277},{"krate":0,"index":3278},{"krate":0,"index":3279},{"krate":0,"index":3280},{"krate":0,"index":3281},{"krate":0,"index":3282},{"krate":0,"index":3283},{"krate":0,"index":3284},{"krate":0,"index":3285},{"krate":0,"index":3286},{"krate":0,"index":3299},{"krate":0,"index":3311},{"krate":0,"index":3322},{"krate":0,"index":3333},{"krate":0,"index":3346},{"krate":0,"index":3375},{"krate":0,"index":3541},{"krate":0,"index":3542},{"krate":0,"index":3554},{"krate":0,"index":3563},{"krate":0,"index":3584},{"krate":0,"index":3585},{"krate":0,"index":3596},{"krate":0,"index":3622},{"krate":0,"index":3635},{"krate":0,"index":3646},{"krate":0,"index":3657},{"krate":0,"index":3668},{"krate":0,"index":3679},{"krate":0,"index":3691},{"krate":0,"index":3701},{"krate":0,"index":3711}],"decl_id":null,"docs":" Filesystem manipulation operations.","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/utils.rs","byte_start":13641,"byte_end":13668,"line_start":169,"line_end":169,"column_start":13,"column_end":40}},{"value":"! Filesystem manipulation operations.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8268801,"byte_end":8268840,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8268841,"byte_end":8268844,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module is an async version of [`std::fs`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8268845,"byte_end":8268896,"line_start":3,"line_end":3,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8268897,"byte_end":8268900,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! [`os::unix::fs`]: ../os/unix/fs/index.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8268901,"byte_end":8268947,"line_start":5,"line_end":5,"column_start":1,"column_end":47}},{"value":"! [`os::windows::fs`]: ../os/windows/fs/index.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8268948,"byte_end":8269000,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"! [`std::fs`]: https://doc.rust-lang.org/std/fs/index.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8269001,"byte_end":8269061,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8269062,"byte_end":8269065,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! # Platform-specific extensions","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8269066,"byte_end":8269100,"line_start":9,"line_end":9,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8269101,"byte_end":8269104,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! * Unix: use the [`os::unix::fs`] module.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8269105,"byte_end":8269149,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"! * Windows: use the [`os::windows::fs`] module.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8269150,"byte_end":8269200,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8269201,"byte_end":8269204,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8269205,"byte_end":8269219,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8269220,"byte_end":8269223,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! Create a new file and write some bytes to it:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8269224,"byte_end":8269273,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8269274,"byte_end":8269277,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8269278,"byte_end":8269291,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8269292,"byte_end":8269366,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8269367,"byte_end":8269372,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"! use async_std::fs::File;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8269373,"byte_end":8269401,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"! use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8269402,"byte_end":8269432,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8269433,"byte_end":8269436,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8269437,"byte_end":8269485,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"! file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8269486,"byte_end":8269530,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"! #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8269531,"byte_end":8269536,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8269537,"byte_end":8269554,"line_start":27,"line_end":27,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/mod.rs","byte_start":8269555,"byte_end":8269562,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3293},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8271703,"byte_end":8271715,"line_start":34,"line_end":34,"column_start":14,"column_end":26},"name":"canonicalize","qualname":"::fs::canonicalize::canonicalize","value":"fn <P> (path: P) -> io::Result<PathBuf>","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical form of a path.","sig":null,"attributes":[{"value":"/ Returns the canonical form of a path.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8270901,"byte_end":8270942,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8270943,"byte_end":8270946,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The returned path is in absolute form with all intermediate components normalized and symbolic","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8270947,"byte_end":8271045,"line_start":8,"line_end":8,"column_start":1,"column_end":99}},{"value":"/ links resolved.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8271046,"byte_end":8271065,"line_start":9,"line_end":9,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8271066,"byte_end":8271069,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::canonicalize`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8271070,"byte_end":8271137,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8271138,"byte_end":8271141,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::canonicalize`]: https://doc.rust-lang.org/std/fs/fn.canonicalize.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8271142,"byte_end":8271226,"line_start":13,"line_end":13,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8271227,"byte_end":8271230,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8271231,"byte_end":8271243,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8271244,"byte_end":8271247,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8271248,"byte_end":8271306,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8271307,"byte_end":8271310,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8271311,"byte_end":8271372,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ * A non-final component in `path` is not a directory.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8271373,"byte_end":8271430,"line_start":20,"line_end":20,"column_start":1,"column_end":58}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8271431,"byte_end":8271467,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8271468,"byte_end":8271471,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8271472,"byte_end":8271486,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8271487,"byte_end":8271490,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8271491,"byte_end":8271504,"line_start":25,"line_end":25,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8271505,"byte_end":8271579,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8271580,"byte_end":8271585,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8271586,"byte_end":8271608,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8271609,"byte_end":8271612,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let path = fs::canonicalize(\".\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8271613,"byte_end":8271657,"line_start":30,"line_end":30,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8271658,"byte_end":8271663,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8271664,"byte_end":8271681,"line_start":32,"line_end":32,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/canonicalize.rs","byte_start":8271682,"byte_end":8271689,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3304},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8273347,"byte_end":8273351,"line_start":42,"line_end":42,"column_start":14,"column_end":18},"name":"copy","qualname":"::fs::copy::copy","value":"fn <P, Q> (from: P, to: Q) -> io::Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Copies the contents and permissions of a file to a new location.","sig":null,"attributes":[{"value":"/ Copies the contents and permissions of a file to a new location.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8272149,"byte_end":8272217,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8272218,"byte_end":8272221,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ On success, the total number of bytes copied is returned and equals the length of the `to` file","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8272222,"byte_end":8272321,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ after this operation.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8272322,"byte_end":8272347,"line_start":9,"line_end":9,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8272348,"byte_end":8272351,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The old contents of `to` will be overwritten. If `from` and `to` both point to the same file,","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8272352,"byte_end":8272449,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"/ then the file will likely get truncated as a result of this operation.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8272450,"byte_end":8272524,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8272525,"byte_end":8272528,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ If you're working with open [`File`]s and want to copy contents through those types, use the","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8272529,"byte_end":8272625,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ [`io::copy`] function.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8272626,"byte_end":8272652,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8272653,"byte_end":8272656,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::copy`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8272657,"byte_end":8272716,"line_start":17,"line_end":17,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8272717,"byte_end":8272720,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`File`]: struct.File.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8272721,"byte_end":8272751,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/ [`io::copy`]: ../io/fn.copy.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8272752,"byte_end":8272788,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/ [`std::fs::copy`]: https://doc.rust-lang.org/std/fs/fn.copy.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8272789,"byte_end":8272857,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8272858,"byte_end":8272861,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8272862,"byte_end":8272874,"line_start":23,"line_end":23,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8272875,"byte_end":8272878,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8272879,"byte_end":8272937,"line_start":25,"line_end":25,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8272938,"byte_end":8272941,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ * `from` does not point to an existing file.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8272942,"byte_end":8272990,"line_start":27,"line_end":27,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to read `from` or write `to`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8272991,"byte_end":8273064,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8273065,"byte_end":8273101,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8273102,"byte_end":8273105,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8273106,"byte_end":8273120,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8273121,"byte_end":8273124,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8273125,"byte_end":8273138,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8273139,"byte_end":8273213,"line_start":34,"line_end":34,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8273214,"byte_end":8273219,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8273220,"byte_end":8273242,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8273243,"byte_end":8273246,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let num_bytes = fs::copy(\"a.txt\", \"b.txt\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8273247,"byte_end":8273301,"line_start":38,"line_end":38,"column_start":1,"column_end":55}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8273302,"byte_end":8273307,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8273308,"byte_end":8273325,"line_start":40,"line_end":40,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/copy.rs","byte_start":8273326,"byte_end":8273333,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3316},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8274796,"byte_end":8274806,"line_start":36,"line_end":36,"column_start":14,"column_end":24},"name":"create_dir","qualname":"::fs::create_dir::create_dir","value":"fn <P> (path: P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new directory.","sig":null,"attributes":[{"value":"/ Creates a new directory.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8273831,"byte_end":8273859,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8273860,"byte_end":8273863,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Note that this function will only create the final directory in `path`. If you want to create","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8273864,"byte_end":8273961,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ all of its missing parent directories too, use the [`create_dir_all`] function instead.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8273962,"byte_end":8274053,"line_start":9,"line_end":9,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8274054,"byte_end":8274057,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::create_dir`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8274058,"byte_end":8274123,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8274124,"byte_end":8274127,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`create_dir_all`]: fn.create_dir_all.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8274128,"byte_end":8274174,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"/ [`std::fs::create_dir`]: https://doc.rust-lang.org/std/fs/fn.create_dir.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8274175,"byte_end":8274255,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8274256,"byte_end":8274259,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8274260,"byte_end":8274272,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8274273,"byte_end":8274276,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8274277,"byte_end":8274335,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8274336,"byte_end":8274339,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * `path` already points to an existing file or directory.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8274340,"byte_end":8274401,"line_start":20,"line_end":20,"column_start":1,"column_end":62}},{"value":"/ * A parent directory in `path` does not exist.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8274402,"byte_end":8274452,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/ * The current process lacks permissions to create the directory.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8274453,"byte_end":8274521,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8274522,"byte_end":8274558,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8274559,"byte_end":8274562,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8274563,"byte_end":8274577,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8274578,"byte_end":8274581,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8274582,"byte_end":8274595,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8274596,"byte_end":8274670,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8274671,"byte_end":8274676,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8274677,"byte_end":8274699,"line_start":30,"line_end":30,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8274700,"byte_end":8274703,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ fs::create_dir(\"./some/directory\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8274704,"byte_end":8274750,"line_start":32,"line_end":32,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8274751,"byte_end":8274756,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8274757,"byte_end":8274774,"line_start":34,"line_end":34,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir.rs","byte_start":8274775,"byte_end":8274782,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3327},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8275964,"byte_end":8275978,"line_start":31,"line_end":31,"column_start":14,"column_end":28},"name":"create_dir_all","qualname":"::fs::create_dir_all::create_dir_all","value":"fn <P> (path: P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new directory and all of its parents if they are missing.","sig":null,"attributes":[{"value":"/ Creates a new directory and all of its parents if they are missing.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8275209,"byte_end":8275280,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8275281,"byte_end":8275284,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::create_dir_all`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8275285,"byte_end":8275354,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8275355,"byte_end":8275358,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::create_dir_all`]: https://doc.rust-lang.org/std/fs/fn.create_dir_all.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8275359,"byte_end":8275447,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8275448,"byte_end":8275451,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8275452,"byte_end":8275464,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8275465,"byte_end":8275468,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8275469,"byte_end":8275527,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8275528,"byte_end":8275531,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` already points to an existing file or directory.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8275532,"byte_end":8275593,"line_start":16,"line_end":16,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to create the directory or its missing parents.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8275594,"byte_end":8275685,"line_start":17,"line_end":17,"column_start":1,"column_end":92}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8275686,"byte_end":8275722,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8275723,"byte_end":8275726,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8275727,"byte_end":8275741,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8275742,"byte_end":8275745,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8275746,"byte_end":8275759,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8275760,"byte_end":8275834,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8275835,"byte_end":8275840,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8275841,"byte_end":8275863,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8275864,"byte_end":8275867,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::create_dir_all(\"./some/directory\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8275868,"byte_end":8275918,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8275919,"byte_end":8275924,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8275925,"byte_end":8275942,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/create_dir_all.rs","byte_start":8275943,"byte_end":8275950,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4332},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8276798,"byte_end":8276808,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"DirBuilder","qualname":"::fs::dir_builder::DirBuilder","value":"DirBuilder {  }","parent":null,"children":[{"krate":0,"index":4333},{"krate":0,"index":4334}],"decl_id":null,"docs":" A builder for creating directories with configurable options.","sig":null,"attributes":[{"value":"/ A builder for creating directories with configurable options.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8276379,"byte_end":8276444,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8276445,"byte_end":8276448,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ For Unix-specific options, import the [`os::unix::fs::DirBuilderExt`] trait.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8276449,"byte_end":8276529,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8276530,"byte_end":8276533,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::DirBuilder`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8276534,"byte_end":8276595,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8276596,"byte_end":8276599,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`os::unix::fs::DirBuilderExt`]: ../os/unix/fs/trait.DirBuilderExt.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8276600,"byte_end":8276675,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ [`std::fs::DirBuilder`]: https://doc.rust-lang.org/std/fs/struct.DirBuilder.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8276676,"byte_end":8276760,"line_start":14,"line_end":14,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3339},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8277336,"byte_end":8277339,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<DirBuilder>::new","value":"fn () -> DirBuilder","parent":null,"children":[],"decl_id":null,"docs":" Creates a blank set of options.","sig":null,"attributes":[{"value":"/ Creates a blank set of options.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8277023,"byte_end":8277058,"line_start":26,"line_end":26,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8277063,"byte_end":8277066,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ The [`recursive`] option is initially set to `false`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8277071,"byte_end":8277128,"line_start":28,"line_end":28,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8277133,"byte_end":8277136,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ [`recursive`]: #method.recursive","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8277141,"byte_end":8277177,"line_start":30,"line_end":30,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8277182,"byte_end":8277185,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8277190,"byte_end":8277204,"line_start":32,"line_end":32,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8277209,"byte_end":8277212,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8277217,"byte_end":8277224,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ use async_std::fs::DirBuilder;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8277229,"byte_end":8277263,"line_start":35,"line_end":35,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8277268,"byte_end":8277271,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ let builder = DirBuilder::new();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8277276,"byte_end":8277312,"line_start":37,"line_end":37,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8277317,"byte_end":8277324,"line_start":38,"line_end":38,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3340},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8278087,"byte_end":8278096,"line_start":67,"line_end":67,"column_start":12,"column_end":21},"name":"recursive","qualname":"<DirBuilder>::recursive","value":"fn (&mut self, recursive: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for recursive mode.","sig":null,"attributes":[{"value":"/ Sets the option for recursive mode.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8277589,"byte_end":8277628,"line_start":52,"line_end":52,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8277633,"byte_end":8277636,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means all parent directories should be created recursively","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8277641,"byte_end":8277735,"line_start":54,"line_end":54,"column_start":5,"column_end":99}},{"value":"/ if they don't exist. Parents are created with the same permissions as the final directory.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8277740,"byte_end":8277834,"line_start":55,"line_end":55,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8277839,"byte_end":8277842,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This option is initially set to `false`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8277847,"byte_end":8277891,"line_start":57,"line_end":57,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8277896,"byte_end":8277899,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8277904,"byte_end":8277918,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8277923,"byte_end":8277926,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8277931,"byte_end":8277938,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"/ use async_std::fs::DirBuilder;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8277943,"byte_end":8277977,"line_start":62,"line_end":62,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8277982,"byte_end":8277985,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ let mut builder = DirBuilder::new();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8277990,"byte_end":8278030,"line_start":64,"line_end":64,"column_start":5,"column_end":45}},{"value":"/ builder.recursive(true);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8278035,"byte_end":8278063,"line_start":65,"line_end":65,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8278068,"byte_end":8278075,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3341},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8279028,"byte_end":8279034,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"create","qualname":"<DirBuilder>::create","value":"fn <P> (&self, path: P) -> impl Future<Output = io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a directory with the configured options.","sig":null,"attributes":[{"value":"/ Creates a directory with the configured options.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8278200,"byte_end":8278252,"line_start":72,"line_end":72,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8278257,"byte_end":8278260,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ It is considered an error if the directory already exists unless recursive mode is enabled.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8278265,"byte_end":8278360,"line_start":74,"line_end":74,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8278365,"byte_end":8278368,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8278373,"byte_end":8278385,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8278390,"byte_end":8278393,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8278398,"byte_end":8278456,"line_start":78,"line_end":78,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8278461,"byte_end":8278464,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ * `path` already points to an existing file or directory.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8278469,"byte_end":8278530,"line_start":80,"line_end":80,"column_start":5,"column_end":66}},{"value":"/ * The current process lacks permissions to create the directory or its missing parents.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8278535,"byte_end":8278626,"line_start":81,"line_end":81,"column_start":5,"column_end":96}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8278631,"byte_end":8278667,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8278672,"byte_end":8278675,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8278680,"byte_end":8278694,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8278699,"byte_end":8278702,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8278707,"byte_end":8278720,"line_start":86,"line_end":86,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8278725,"byte_end":8278799,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8278804,"byte_end":8278809,"line_start":88,"line_end":88,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::DirBuilder;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8278814,"byte_end":8278848,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8278853,"byte_end":8278856,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ DirBuilder::new()","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8278861,"byte_end":8278882,"line_start":91,"line_end":91,"column_start":5,"column_end":26}},{"value":"/     .recursive(true)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8278887,"byte_end":8278911,"line_start":92,"line_end":92,"column_start":5,"column_end":29}},{"value":"/     .create(\"./some/directory\")","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8278916,"byte_end":8278951,"line_start":93,"line_end":93,"column_start":5,"column_end":40}},{"value":"/     .await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8278956,"byte_end":8278972,"line_start":94,"line_end":94,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8278977,"byte_end":8278982,"line_start":95,"line_end":95,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8278987,"byte_end":8279004,"line_start":96,"line_end":96,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8279009,"byte_end":8279016,"line_start":97,"line_end":97,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3356},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8280323,"byte_end":8280331,"line_start":18,"line_end":18,"column_start":12,"column_end":20},"name":"DirEntry","qualname":"::fs::dir_entry::DirEntry","value":"","parent":null,"children":[],"decl_id":null,"docs":" An entry in a directory.","sig":null,"attributes":[{"value":"/ An entry in a directory.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8280027,"byte_end":8280055,"line_start":10,"line_end":10,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8280056,"byte_end":8280059,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A stream of entries in a directory is returned by [`read_dir`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8280060,"byte_end":8280127,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8280128,"byte_end":8280131,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::DirEntry`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8280132,"byte_end":8280191,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8280192,"byte_end":8280195,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`read_dir`]: fn.read_dir.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8280196,"byte_end":8280230,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::DirEntry`]: https://doc.rust-lang.org/std/fs/struct.DirEntry.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8280231,"byte_end":8280311,"line_start":17,"line_end":17,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3361},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8281222,"byte_end":8281226,"line_start":50,"line_end":50,"column_start":12,"column_end":16},"name":"path","qualname":"<DirEntry>::path","value":"fn (&self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns the full path to this entry.","sig":null,"attributes":[{"value":"/ Returns the full path to this entry.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8280548,"byte_end":8280588,"line_start":26,"line_end":26,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8280593,"byte_end":8280596,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ The full path is created by joining the original path passed to [`read_dir`] with the name","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8280601,"byte_end":8280695,"line_start":28,"line_end":28,"column_start":5,"column_end":99}},{"value":"/ of this entry.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8280700,"byte_end":8280718,"line_start":29,"line_end":29,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8280723,"byte_end":8280726,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ [`read_dir`]: fn.read_dir.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8280731,"byte_end":8280765,"line_start":31,"line_end":31,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8280770,"byte_end":8280773,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8280778,"byte_end":8280792,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8280797,"byte_end":8280800,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8280805,"byte_end":8280818,"line_start":35,"line_end":35,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8280823,"byte_end":8280897,"line_start":36,"line_end":36,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8280902,"byte_end":8280907,"line_start":37,"line_end":37,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8280912,"byte_end":8280934,"line_start":38,"line_end":38,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8280939,"byte_end":8280969,"line_start":39,"line_end":39,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8280974,"byte_end":8280977,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8280982,"byte_end":8281025,"line_start":41,"line_end":41,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8281030,"byte_end":8281033,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8281038,"byte_end":8281082,"line_start":43,"line_end":43,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8281087,"byte_end":8281112,"line_start":44,"line_end":44,"column_start":5,"column_end":30}},{"value":"/     println!(\"{:?}\", entry.path());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8281117,"byte_end":8281156,"line_start":45,"line_end":45,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8281161,"byte_end":8281166,"line_start":46,"line_end":46,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8281171,"byte_end":8281176,"line_start":47,"line_end":47,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8281181,"byte_end":8281198,"line_start":48,"line_end":48,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8281203,"byte_end":8281210,"line_start":49,"line_end":49,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3362},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8282357,"byte_end":8282365,"line_start":88,"line_end":88,"column_start":18,"column_end":26},"name":"metadata","qualname":"<DirEntry>::metadata","value":"fn (&self) -> io::Result<Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Reads the metadata for this entry.","sig":null,"attributes":[{"value":"/ Reads the metadata for this entry.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8281287,"byte_end":8281325,"line_start":54,"line_end":54,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8281330,"byte_end":8281333,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to read the metadata.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8281338,"byte_end":8281406,"line_start":56,"line_end":56,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8281411,"byte_end":8281414,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ If you want to read metadata without following symbolic links, use [`symlink_metadata`]","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8281419,"byte_end":8281510,"line_start":58,"line_end":58,"column_start":5,"column_end":96}},{"value":"/ instead.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8281515,"byte_end":8281527,"line_start":59,"line_end":59,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8281532,"byte_end":8281535,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ [`symlink_metadata`]: fn.symlink_metadata.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8281540,"byte_end":8281590,"line_start":61,"line_end":61,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8281595,"byte_end":8281598,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8281603,"byte_end":8281615,"line_start":63,"line_end":63,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8281620,"byte_end":8281623,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8281628,"byte_end":8281686,"line_start":65,"line_end":65,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8281691,"byte_end":8281694,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ * This entry does not point to an existing file or directory anymore.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8281699,"byte_end":8281772,"line_start":67,"line_end":67,"column_start":5,"column_end":78}},{"value":"/ * The current process lacks permissions to read the metadata.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8281777,"byte_end":8281842,"line_start":68,"line_end":68,"column_start":5,"column_end":70}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8281847,"byte_end":8281883,"line_start":69,"line_end":69,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8281888,"byte_end":8281891,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8281896,"byte_end":8281910,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8281915,"byte_end":8281918,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8281923,"byte_end":8281936,"line_start":73,"line_end":73,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8281941,"byte_end":8282015,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8282020,"byte_end":8282025,"line_start":75,"line_end":75,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8282030,"byte_end":8282052,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8282057,"byte_end":8282087,"line_start":77,"line_end":77,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8282092,"byte_end":8282095,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8282100,"byte_end":8282143,"line_start":79,"line_end":79,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8282148,"byte_end":8282151,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8282156,"byte_end":8282200,"line_start":81,"line_end":81,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8282205,"byte_end":8282230,"line_start":82,"line_end":82,"column_start":5,"column_end":30}},{"value":"/     println!(\"{:?}\", entry.metadata().await?);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8282235,"byte_end":8282285,"line_start":83,"line_end":83,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8282290,"byte_end":8282295,"line_start":84,"line_end":84,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8282300,"byte_end":8282305,"line_start":85,"line_end":85,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8282310,"byte_end":8282327,"line_start":86,"line_end":86,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8282332,"byte_end":8282339,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3366},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8283558,"byte_end":8283567,"line_start":126,"line_end":126,"column_start":18,"column_end":27},"name":"file_type","qualname":"<DirEntry>::file_type","value":"fn (&self) -> io::Result<FileType>","parent":null,"children":[],"decl_id":null,"docs":" Reads the file type for this entry.","sig":null,"attributes":[{"value":"/ Reads the file type for this entry.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8282501,"byte_end":8282540,"line_start":93,"line_end":93,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8282545,"byte_end":8282548,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This function will not traverse symbolic links if this entry points at one.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8282553,"byte_end":8282632,"line_start":95,"line_end":95,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8282637,"byte_end":8282640,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ If you want to read metadata with following symbolic links, use [`metadata`] instead.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8282645,"byte_end":8282734,"line_start":97,"line_end":97,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8282739,"byte_end":8282742,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ [`metadata`]: #method.metadata","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8282747,"byte_end":8282781,"line_start":99,"line_end":99,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8282786,"byte_end":8282789,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8282794,"byte_end":8282806,"line_start":101,"line_end":101,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8282811,"byte_end":8282814,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8282819,"byte_end":8282877,"line_start":103,"line_end":103,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8282882,"byte_end":8282885,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ * This entry does not point to an existing file or directory anymore.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8282890,"byte_end":8282963,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/ * The current process lacks permissions to read this entry's metadata.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8282968,"byte_end":8283042,"line_start":106,"line_end":106,"column_start":5,"column_end":79}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8283047,"byte_end":8283083,"line_start":107,"line_end":107,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8283088,"byte_end":8283091,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8283096,"byte_end":8283110,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8283115,"byte_end":8283118,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8283123,"byte_end":8283136,"line_start":111,"line_end":111,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8283141,"byte_end":8283215,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8283220,"byte_end":8283225,"line_start":113,"line_end":113,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8283230,"byte_end":8283252,"line_start":114,"line_end":114,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8283257,"byte_end":8283287,"line_start":115,"line_end":115,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8283292,"byte_end":8283295,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8283300,"byte_end":8283343,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8283348,"byte_end":8283351,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8283356,"byte_end":8283400,"line_start":119,"line_end":119,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8283405,"byte_end":8283430,"line_start":120,"line_end":120,"column_start":5,"column_end":30}},{"value":"/     println!(\"{:?}\", entry.file_type().await?);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8283435,"byte_end":8283486,"line_start":121,"line_end":121,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8283491,"byte_end":8283496,"line_start":122,"line_end":122,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8283501,"byte_end":8283506,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8283511,"byte_end":8283528,"line_start":124,"line_end":124,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8283533,"byte_end":8283540,"line_start":125,"line_end":125,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3370},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8284247,"byte_end":8284256,"line_start":150,"line_end":150,"column_start":12,"column_end":21},"name":"file_name","qualname":"<DirEntry>::file_name","value":"fn (&self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Returns the bare name of this entry without the leading path.","sig":null,"attributes":[{"value":"/ Returns the bare name of this entry without the leading path.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8283704,"byte_end":8283769,"line_start":131,"line_end":131,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8283774,"byte_end":8283777,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8283782,"byte_end":8283796,"line_start":133,"line_end":133,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8283801,"byte_end":8283804,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8283809,"byte_end":8283822,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8283827,"byte_end":8283901,"line_start":136,"line_end":136,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8283906,"byte_end":8283911,"line_start":137,"line_end":137,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8283916,"byte_end":8283938,"line_start":138,"line_end":138,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8283943,"byte_end":8283973,"line_start":139,"line_end":139,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8283978,"byte_end":8283981,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8283986,"byte_end":8284029,"line_start":141,"line_end":141,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8284034,"byte_end":8284037,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8284042,"byte_end":8284086,"line_start":143,"line_end":143,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8284091,"byte_end":8284116,"line_start":144,"line_end":144,"column_start":5,"column_end":30}},{"value":"/     println!(\"{}\", entry.file_name().to_string_lossy());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8284121,"byte_end":8284181,"line_start":145,"line_end":145,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8284186,"byte_end":8284191,"line_start":146,"line_end":146,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8284196,"byte_end":8284201,"line_start":147,"line_end":147,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8284206,"byte_end":8284223,"line_start":148,"line_end":148,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8284228,"byte_end":8284235,"line_start":149,"line_end":149,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3412},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8286680,"byte_end":8286684,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"File","qualname":"::fs::file::File","value":"File {  }","parent":null,"children":[{"krate":0,"index":3413},{"krate":0,"index":3414}],"decl_id":null,"docs":" An open file on the filesystem.","sig":null,"attributes":[{"value":"/ An open file on the filesystem.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8285405,"byte_end":8285440,"line_start":18,"line_end":18,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8285441,"byte_end":8285444,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Depending on what options the file was opened with, this type can be used for reading and/or","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8285445,"byte_end":8285541,"line_start":20,"line_end":20,"column_start":1,"column_end":97}},{"value":"/ writing.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8285542,"byte_end":8285554,"line_start":21,"line_end":21,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8285555,"byte_end":8285558,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Files are automatically closed when they get dropped and any errors detected on closing are","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8285559,"byte_end":8285654,"line_start":23,"line_end":23,"column_start":1,"column_end":96}},{"value":"/ ignored. Use the [`sync_all`] method before dropping a file if such errors need to be handled.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8285655,"byte_end":8285753,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8285754,"byte_end":8285757,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::File`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8285758,"byte_end":8285813,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8285814,"byte_end":8285817,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`sync_all`]: #method.sync_all","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8285818,"byte_end":8285852,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::File`]: https://doc.rust-lang.org/std/fs/struct.File.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8285853,"byte_end":8285925,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8285926,"byte_end":8285929,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8285930,"byte_end":8285944,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8285945,"byte_end":8285948,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Create a new file and write some bytes to it:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8285949,"byte_end":8285998,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8285999,"byte_end":8286002,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8286003,"byte_end":8286016,"line_start":35,"line_end":35,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8286017,"byte_end":8286091,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8286092,"byte_end":8286097,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8286098,"byte_end":8286126,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8286127,"byte_end":8286157,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8286158,"byte_end":8286161,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8286162,"byte_end":8286210,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8286211,"byte_end":8286255,"line_start":42,"line_end":42,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8286256,"byte_end":8286261,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8286262,"byte_end":8286279,"line_start":44,"line_end":44,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8286280,"byte_end":8286287,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8286288,"byte_end":8286291,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Read the contents of a file into a vector of bytes:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8286292,"byte_end":8286347,"line_start":47,"line_end":47,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8286348,"byte_end":8286351,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8286352,"byte_end":8286365,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8286366,"byte_end":8286440,"line_start":50,"line_end":50,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8286441,"byte_end":8286446,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8286447,"byte_end":8286475,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8286476,"byte_end":8286506,"line_start":53,"line_end":53,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8286507,"byte_end":8286510,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let mut file = File::open(\"a.txt\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8286511,"byte_end":8286557,"line_start":55,"line_end":55,"column_start":1,"column_end":47}},{"value":"/ let mut contents = Vec::new();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8286558,"byte_end":8286592,"line_start":56,"line_end":56,"column_start":1,"column_end":35}},{"value":"/ file.read_to_end(&mut contents).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8286593,"byte_end":8286636,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8286637,"byte_end":8286642,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8286643,"byte_end":8286660,"line_start":59,"line_end":59,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8286661,"byte_end":8286668,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3417},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8288145,"byte_end":8288149,"line_start":114,"line_end":114,"column_start":18,"column_end":22},"name":"open","qualname":"<File>::open","value":"fn <P> (path: P) -> io::Result<File>","parent":null,"children":[],"decl_id":null,"docs":" Opens a file in read-only mode.","sig":null,"attributes":[{"value":"/ Opens a file in read-only mode.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8287312,"byte_end":8287347,"line_start":87,"line_end":87,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8287352,"byte_end":8287355,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ See the [`OpenOptions::open`] function for more options.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8287360,"byte_end":8287420,"line_start":89,"line_end":89,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8287425,"byte_end":8287428,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8287433,"byte_end":8287445,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8287450,"byte_end":8287453,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8287458,"byte_end":8287516,"line_start":93,"line_end":93,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8287521,"byte_end":8287524,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8287529,"byte_end":8287577,"line_start":95,"line_end":95,"column_start":5,"column_end":53}},{"value":"/ * The current process lacks permissions to read the file.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8287582,"byte_end":8287643,"line_start":96,"line_end":96,"column_start":5,"column_end":66}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8287648,"byte_end":8287684,"line_start":97,"line_end":97,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8287689,"byte_end":8287692,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ For more details, see the list of errors documented by [`OpenOptions::open`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8287697,"byte_end":8287778,"line_start":99,"line_end":99,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8287783,"byte_end":8287786,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions::open`]: struct.OpenOptions.html#method.open","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8287791,"byte_end":8287853,"line_start":101,"line_end":101,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8287858,"byte_end":8287861,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8287866,"byte_end":8287880,"line_start":103,"line_end":103,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8287885,"byte_end":8287888,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8287893,"byte_end":8287906,"line_start":105,"line_end":105,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8287911,"byte_end":8287985,"line_start":106,"line_end":106,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8287990,"byte_end":8287995,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8288000,"byte_end":8288028,"line_start":108,"line_end":108,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8288033,"byte_end":8288036,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"a.txt\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8288041,"byte_end":8288083,"line_start":110,"line_end":110,"column_start":5,"column_end":47}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8288088,"byte_end":8288093,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8288098,"byte_end":8288115,"line_start":112,"line_end":112,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8288120,"byte_end":8288127,"line_start":113,"line_end":113,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3423},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8289402,"byte_end":8289408,"line_start":152,"line_end":152,"column_start":18,"column_end":24},"name":"create","qualname":"<File>::create","value":"fn <P> (path: P) -> io::Result<File>","parent":null,"children":[],"decl_id":null,"docs":" Opens a file in write-only mode.","sig":null,"attributes":[{"value":"/ Opens a file in write-only mode.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8288457,"byte_end":8288493,"line_start":123,"line_end":123,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8288498,"byte_end":8288501,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ This function will create a file if it does not exist, and will truncate it if it does.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8288506,"byte_end":8288597,"line_start":125,"line_end":125,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8288602,"byte_end":8288605,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ See the [`OpenOptions::open`] function for more options.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8288610,"byte_end":8288670,"line_start":127,"line_end":127,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8288675,"byte_end":8288678,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8288683,"byte_end":8288695,"line_start":129,"line_end":129,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8288700,"byte_end":8288703,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8288708,"byte_end":8288766,"line_start":131,"line_end":131,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8288771,"byte_end":8288774,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ * The file's parent directory does not exist.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8288779,"byte_end":8288828,"line_start":133,"line_end":133,"column_start":5,"column_end":54}},{"value":"/ * The current process lacks permissions to write to the file.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8288833,"byte_end":8288898,"line_start":134,"line_end":134,"column_start":5,"column_end":70}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8288903,"byte_end":8288939,"line_start":135,"line_end":135,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8288944,"byte_end":8288947,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ For more details, see the list of errors documented by [`OpenOptions::open`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8288952,"byte_end":8289033,"line_start":137,"line_end":137,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8289038,"byte_end":8289041,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions::open`]: struct.OpenOptions.html#method.open","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8289046,"byte_end":8289108,"line_start":139,"line_end":139,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8289113,"byte_end":8289116,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8289121,"byte_end":8289135,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8289140,"byte_end":8289143,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8289148,"byte_end":8289161,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8289166,"byte_end":8289240,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8289245,"byte_end":8289250,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8289255,"byte_end":8289283,"line_start":146,"line_end":146,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8289288,"byte_end":8289291,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let file = File::create(\"a.txt\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8289296,"byte_end":8289340,"line_start":148,"line_end":148,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8289345,"byte_end":8289350,"line_start":149,"line_end":149,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8289355,"byte_end":8289372,"line_start":150,"line_end":150,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8289377,"byte_end":8289384,"line_start":151,"line_end":151,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3429},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8290509,"byte_end":8290517,"line_start":183,"line_end":183,"column_start":18,"column_end":26},"name":"sync_all","qualname":"<File>::sync_all","value":"fn (&self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Synchronizes OS-internal buffered contents and metadata to disk.","sig":null,"attributes":[{"value":"/ Synchronizes OS-internal buffered contents and metadata to disk.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8289737,"byte_end":8289805,"line_start":162,"line_end":162,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8289810,"byte_end":8289813,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ This function will ensure that all in-memory data reaches the filesystem.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8289818,"byte_end":8289895,"line_start":164,"line_end":164,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8289900,"byte_end":8289903,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This can be used to handle errors that would otherwise only be caught when the file is","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8289908,"byte_end":8289998,"line_start":166,"line_end":166,"column_start":5,"column_end":95}},{"value":"/ closed. When a file is dropped, errors in synchronizing this in-memory data are ignored.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8290003,"byte_end":8290095,"line_start":167,"line_end":167,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8290100,"byte_end":8290103,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8290108,"byte_end":8290122,"line_start":169,"line_end":169,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8290127,"byte_end":8290130,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8290135,"byte_end":8290148,"line_start":171,"line_end":171,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8290153,"byte_end":8290227,"line_start":172,"line_end":172,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8290232,"byte_end":8290237,"line_start":173,"line_end":173,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8290242,"byte_end":8290270,"line_start":174,"line_end":174,"column_start":5,"column_end":33}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8290275,"byte_end":8290305,"line_start":175,"line_end":175,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8290310,"byte_end":8290313,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8290318,"byte_end":8290366,"line_start":177,"line_end":177,"column_start":5,"column_end":53}},{"value":"/ file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8290371,"byte_end":8290415,"line_start":178,"line_end":178,"column_start":5,"column_end":49}},{"value":"/ file.sync_all().await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8290420,"byte_end":8290447,"line_start":179,"line_end":179,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8290452,"byte_end":8290457,"line_start":180,"line_end":180,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8290462,"byte_end":8290479,"line_start":181,"line_end":181,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8290484,"byte_end":8290491,"line_start":182,"line_end":182,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3434},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8291722,"byte_end":8291731,"line_start":219,"line_end":219,"column_start":18,"column_end":27},"name":"sync_data","qualname":"<File>::sync_data","value":"fn (&self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Synchronizes OS-internal buffered contents to disk.","sig":null,"attributes":[{"value":"/ Synchronizes OS-internal buffered contents to disk.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8290854,"byte_end":8290909,"line_start":194,"line_end":194,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8290914,"byte_end":8290917,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`sync_all`], except that file metadata may not be synchronized.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8290922,"byte_end":8291009,"line_start":196,"line_end":196,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8291014,"byte_end":8291017,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ This is intended for use cases that must synchronize the contents of the file, but don't","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8291022,"byte_end":8291114,"line_start":198,"line_end":198,"column_start":5,"column_end":97}},{"value":"/ need the file metadata synchronized to disk.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8291119,"byte_end":8291167,"line_start":199,"line_end":199,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8291172,"byte_end":8291175,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Note that some platforms may simply implement this in terms of [`sync_all`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8291180,"byte_end":8291260,"line_start":201,"line_end":201,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8291265,"byte_end":8291268,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ [`sync_all`]: #method.sync_all","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8291273,"byte_end":8291307,"line_start":203,"line_end":203,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8291312,"byte_end":8291315,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8291320,"byte_end":8291334,"line_start":205,"line_end":205,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8291339,"byte_end":8291342,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8291347,"byte_end":8291360,"line_start":207,"line_end":207,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8291365,"byte_end":8291439,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8291444,"byte_end":8291449,"line_start":209,"line_end":209,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8291454,"byte_end":8291482,"line_start":210,"line_end":210,"column_start":5,"column_end":33}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8291487,"byte_end":8291517,"line_start":211,"line_end":211,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8291522,"byte_end":8291525,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8291530,"byte_end":8291578,"line_start":213,"line_end":213,"column_start":5,"column_end":53}},{"value":"/ file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8291583,"byte_end":8291627,"line_start":214,"line_end":214,"column_start":5,"column_end":49}},{"value":"/ file.sync_data().await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8291632,"byte_end":8291660,"line_start":215,"line_end":215,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8291665,"byte_end":8291670,"line_start":216,"line_end":216,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8291675,"byte_end":8291692,"line_start":217,"line_end":217,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8291697,"byte_end":8291704,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3439},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8292828,"byte_end":8292835,"line_start":251,"line_end":251,"column_start":18,"column_end":25},"name":"set_len","qualname":"<File>::set_len","value":"fn (&self, size: u64) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Truncates or extends the file.","sig":null,"attributes":[{"value":"/ Truncates or extends the file.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8292070,"byte_end":8292104,"line_start":230,"line_end":230,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8292109,"byte_end":8292112,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ If `size` is less than the current file size, then the file will be truncated. If it is","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8292117,"byte_end":8292208,"line_start":232,"line_end":232,"column_start":5,"column_end":96}},{"value":"/ greater than the current file size, then the file will be extended to `size` and have all","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8292213,"byte_end":8292306,"line_start":233,"line_end":233,"column_start":5,"column_end":98}},{"value":"/ intermediate data filled with zeros.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8292311,"byte_end":8292351,"line_start":234,"line_end":234,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8292356,"byte_end":8292359,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ The file's cursor stays at the same position, even if the cursor ends up being past the end","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8292364,"byte_end":8292459,"line_start":236,"line_end":236,"column_start":5,"column_end":100}},{"value":"/ of the file after this operation.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8292464,"byte_end":8292501,"line_start":237,"line_end":237,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8292506,"byte_end":8292509,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8292514,"byte_end":8292528,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8292533,"byte_end":8292536,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8292541,"byte_end":8292554,"line_start":241,"line_end":241,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8292559,"byte_end":8292633,"line_start":242,"line_end":242,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8292638,"byte_end":8292643,"line_start":243,"line_end":243,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8292648,"byte_end":8292676,"line_start":244,"line_end":244,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8292681,"byte_end":8292684,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ let file = File::create(\"a.txt\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8292689,"byte_end":8292733,"line_start":246,"line_end":246,"column_start":5,"column_end":49}},{"value":"/ file.set_len(10).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8292738,"byte_end":8292766,"line_start":247,"line_end":247,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8292771,"byte_end":8292776,"line_start":248,"line_end":248,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8292781,"byte_end":8292798,"line_start":249,"line_end":249,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8292803,"byte_end":8292810,"line_start":250,"line_end":250,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3444},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8293654,"byte_end":8293662,"line_start":277,"line_end":277,"column_start":18,"column_end":26},"name":"metadata","qualname":"<File>::metadata","value":"fn (&self) -> io::Result<Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Reads the file's metadata.","sig":null,"attributes":[{"value":"/ Reads the file's metadata.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8293285,"byte_end":8293315,"line_start":263,"line_end":263,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8293320,"byte_end":8293323,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8293328,"byte_end":8293342,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8293347,"byte_end":8293350,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8293355,"byte_end":8293368,"line_start":267,"line_end":267,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8293373,"byte_end":8293447,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8293452,"byte_end":8293457,"line_start":269,"line_end":269,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8293462,"byte_end":8293490,"line_start":270,"line_end":270,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8293495,"byte_end":8293498,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"a.txt\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8293503,"byte_end":8293545,"line_start":272,"line_end":272,"column_start":5,"column_end":47}},{"value":"/ let metadata = file.metadata().await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8293550,"byte_end":8293592,"line_start":273,"line_end":273,"column_start":5,"column_end":47}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8293597,"byte_end":8293602,"line_start":274,"line_end":274,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8293607,"byte_end":8293624,"line_start":275,"line_end":275,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8293629,"byte_end":8293636,"line_start":276,"line_end":276,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3448},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8294508,"byte_end":8294523,"line_start":306,"line_end":306,"column_start":18,"column_end":33},"name":"set_permissions","qualname":"<File>::set_permissions","value":"fn (&self, perm: Permissions) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions on the file.","sig":null,"attributes":[{"value":"/ Changes the permissions on the file.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8293799,"byte_end":8293839,"line_start":282,"line_end":282,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8293844,"byte_end":8293847,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8293852,"byte_end":8293864,"line_start":284,"line_end":284,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8293869,"byte_end":8293872,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8293877,"byte_end":8293935,"line_start":286,"line_end":286,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8293940,"byte_end":8293943,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ * The current process lacks permissions to change attributes on the file.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8293948,"byte_end":8294025,"line_start":288,"line_end":288,"column_start":5,"column_end":82}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8294030,"byte_end":8294066,"line_start":289,"line_end":289,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8294071,"byte_end":8294074,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8294079,"byte_end":8294093,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8294098,"byte_end":8294101,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8294106,"byte_end":8294119,"line_start":293,"line_end":293,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8294124,"byte_end":8294198,"line_start":294,"line_end":294,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8294203,"byte_end":8294208,"line_start":295,"line_end":295,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8294213,"byte_end":8294241,"line_start":296,"line_end":296,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8294246,"byte_end":8294249,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ let file = File::create(\"a.txt\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8294254,"byte_end":8294298,"line_start":298,"line_end":298,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8294303,"byte_end":8294306,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ let mut perms = file.metadata().await?.permissions();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8294311,"byte_end":8294368,"line_start":300,"line_end":300,"column_start":5,"column_end":62}},{"value":"/ perms.set_readonly(true);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8294373,"byte_end":8294402,"line_start":301,"line_end":301,"column_start":5,"column_end":34}},{"value":"/ file.set_permissions(perms).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8294407,"byte_end":8294446,"line_start":302,"line_end":302,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8294451,"byte_end":8294456,"line_start":303,"line_end":303,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8294461,"byte_end":8294478,"line_start":304,"line_end":304,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8294483,"byte_end":8294490,"line_start":305,"line_end":305,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":3547},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8317787,"byte_end":8317796,"line_start":33,"line_end":33,"column_start":14,"column_end":23},"name":"hard_link","qualname":"::fs::hard_link::hard_link","value":"fn <P, Q> (from: P, to: Q) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Creates a hard link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a hard link on the filesystem.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8317023,"byte_end":8317065,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8317066,"byte_end":8317069,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a link pointing to the `src` path. Note that operating systems often","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8317070,"byte_end":8317165,"line_start":8,"line_end":8,"column_start":1,"column_end":96}},{"value":"/ require these two paths to be located on the same filesystem.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8317166,"byte_end":8317231,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8317232,"byte_end":8317235,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::hard_link`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8317236,"byte_end":8317300,"line_start":11,"line_end":11,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8317301,"byte_end":8317304,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::hard_link`]: https://doc.rust-lang.org/std/fs/fn.hard_link.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8317305,"byte_end":8317383,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8317384,"byte_end":8317387,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8317388,"byte_end":8317400,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8317401,"byte_end":8317404,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8317405,"byte_end":8317463,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8317464,"byte_end":8317467,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `src` does not point to an existing file.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8317468,"byte_end":8317515,"line_start":19,"line_end":19,"column_start":1,"column_end":48}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8317516,"byte_end":8317552,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8317553,"byte_end":8317556,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8317557,"byte_end":8317571,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8317572,"byte_end":8317575,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8317576,"byte_end":8317589,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8317590,"byte_end":8317664,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8317665,"byte_end":8317670,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8317671,"byte_end":8317693,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8317694,"byte_end":8317697,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ fs::hard_link(\"a.txt\", \"b.txt\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8317698,"byte_end":8317741,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8317742,"byte_end":8317747,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8317748,"byte_end":8317765,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/hard_link.rs","byte_start":8317766,"byte_end":8317773,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3558},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8319281,"byte_end":8319289,"line_start":35,"line_end":35,"column_start":14,"column_end":22},"name":"metadata","qualname":"::fs::metadata::metadata","value":"fn <P> (path: P) -> io::Result<Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Reads metadata for a path.","sig":null,"attributes":[{"value":"/ Reads metadata for a path.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8318336,"byte_end":8318366,"line_start":5,"line_end":5,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8318367,"byte_end":8318370,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function will traverse symbolic links to read metadata for the target file or directory.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8318371,"byte_end":8318468,"line_start":7,"line_end":7,"column_start":1,"column_end":98}},{"value":"/ If you want to read metadata without following symbolic links, use [`symlink_metadata`]","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8318469,"byte_end":8318560,"line_start":8,"line_end":8,"column_start":1,"column_end":92}},{"value":"/ instead.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8318561,"byte_end":8318573,"line_start":9,"line_end":9,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8318574,"byte_end":8318577,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::metadata`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8318578,"byte_end":8318641,"line_start":11,"line_end":11,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8318642,"byte_end":8318645,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`symlink_metadata`]: fn.symlink_metadata.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8318646,"byte_end":8318696,"line_start":13,"line_end":13,"column_start":1,"column_end":51}},{"value":"/ [`std::fs::metadata`]: https://doc.rust-lang.org/std/fs/fn.metadata.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8318697,"byte_end":8318773,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8318774,"byte_end":8318777,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8318778,"byte_end":8318790,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8318791,"byte_end":8318794,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8318795,"byte_end":8318853,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8318854,"byte_end":8318857,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8318858,"byte_end":8318919,"line_start":20,"line_end":20,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to read metadata for the path.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8318920,"byte_end":8318994,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8318995,"byte_end":8319031,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8319032,"byte_end":8319035,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8319036,"byte_end":8319050,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8319051,"byte_end":8319054,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8319055,"byte_end":8319068,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8319069,"byte_end":8319143,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8319144,"byte_end":8319149,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8319150,"byte_end":8319172,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8319173,"byte_end":8319176,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let perm = fs::metadata(\"a.txt\").await?.permissions();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8319177,"byte_end":8319235,"line_start":31,"line_end":31,"column_start":1,"column_end":59}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8319236,"byte_end":8319241,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8319242,"byte_end":8319259,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/metadata.rs","byte_start":8319260,"byte_end":8319267,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4358},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8327144,"byte_end":8327155,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"OpenOptions","qualname":"::fs::open_options::OpenOptions","value":"","parent":null,"children":[],"decl_id":null,"docs":" A builder for opening files with configurable options.","sig":null,"attributes":[{"value":"/ A builder for opening files with configurable options.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8325599,"byte_end":8325657,"line_start":8,"line_end":8,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8325658,"byte_end":8325661,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Files can be opened in [`read`] and/or [`write`] mode.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8325662,"byte_end":8325720,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8325721,"byte_end":8325724,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The [`append`] option opens files in a special writing mode that moves the file cursor to the","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8325725,"byte_end":8325822,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ end of file before every write operation.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8325823,"byte_end":8325868,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8325869,"byte_end":8325872,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ It is also possible to [`truncate`] the file right after opening, to [`create`] a file if it","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8325873,"byte_end":8325969,"line_start":15,"line_end":15,"column_start":1,"column_end":97}},{"value":"/ doesn't exist yet, or to always create a new file with [`create_new`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8325970,"byte_end":8326044,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8326045,"byte_end":8326048,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::OpenOptions`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8326049,"byte_end":8326111,"line_start":18,"line_end":18,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8326112,"byte_end":8326115,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`read`]: #method.read","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8326116,"byte_end":8326142,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8326143,"byte_end":8326171,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ [`append`]: #method.append","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8326172,"byte_end":8326202,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`truncate`]: #method.truncate","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8326203,"byte_end":8326237,"line_start":23,"line_end":23,"column_start":1,"column_end":35}},{"value":"/ [`create`]: #method.create","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8326238,"byte_end":8326268,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ [`create_new`]: #method.create_new","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8326269,"byte_end":8326307,"line_start":25,"line_end":25,"column_start":1,"column_end":39}},{"value":"/ [`std::fs::OpenOptions`]: https://doc.rust-lang.org/std/fs/struct.OpenOptions.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8326308,"byte_end":8326394,"line_start":26,"line_end":26,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8326395,"byte_end":8326398,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8326399,"byte_end":8326413,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8326414,"byte_end":8326417,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Open a file for reading:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8326418,"byte_end":8326446,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8326447,"byte_end":8326450,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8326451,"byte_end":8326464,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8326465,"byte_end":8326539,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8326540,"byte_end":8326545,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8326546,"byte_end":8326581,"line_start":35,"line_end":35,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8326582,"byte_end":8326585,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8326586,"byte_end":8326619,"line_start":37,"line_end":37,"column_start":1,"column_end":34}},{"value":"/     .read(true)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8326620,"byte_end":8326639,"line_start":38,"line_end":38,"column_start":1,"column_end":20}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8326640,"byte_end":8326662,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/     .await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8326663,"byte_end":8326679,"line_start":40,"line_end":40,"column_start":1,"column_end":17}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8326680,"byte_end":8326685,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8326686,"byte_end":8326703,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8326704,"byte_end":8326711,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8326712,"byte_end":8326715,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Open a file for both reading and writing, and create it if it doesn't exist yet:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8326716,"byte_end":8326800,"line_start":45,"line_end":45,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8326801,"byte_end":8326804,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8326805,"byte_end":8326818,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8326819,"byte_end":8326893,"line_start":48,"line_end":48,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8326894,"byte_end":8326899,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8326900,"byte_end":8326935,"line_start":50,"line_end":50,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8326936,"byte_end":8326939,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8326940,"byte_end":8326973,"line_start":52,"line_end":52,"column_start":1,"column_end":34}},{"value":"/     .read(true)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8326974,"byte_end":8326993,"line_start":53,"line_end":53,"column_start":1,"column_end":20}},{"value":"/     .write(true)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8326994,"byte_end":8327014,"line_start":54,"line_end":54,"column_start":1,"column_end":21}},{"value":"/     .create(true)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8327015,"byte_end":8327036,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8327037,"byte_end":8327059,"line_start":56,"line_end":56,"column_start":1,"column_end":23}},{"value":"/     .await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8327060,"byte_end":8327076,"line_start":57,"line_end":57,"column_start":1,"column_end":17}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8327077,"byte_end":8327082,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8327083,"byte_end":8327100,"line_start":59,"line_end":59,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8327101,"byte_end":8327108,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3570},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8327652,"byte_end":8327655,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"new","qualname":"<OpenOptions>::new","value":"fn () -> OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Creates a blank set of options.","sig":null,"attributes":[{"value":"/ Creates a blank set of options.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8327203,"byte_end":8327238,"line_start":65,"line_end":65,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8327243,"byte_end":8327246,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ All options are initially set to `false`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8327251,"byte_end":8327296,"line_start":67,"line_end":67,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8327301,"byte_end":8327304,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8327309,"byte_end":8327323,"line_start":69,"line_end":69,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8327328,"byte_end":8327331,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8327336,"byte_end":8327349,"line_start":71,"line_end":71,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8327354,"byte_end":8327428,"line_start":72,"line_end":72,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8327433,"byte_end":8327438,"line_start":73,"line_end":73,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8327443,"byte_end":8327478,"line_start":74,"line_end":74,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8327483,"byte_end":8327486,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8327491,"byte_end":8327524,"line_start":76,"line_end":76,"column_start":5,"column_end":38}},{"value":"/     .read(true)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8327529,"byte_end":8327548,"line_start":77,"line_end":77,"column_start":5,"column_end":24}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8327553,"byte_end":8327575,"line_start":78,"line_end":78,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8327580,"byte_end":8327596,"line_start":79,"line_end":79,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8327601,"byte_end":8327606,"line_start":80,"line_end":80,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8327611,"byte_end":8327628,"line_start":81,"line_end":81,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8327633,"byte_end":8327640,"line_start":82,"line_end":82,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3571},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8328226,"byte_end":8328230,"line_start":105,"line_end":105,"column_start":12,"column_end":16},"name":"read","qualname":"<OpenOptions>::read","value":"fn (&mut self, read: bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for read mode.","sig":null,"attributes":[{"value":"/ Configures the option for read mode.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8327735,"byte_end":8327775,"line_start":87,"line_end":87,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8327780,"byte_end":8327783,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means the file will be readable after opening.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8327788,"byte_end":8327870,"line_start":89,"line_end":89,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8327875,"byte_end":8327878,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8327883,"byte_end":8327897,"line_start":91,"line_end":91,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8327902,"byte_end":8327905,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8327910,"byte_end":8327923,"line_start":93,"line_end":93,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8327928,"byte_end":8328002,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8328007,"byte_end":8328012,"line_start":95,"line_end":95,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8328017,"byte_end":8328052,"line_start":96,"line_end":96,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8328057,"byte_end":8328060,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8328065,"byte_end":8328098,"line_start":98,"line_end":98,"column_start":5,"column_end":38}},{"value":"/     .read(true)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8328103,"byte_end":8328122,"line_start":99,"line_end":99,"column_start":5,"column_end":24}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8328127,"byte_end":8328149,"line_start":100,"line_end":100,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8328154,"byte_end":8328170,"line_start":101,"line_end":101,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8328175,"byte_end":8328180,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8328185,"byte_end":8328202,"line_start":103,"line_end":103,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8328207,"byte_end":8328214,"line_start":104,"line_end":104,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3572},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8328950,"byte_end":8328955,"line_start":131,"line_end":131,"column_start":12,"column_end":17},"name":"write","qualname":"<OpenOptions>::write","value":"fn (&mut self, write: bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for write mode.","sig":null,"attributes":[{"value":"/ Configures the option for write mode.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8328327,"byte_end":8328368,"line_start":110,"line_end":110,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8328373,"byte_end":8328376,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means the file will be writable after opening.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8328381,"byte_end":8328463,"line_start":112,"line_end":112,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8328468,"byte_end":8328471,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ If the file already exists, write calls on it will overwrite the previous contents without","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8328476,"byte_end":8328570,"line_start":114,"line_end":114,"column_start":5,"column_end":99}},{"value":"/ truncating it.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8328575,"byte_end":8328593,"line_start":115,"line_end":115,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8328598,"byte_end":8328601,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8328606,"byte_end":8328620,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8328625,"byte_end":8328628,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8328633,"byte_end":8328646,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8328651,"byte_end":8328725,"line_start":120,"line_end":120,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8328730,"byte_end":8328735,"line_start":121,"line_end":121,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8328740,"byte_end":8328775,"line_start":122,"line_end":122,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8328780,"byte_end":8328783,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8328788,"byte_end":8328821,"line_start":124,"line_end":124,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8328826,"byte_end":8328846,"line_start":125,"line_end":125,"column_start":5,"column_end":25}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8328851,"byte_end":8328873,"line_start":126,"line_end":126,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8328878,"byte_end":8328894,"line_start":127,"line_end":127,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8328899,"byte_end":8328904,"line_start":128,"line_end":128,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8328909,"byte_end":8328926,"line_start":129,"line_end":129,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8328931,"byte_end":8328938,"line_start":130,"line_end":130,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3573},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8329640,"byte_end":8329646,"line_start":155,"line_end":155,"column_start":12,"column_end":18},"name":"append","qualname":"<OpenOptions>::append","value":"fn (&mut self, append: bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for append mode.","sig":null,"attributes":[{"value":"/ Configures the option for append mode.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8329055,"byte_end":8329097,"line_start":136,"line_end":136,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8329102,"byte_end":8329105,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means the file will be writable after opening and the file","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8329110,"byte_end":8329204,"line_start":138,"line_end":138,"column_start":5,"column_end":99}},{"value":"/ cursor will be moved to the end of file before every write operaiton.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8329209,"byte_end":8329282,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8329287,"byte_end":8329290,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8329295,"byte_end":8329309,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8329314,"byte_end":8329317,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8329322,"byte_end":8329335,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8329340,"byte_end":8329414,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8329419,"byte_end":8329424,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8329429,"byte_end":8329464,"line_start":146,"line_end":146,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8329469,"byte_end":8329472,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8329477,"byte_end":8329510,"line_start":148,"line_end":148,"column_start":5,"column_end":38}},{"value":"/     .append(true)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8329515,"byte_end":8329536,"line_start":149,"line_end":149,"column_start":5,"column_end":26}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8329541,"byte_end":8329563,"line_start":150,"line_end":150,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8329568,"byte_end":8329584,"line_start":151,"line_end":151,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8329589,"byte_end":8329594,"line_start":152,"line_end":152,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8329599,"byte_end":8329616,"line_start":153,"line_end":153,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8329621,"byte_end":8329628,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3574},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8330454,"byte_end":8330462,"line_start":184,"line_end":184,"column_start":12,"column_end":20},"name":"truncate","qualname":"<OpenOptions>::truncate","value":"fn (&mut self, truncate: bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for truncating the previous file.","sig":null,"attributes":[{"value":"/ Configures the option for truncating the previous file.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8329749,"byte_end":8329808,"line_start":160,"line_end":160,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8329813,"byte_end":8329816,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, the file will be truncated to the length of 0 bytes.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8329821,"byte_end":8329897,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8329902,"byte_end":8329905,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ The file must be opened in [`write`] or [`append`] mode for truncation to work.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8329910,"byte_end":8329993,"line_start":164,"line_end":164,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8329998,"byte_end":8330001,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8330006,"byte_end":8330034,"line_start":166,"line_end":166,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8330039,"byte_end":8330069,"line_start":167,"line_end":167,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8330074,"byte_end":8330077,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8330082,"byte_end":8330096,"line_start":169,"line_end":169,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8330101,"byte_end":8330104,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8330109,"byte_end":8330122,"line_start":171,"line_end":171,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8330127,"byte_end":8330201,"line_start":172,"line_end":172,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8330206,"byte_end":8330211,"line_start":173,"line_end":173,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8330216,"byte_end":8330251,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8330256,"byte_end":8330259,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8330264,"byte_end":8330297,"line_start":176,"line_end":176,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8330302,"byte_end":8330322,"line_start":177,"line_end":177,"column_start":5,"column_end":25}},{"value":"/     .truncate(true)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8330327,"byte_end":8330350,"line_start":178,"line_end":178,"column_start":5,"column_end":28}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8330355,"byte_end":8330377,"line_start":179,"line_end":179,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8330382,"byte_end":8330398,"line_start":180,"line_end":180,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8330403,"byte_end":8330408,"line_start":181,"line_end":181,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8330413,"byte_end":8330430,"line_start":182,"line_end":182,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8330435,"byte_end":8330442,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3575},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8331301,"byte_end":8331307,"line_start":213,"line_end":213,"column_start":12,"column_end":18},"name":"create","qualname":"<OpenOptions>::create","value":"fn (&mut self, create: bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for creating a new file if it doesn't exist.","sig":null,"attributes":[{"value":"/ Configures the option for creating a new file if it doesn't exist.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8330571,"byte_end":8330641,"line_start":189,"line_end":189,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8330646,"byte_end":8330649,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means a new file will be created if it doesn't exist.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8330654,"byte_end":8330743,"line_start":191,"line_end":191,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8330748,"byte_end":8330751,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ The file must be opened in [`write`] or [`append`] mode for file creation to work.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8330756,"byte_end":8330842,"line_start":193,"line_end":193,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8330847,"byte_end":8330850,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8330855,"byte_end":8330883,"line_start":195,"line_end":195,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8330888,"byte_end":8330918,"line_start":196,"line_end":196,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8330923,"byte_end":8330926,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8330931,"byte_end":8330945,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8330950,"byte_end":8330953,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8330958,"byte_end":8330971,"line_start":200,"line_end":200,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8330976,"byte_end":8331050,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8331055,"byte_end":8331060,"line_start":202,"line_end":202,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8331065,"byte_end":8331100,"line_start":203,"line_end":203,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8331105,"byte_end":8331108,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8331113,"byte_end":8331146,"line_start":205,"line_end":205,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8331151,"byte_end":8331171,"line_start":206,"line_end":206,"column_start":5,"column_end":25}},{"value":"/     .create(true)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8331176,"byte_end":8331197,"line_start":207,"line_end":207,"column_start":5,"column_end":26}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8331202,"byte_end":8331224,"line_start":208,"line_end":208,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8331229,"byte_end":8331245,"line_start":209,"line_end":209,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8331250,"byte_end":8331255,"line_start":210,"line_end":210,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8331260,"byte_end":8331277,"line_start":211,"line_end":211,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8331282,"byte_end":8331289,"line_start":212,"line_end":212,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3576},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8332204,"byte_end":8332214,"line_start":243,"line_end":243,"column_start":12,"column_end":22},"name":"create_new","qualname":"<OpenOptions>::create_new","value":"fn (&mut self, create_new: bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for creating a new file or failing if it already exists.","sig":null,"attributes":[{"value":"/ Configures the option for creating a new file or failing if it already exists.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8331410,"byte_end":8331492,"line_start":218,"line_end":218,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8331497,"byte_end":8331500,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means a new file will be created, or the open operation","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8331505,"byte_end":8331596,"line_start":220,"line_end":220,"column_start":5,"column_end":96}},{"value":"/ will fail if the file already exists.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8331601,"byte_end":8331642,"line_start":221,"line_end":221,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8331647,"byte_end":8331650,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ The file must be opened in [`write`] or [`append`] mode for file creation to work.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8331655,"byte_end":8331741,"line_start":223,"line_end":223,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8331746,"byte_end":8331749,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8331754,"byte_end":8331782,"line_start":225,"line_end":225,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8331787,"byte_end":8331817,"line_start":226,"line_end":226,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8331822,"byte_end":8331825,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8331830,"byte_end":8331844,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8331849,"byte_end":8331852,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8331857,"byte_end":8331870,"line_start":230,"line_end":230,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8331875,"byte_end":8331949,"line_start":231,"line_end":231,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8331954,"byte_end":8331959,"line_start":232,"line_end":232,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8331964,"byte_end":8331999,"line_start":233,"line_end":233,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8332004,"byte_end":8332007,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8332012,"byte_end":8332045,"line_start":235,"line_end":235,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8332050,"byte_end":8332070,"line_start":236,"line_end":236,"column_start":5,"column_end":25}},{"value":"/     .create_new(true)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8332075,"byte_end":8332100,"line_start":237,"line_end":237,"column_start":5,"column_end":30}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8332105,"byte_end":8332127,"line_start":238,"line_end":238,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8332132,"byte_end":8332148,"line_start":239,"line_end":239,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8332153,"byte_end":8332158,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8332163,"byte_end":8332180,"line_start":241,"line_end":241,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8332185,"byte_end":8332192,"line_start":242,"line_end":242,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3577},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8333652,"byte_end":8333656,"line_start":284,"line_end":284,"column_start":12,"column_end":16},"name":"open","qualname":"<OpenOptions>::open","value":"fn <P> (&self, path: P) -> impl Future<Output = io::Result<File>>","parent":null,"children":[],"decl_id":null,"docs":" Opens a file with the configured options.","sig":null,"attributes":[{"value":"/ Opens a file with the configured options.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8332329,"byte_end":8332374,"line_start":248,"line_end":248,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8332379,"byte_end":8332382,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8332387,"byte_end":8332399,"line_start":250,"line_end":250,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8332404,"byte_end":8332407,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8332412,"byte_end":8332470,"line_start":252,"line_end":252,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8332475,"byte_end":8332478,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ * The file does not exist and neither [`create`] nor [`create_new`] were set.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8332483,"byte_end":8332564,"line_start":254,"line_end":254,"column_start":5,"column_end":86}},{"value":"/ * The file's parent directory does not exist.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8332569,"byte_end":8332618,"line_start":255,"line_end":255,"column_start":5,"column_end":54}},{"value":"/ * The current process lacks permissions to open the file in the configured mode.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8332623,"byte_end":8332707,"line_start":256,"line_end":256,"column_start":5,"column_end":89}},{"value":"/ * The file already exists and [`create_new`] was set.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8332712,"byte_end":8332769,"line_start":257,"line_end":257,"column_start":5,"column_end":62}},{"value":"/ * Invalid combination of options was used, like [`truncate`] was set but [`write`] wasn't,","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8332774,"byte_end":8332868,"line_start":258,"line_end":258,"column_start":5,"column_end":99}},{"value":"/   or none of [`read`], [`write`], and [`append`] modes was set.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8332873,"byte_end":8332940,"line_start":259,"line_end":259,"column_start":5,"column_end":72}},{"value":"/ * An OS-level occurred, like too many files are open or the file name is too long.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8332945,"byte_end":8333031,"line_start":260,"line_end":260,"column_start":5,"column_end":91}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8333036,"byte_end":8333072,"line_start":261,"line_end":261,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8333077,"byte_end":8333080,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ [`read`]: #method.read","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8333085,"byte_end":8333111,"line_start":263,"line_end":263,"column_start":5,"column_end":31}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8333116,"byte_end":8333144,"line_start":264,"line_end":264,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8333149,"byte_end":8333179,"line_start":265,"line_end":265,"column_start":5,"column_end":35}},{"value":"/ [`truncate`]: #method.truncate","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8333184,"byte_end":8333218,"line_start":266,"line_end":266,"column_start":5,"column_end":39}},{"value":"/ [`create`]: #method.create","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8333223,"byte_end":8333253,"line_start":267,"line_end":267,"column_start":5,"column_end":35}},{"value":"/ [`create_new`]: #method.create_new","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8333258,"byte_end":8333296,"line_start":268,"line_end":268,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8333301,"byte_end":8333304,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8333309,"byte_end":8333323,"line_start":270,"line_end":270,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8333328,"byte_end":8333331,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8333336,"byte_end":8333349,"line_start":272,"line_end":272,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8333354,"byte_end":8333428,"line_start":273,"line_end":273,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8333433,"byte_end":8333438,"line_start":274,"line_end":274,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8333443,"byte_end":8333478,"line_start":275,"line_end":275,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8333483,"byte_end":8333486,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8333491,"byte_end":8333524,"line_start":277,"line_end":277,"column_start":5,"column_end":38}},{"value":"/     .read(true)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8333529,"byte_end":8333548,"line_start":278,"line_end":278,"column_start":5,"column_end":24}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8333553,"byte_end":8333575,"line_start":279,"line_end":279,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8333580,"byte_end":8333596,"line_start":280,"line_end":280,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8333601,"byte_end":8333606,"line_start":281,"line_end":281,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8333611,"byte_end":8333628,"line_start":282,"line_end":282,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8333633,"byte_end":8333640,"line_start":283,"line_end":283,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":3590},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8337530,"byte_end":8337534,"line_start":38,"line_end":38,"column_start":14,"column_end":18},"name":"read","qualname":"::fs::read::read","value":"fn <P> (path: P) -> io::Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the entire contents of a file as raw bytes.","sig":null,"attributes":[{"value":"/ Reads the entire contents of a file as raw bytes.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8336525,"byte_end":8336578,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8336579,"byte_end":8336582,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function for reading entire files. It pre-allocates a buffer based on the","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8336583,"byte_end":8336682,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ file size when available, so it is typically faster than manually opening a file and reading","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8336683,"byte_end":8336779,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/ from it.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8336780,"byte_end":8336792,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8336793,"byte_end":8336796,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If you want to read the contents as a string, use [`read_to_string`] instead.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8336797,"byte_end":8336878,"line_start":12,"line_end":12,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8336879,"byte_end":8336882,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8336883,"byte_end":8336942,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8336943,"byte_end":8336946,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`read_to_string`]: fn.read_to_string.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8336947,"byte_end":8336993,"line_start":16,"line_end":16,"column_start":1,"column_end":47}},{"value":"/ [`std::fs::read`]: https://doc.rust-lang.org/std/fs/fn.read.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8336994,"byte_end":8337062,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8337063,"byte_end":8337066,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8337067,"byte_end":8337079,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8337080,"byte_end":8337083,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8337084,"byte_end":8337142,"line_start":21,"line_end":21,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8337143,"byte_end":8337146,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8337147,"byte_end":8337195,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to read the file.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8337196,"byte_end":8337257,"line_start":24,"line_end":24,"column_start":1,"column_end":62}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8337258,"byte_end":8337294,"line_start":25,"line_end":25,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8337295,"byte_end":8337298,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8337299,"byte_end":8337313,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8337314,"byte_end":8337317,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8337318,"byte_end":8337331,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8337332,"byte_end":8337406,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8337407,"byte_end":8337412,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8337413,"byte_end":8337435,"line_start":32,"line_end":32,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8337436,"byte_end":8337439,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let contents = fs::read(\"a.txt\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8337440,"byte_end":8337484,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8337485,"byte_end":8337490,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8337491,"byte_end":8337508,"line_start":36,"line_end":36,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read.rs","byte_start":8337509,"byte_end":8337516,"line_start":37,"line_end":37,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3609},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8339135,"byte_end":8339143,"line_start":47,"line_end":47,"column_start":14,"column_end":22},"name":"read_dir","qualname":"::fs::read_dir::read_dir","value":"fn <P> (path: P) -> io::Result<ReadDir>","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of entries in a directory.","sig":null,"attributes":[{"value":"/ Returns a stream of entries in a directory.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8338043,"byte_end":8338090,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8338091,"byte_end":8338094,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The stream yields items of type [`io::Result`]`<`[`DirEntry`]`>`. Note that I/O errors can","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8338095,"byte_end":8338189,"line_start":13,"line_end":13,"column_start":1,"column_end":95}},{"value":"/ occur while reading from the stream.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8338190,"byte_end":8338230,"line_start":14,"line_end":14,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8338231,"byte_end":8338234,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read_dir`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8338235,"byte_end":8338298,"line_start":16,"line_end":16,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8338299,"byte_end":8338302,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`io::Result`]: ../io/type.Result.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8338303,"byte_end":8338345,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"/ [`DirEntry`]: struct.DirEntry.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8338346,"byte_end":8338384,"line_start":19,"line_end":19,"column_start":1,"column_end":39}},{"value":"/ [`std::fs::read_dir`]: https://doc.rust-lang.org/std/fs/fn.read_dir.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8338385,"byte_end":8338461,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8338462,"byte_end":8338465,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8338466,"byte_end":8338478,"line_start":22,"line_end":22,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8338479,"byte_end":8338482,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8338483,"byte_end":8338541,"line_start":24,"line_end":24,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8338542,"byte_end":8338545,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing directory.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8338546,"byte_end":8338599,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ * The current process lacks permissions to read the contents of the directory.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8338600,"byte_end":8338682,"line_start":27,"line_end":27,"column_start":1,"column_end":83}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8338683,"byte_end":8338719,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8338720,"byte_end":8338723,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8338724,"byte_end":8338738,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8338739,"byte_end":8338742,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8338743,"byte_end":8338756,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8338757,"byte_end":8338831,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8338832,"byte_end":8338837,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8338838,"byte_end":8338860,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8338861,"byte_end":8338891,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8338892,"byte_end":8338895,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8338896,"byte_end":8338943,"line_start":38,"line_end":38,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8338944,"byte_end":8338947,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ while let Some(res) = entries.next().await {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8338948,"byte_end":8338996,"line_start":40,"line_end":40,"column_start":1,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8338997,"byte_end":8339022,"line_start":41,"line_end":41,"column_start":1,"column_end":26}},{"value":"/     println!(\"{}\", entry.file_name().to_string_lossy());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8339023,"byte_end":8339083,"line_start":42,"line_end":42,"column_start":1,"column_end":61}},{"value":"/ }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8339084,"byte_end":8339089,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8339090,"byte_end":8339095,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8339096,"byte_end":8339113,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8339114,"byte_end":8339121,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4370},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8339948,"byte_end":8339955,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"ReadDir","qualname":"::fs::read_dir::ReadDir","value":"","parent":null,"children":[],"decl_id":null,"docs":" A stream of entries in a directory.","sig":null,"attributes":[{"value":"/ A stream of entries in a directory.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8339423,"byte_end":8339462,"line_start":57,"line_end":57,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8339463,"byte_end":8339466,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ This stream is returned by [`read_dir`] and yields items of type","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8339467,"byte_end":8339535,"line_start":59,"line_end":59,"column_start":1,"column_end":69}},{"value":"/ [`io::Result`]`<`[`DirEntry`]`>`. Each [`DirEntry`] can then retrieve information like entry's","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8339536,"byte_end":8339634,"line_start":60,"line_end":60,"column_start":1,"column_end":99}},{"value":"/ path or metadata.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8339635,"byte_end":8339656,"line_start":61,"line_end":61,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8339657,"byte_end":8339660,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::ReadDir`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8339661,"byte_end":8339719,"line_start":63,"line_end":63,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8339720,"byte_end":8339723,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ [`read_dir`]: fn.read_dir.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8339724,"byte_end":8339758,"line_start":65,"line_end":65,"column_start":1,"column_end":35}},{"value":"/ [`io::Result`]: ../io/type.Result.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8339759,"byte_end":8339801,"line_start":66,"line_end":66,"column_start":1,"column_end":43}},{"value":"/ [`DirEntry`]: struct.DirEntry.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8339802,"byte_end":8339840,"line_start":67,"line_end":67,"column_start":1,"column_end":39}},{"value":"/ [`std::fs::ReadDir`]: https://doc.rust-lang.org/std/fs/struct.ReadDir.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8339841,"byte_end":8339919,"line_start":68,"line_end":68,"column_start":1,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":3629},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8342240,"byte_end":8342249,"line_start":30,"line_end":30,"column_start":14,"column_end":23},"name":"read_link","qualname":"::fs::read_link::read_link","value":"fn <P> (path: P) -> io::Result<PathBuf>","parent":null,"children":[],"decl_id":null,"docs":" Reads a symbolic link and returns the path it points to.","sig":null,"attributes":[{"value":"/ Reads a symbolic link and returns the path it points to.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8341621,"byte_end":8341681,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8341682,"byte_end":8341685,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read_link`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8341686,"byte_end":8341750,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8341751,"byte_end":8341754,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::read_link`]: https://doc.rust-lang.org/std/fs/fn.read_link.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8341755,"byte_end":8341833,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8341834,"byte_end":8341837,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8341838,"byte_end":8341850,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8341851,"byte_end":8341854,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8341855,"byte_end":8341913,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8341914,"byte_end":8341917,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing link.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8341918,"byte_end":8341966,"line_start":16,"line_end":16,"column_start":1,"column_end":49}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8341967,"byte_end":8342003,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8342004,"byte_end":8342007,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8342008,"byte_end":8342022,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8342023,"byte_end":8342026,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8342027,"byte_end":8342040,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8342041,"byte_end":8342115,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8342116,"byte_end":8342121,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8342122,"byte_end":8342144,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8342145,"byte_end":8342148,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let path = fs::read_link(\"a.txt\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8342149,"byte_end":8342194,"line_start":26,"line_end":26,"column_start":1,"column_end":46}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8342195,"byte_end":8342200,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8342201,"byte_end":8342218,"line_start":28,"line_end":28,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_link.rs","byte_start":8342219,"byte_end":8342226,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3640},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8343753,"byte_end":8343767,"line_start":39,"line_end":39,"column_start":14,"column_end":28},"name":"read_to_string","qualname":"::fs::read_to_string::read_to_string","value":"fn <P> (path: P) -> io::Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Reads the entire contents of a file as a string.","sig":null,"attributes":[{"value":"/ Reads the entire contents of a file as a string.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8342673,"byte_end":8342725,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8342726,"byte_end":8342729,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function for reading entire files. It pre-allocates a string based on the","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8342730,"byte_end":8342829,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ file size when available, so it is typically faster than manually opening a file and reading","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8342830,"byte_end":8342926,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/ from it.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8342927,"byte_end":8342939,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8342940,"byte_end":8342943,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If you want to read the contents as raw bytes, use [`read`] instead.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8342944,"byte_end":8343016,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8343017,"byte_end":8343020,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read_to_string`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8343021,"byte_end":8343090,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8343091,"byte_end":8343094,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`read`]: fn.read.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8343095,"byte_end":8343121,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/ [`std::fs::read_to_string`]: https://doc.rust-lang.org/std/fs/fn.read_to_string.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8343122,"byte_end":8343210,"line_start":17,"line_end":17,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8343211,"byte_end":8343214,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8343215,"byte_end":8343227,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8343228,"byte_end":8343231,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8343232,"byte_end":8343290,"line_start":21,"line_end":21,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8343291,"byte_end":8343294,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8343295,"byte_end":8343343,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to read the file.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8343344,"byte_end":8343405,"line_start":24,"line_end":24,"column_start":1,"column_end":62}},{"value":"/ * The contents of the file cannot be read as a UTF-8 string.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8343406,"byte_end":8343470,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8343471,"byte_end":8343507,"line_start":26,"line_end":26,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8343508,"byte_end":8343511,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8343512,"byte_end":8343526,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8343527,"byte_end":8343530,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8343531,"byte_end":8343544,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8343545,"byte_end":8343619,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8343620,"byte_end":8343625,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8343626,"byte_end":8343648,"line_start":33,"line_end":33,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8343649,"byte_end":8343652,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let contents = fs::read_to_string(\"a.txt\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8343653,"byte_end":8343707,"line_start":35,"line_end":35,"column_start":1,"column_end":55}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8343708,"byte_end":8343713,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8343714,"byte_end":8343731,"line_start":37,"line_end":37,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_to_string.rs","byte_start":8343732,"byte_end":8343739,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3651},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8344841,"byte_end":8344851,"line_start":31,"line_end":31,"column_start":14,"column_end":24},"name":"remove_dir","qualname":"::fs::remove_dir::remove_dir","value":"fn <P> (path: P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Removes an empty directory.","sig":null,"attributes":[{"value":"/ Removes an empty directory.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8344174,"byte_end":8344205,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8344206,"byte_end":8344209,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::remove_dir`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8344210,"byte_end":8344275,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8344276,"byte_end":8344279,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::remove_dir`]: https://doc.rust-lang.org/std/fs/fn.remove_dir.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8344280,"byte_end":8344360,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8344361,"byte_end":8344364,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8344365,"byte_end":8344377,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8344378,"byte_end":8344381,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8344382,"byte_end":8344440,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8344441,"byte_end":8344444,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` is not an existing and empty directory.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8344445,"byte_end":8344497,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/ * The current process lacks permissions to remove the directory.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8344498,"byte_end":8344566,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8344567,"byte_end":8344603,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8344604,"byte_end":8344607,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8344608,"byte_end":8344622,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8344623,"byte_end":8344626,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8344627,"byte_end":8344640,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8344641,"byte_end":8344715,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8344716,"byte_end":8344721,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8344722,"byte_end":8344744,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8344745,"byte_end":8344748,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::remove_dir(\"./some/directory\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8344749,"byte_end":8344795,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8344796,"byte_end":8344801,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8344802,"byte_end":8344819,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir.rs","byte_start":8344820,"byte_end":8344827,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3662},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8345949,"byte_end":8345963,"line_start":31,"line_end":31,"column_start":14,"column_end":28},"name":"remove_dir_all","qualname":"::fs::remove_dir_all::remove_dir_all","value":"fn <P> (path: P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Removes a directory and all of its contents.","sig":null,"attributes":[{"value":"/ Removes a directory and all of its contents.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8345249,"byte_end":8345297,"line_start":6,"line_end":6,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8345298,"byte_end":8345301,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::remove_dir_all`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8345302,"byte_end":8345371,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8345372,"byte_end":8345375,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::remove_dir_all`]: https://doc.rust-lang.org/std/fs/fn.remove_dir_all.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8345376,"byte_end":8345464,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8345465,"byte_end":8345468,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8345469,"byte_end":8345481,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8345482,"byte_end":8345485,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8345486,"byte_end":8345544,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8345545,"byte_end":8345548,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` is not an existing and empty directory.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8345549,"byte_end":8345601,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/ * The current process lacks permissions to remove the directory.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8345602,"byte_end":8345670,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8345671,"byte_end":8345707,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8345708,"byte_end":8345711,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8345712,"byte_end":8345726,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8345727,"byte_end":8345730,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8345731,"byte_end":8345744,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8345745,"byte_end":8345819,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8345820,"byte_end":8345825,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8345826,"byte_end":8345848,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8345849,"byte_end":8345852,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::remove_dir_all(\"./some/directory\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8345853,"byte_end":8345903,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8345904,"byte_end":8345909,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8345910,"byte_end":8345927,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_dir_all.rs","byte_start":8345928,"byte_end":8345935,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3673},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8347004,"byte_end":8347015,"line_start":31,"line_end":31,"column_start":14,"column_end":25},"name":"remove_file","qualname":"::fs::remove_file::remove_file","value":"fn <P> (path: P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Removes a file.","sig":null,"attributes":[{"value":"/ Removes a file.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8346365,"byte_end":8346384,"line_start":6,"line_end":6,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8346385,"byte_end":8346388,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::remove_file`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8346389,"byte_end":8346455,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8346456,"byte_end":8346459,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::remove_file`]: https://doc.rust-lang.org/std/fs/fn.remove_file.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8346460,"byte_end":8346542,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8346543,"byte_end":8346546,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8346547,"byte_end":8346559,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8346560,"byte_end":8346563,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8346564,"byte_end":8346622,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8346623,"byte_end":8346626,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8346627,"byte_end":8346675,"line_start":16,"line_end":16,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to remove the file.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8346676,"byte_end":8346739,"line_start":17,"line_end":17,"column_start":1,"column_end":64}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8346740,"byte_end":8346776,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8346777,"byte_end":8346780,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8346781,"byte_end":8346795,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8346796,"byte_end":8346799,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8346800,"byte_end":8346813,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8346814,"byte_end":8346888,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8346889,"byte_end":8346894,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8346895,"byte_end":8346917,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8346918,"byte_end":8346921,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::remove_file(\"a.txt\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8346922,"byte_end":8346958,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8346959,"byte_end":8346964,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8346965,"byte_end":8346982,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/remove_file.rs","byte_start":8346983,"byte_end":8346990,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3684},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8348257,"byte_end":8348263,"line_start":35,"line_end":35,"column_start":14,"column_end":20},"name":"rename","qualname":"::fs::rename::rename","value":"fn <P, Q> (from: P, to: Q) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Renames a file or directory to a new location.","sig":null,"attributes":[{"value":"/ Renames a file or directory to a new location.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8347409,"byte_end":8347459,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8347460,"byte_end":8347463,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ If a file or directory already exists at the target location, it will be overwritten by this","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8347464,"byte_end":8347560,"line_start":8,"line_end":8,"column_start":1,"column_end":97}},{"value":"/ operation.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8347561,"byte_end":8347575,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8347576,"byte_end":8347579,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::rename`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8347580,"byte_end":8347641,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8347642,"byte_end":8347645,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::rename`]: https://doc.rust-lang.org/std/fs/fn.rename.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8347646,"byte_end":8347718,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8347719,"byte_end":8347722,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8347723,"byte_end":8347735,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8347736,"byte_end":8347739,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8347740,"byte_end":8347798,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8347799,"byte_end":8347802,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `from` does not point to an existing file or directory.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8347803,"byte_end":8347864,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ * `from` and `to` are on different filesystems.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8347865,"byte_end":8347916,"line_start":20,"line_end":20,"column_start":1,"column_end":52}},{"value":"/ * The current process lacks permissions to do the rename operation.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8347917,"byte_end":8347988,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8347989,"byte_end":8348025,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8348026,"byte_end":8348029,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8348030,"byte_end":8348044,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8348045,"byte_end":8348048,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8348049,"byte_end":8348062,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8348063,"byte_end":8348137,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8348138,"byte_end":8348143,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8348144,"byte_end":8348166,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8348167,"byte_end":8348170,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ fs::rename(\"a.txt\", \"b.txt\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8348171,"byte_end":8348211,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8348212,"byte_end":8348217,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8348218,"byte_end":8348235,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/rename.rs","byte_start":8348236,"byte_end":8348243,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3696},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8349638,"byte_end":8349653,"line_start":33,"line_end":33,"column_start":14,"column_end":29},"name":"set_permissions","qualname":"::fs::set_permissions::set_permissions","value":"fn <P> (path: P, perm: Permissions) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions of a file or directory.","sig":null,"attributes":[{"value":"/ Changes the permissions of a file or directory.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8348813,"byte_end":8348864,"line_start":6,"line_end":6,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8348865,"byte_end":8348868,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::set_permissions`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8348869,"byte_end":8348939,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8348940,"byte_end":8348943,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::set_permissions`]: https://doc.rust-lang.org/std/fs/fn.set_permissions.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8348944,"byte_end":8349034,"line_start":10,"line_end":10,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8349035,"byte_end":8349038,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8349039,"byte_end":8349051,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8349052,"byte_end":8349055,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8349056,"byte_end":8349114,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8349115,"byte_end":8349118,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8349119,"byte_end":8349180,"line_start":16,"line_end":16,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to change attributes on the file or directory.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8349181,"byte_end":8349271,"line_start":17,"line_end":17,"column_start":1,"column_end":91}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8349272,"byte_end":8349308,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8349309,"byte_end":8349312,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8349313,"byte_end":8349327,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8349328,"byte_end":8349331,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8349332,"byte_end":8349345,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8349346,"byte_end":8349420,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8349421,"byte_end":8349426,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8349427,"byte_end":8349449,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8349450,"byte_end":8349453,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut perm = fs::metadata(\"a.txt\").await?.permissions();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8349454,"byte_end":8349516,"line_start":27,"line_end":27,"column_start":1,"column_end":63}},{"value":"/ perm.set_readonly(true);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8349517,"byte_end":8349545,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/ fs::set_permissions(\"a.txt\", perm).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8349546,"byte_end":8349592,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8349593,"byte_end":8349598,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8349599,"byte_end":8349616,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/set_permissions.rs","byte_start":8349617,"byte_end":8349624,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3706},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8350885,"byte_end":8350901,"line_start":35,"line_end":35,"column_start":14,"column_end":30},"name":"symlink_metadata","qualname":"::fs::symlink_metadata::symlink_metadata","value":"fn <P> (path: P) -> io::Result<Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Reads metadata for a path without following symbolic links.","sig":null,"attributes":[{"value":"/ Reads metadata for a path without following symbolic links.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8349966,"byte_end":8350029,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8350030,"byte_end":8350033,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ If you want to follow symbolic links before reading metadata of the target file or directory,","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8350034,"byte_end":8350131,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ use [`metadata`] instead.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8350132,"byte_end":8350161,"line_start":9,"line_end":9,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8350162,"byte_end":8350165,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::symlink_metadata`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8350166,"byte_end":8350237,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8350238,"byte_end":8350241,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`metadata`]: fn.metadata.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8350242,"byte_end":8350276,"line_start":13,"line_end":13,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::symlink_metadata`]: https://doc.rust-lang.org/std/fs/fn.symlink_metadata.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8350277,"byte_end":8350369,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8350370,"byte_end":8350373,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8350374,"byte_end":8350386,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8350387,"byte_end":8350390,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8350391,"byte_end":8350449,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8350450,"byte_end":8350453,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8350454,"byte_end":8350515,"line_start":20,"line_end":20,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to read metadata for the path.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8350516,"byte_end":8350590,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8350591,"byte_end":8350627,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8350628,"byte_end":8350631,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8350632,"byte_end":8350646,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8350647,"byte_end":8350650,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8350651,"byte_end":8350664,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8350665,"byte_end":8350739,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8350740,"byte_end":8350745,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8350746,"byte_end":8350768,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8350769,"byte_end":8350772,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let perm = fs::symlink_metadata(\"a.txt\").await?.permissions();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8350773,"byte_end":8350839,"line_start":31,"line_end":31,"column_start":1,"column_end":67}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8350840,"byte_end":8350845,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8350846,"byte_end":8350863,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/symlink_metadata.rs","byte_start":8350864,"byte_end":8350871,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3716},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8351997,"byte_end":8352002,"line_start":34,"line_end":34,"column_start":14,"column_end":19},"name":"write","qualname":"::fs::write::write","value":"fn <P, C> (path: P, contents: C) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes a slice of bytes as the new contents of a file.","sig":null,"attributes":[{"value":"/ Writes a slice of bytes as the new contents of a file.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8351205,"byte_end":8351263,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8351264,"byte_end":8351267,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function will create a file if it does not exist, and will entirely replace its contents","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8351268,"byte_end":8351365,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ if it does.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8351366,"byte_end":8351381,"line_start":9,"line_end":9,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8351382,"byte_end":8351385,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::write`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8351386,"byte_end":8351446,"line_start":11,"line_end":11,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8351447,"byte_end":8351450,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::write`]: https://doc.rust-lang.org/std/fs/fn.write.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8351451,"byte_end":8351521,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8351522,"byte_end":8351525,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8351526,"byte_end":8351538,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8351539,"byte_end":8351542,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8351543,"byte_end":8351601,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8351602,"byte_end":8351605,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * The file's parent directory does not exist.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8351606,"byte_end":8351655,"line_start":19,"line_end":19,"column_start":1,"column_end":50}},{"value":"/ * The current process lacks permissions to write to the file.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8351656,"byte_end":8351721,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8351722,"byte_end":8351758,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8351759,"byte_end":8351762,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8351763,"byte_end":8351777,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8351778,"byte_end":8351781,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8351782,"byte_end":8351795,"line_start":25,"line_end":25,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8351796,"byte_end":8351870,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8351871,"byte_end":8351876,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8351877,"byte_end":8351899,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8351900,"byte_end":8351903,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ fs::write(\"a.txt\", b\"Hello world!\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8351904,"byte_end":8351951,"line_start":30,"line_end":30,"column_start":1,"column_end":48}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8351952,"byte_end":8351957,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8351958,"byte_end":8351975,"line_start":32,"line_end":32,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/write.rs","byte_start":8351976,"byte_end":8351983,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":3723},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"path","qualname":"::path","value":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","parent":null,"children":[{"krate":0,"index":3724},{"krate":0,"index":3732},{"krate":0,"index":3755},{"krate":0,"index":3786},{"krate":0,"index":3915},{"krate":0,"index":3995},{"krate":0,"index":4003},{"krate":0,"index":4004},{"krate":0,"index":4005},{"krate":0,"index":4006},{"krate":0,"index":4007}],"decl_id":null,"docs":" Cross-platform path manipulation.","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/utils.rs","byte_start":13641,"byte_end":13668,"line_start":169,"line_end":169,"column_start":13,"column_end":40}},{"value":"! Cross-platform path manipulation.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8352380,"byte_end":8352417,"line_start":1,"line_end":1,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8352418,"byte_end":8352421,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module is an async version of [`std::path`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8352422,"byte_end":8352475,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8352476,"byte_end":8352479,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! This module provides two types, [`PathBuf`] and [`Path`][`Path`] (akin to [`String`]","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8352480,"byte_end":8352568,"line_start":5,"line_end":5,"column_start":1,"column_end":89}},{"value":"! and [`str`]), for working with paths abstractly. These types are thin wrappers","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8352569,"byte_end":8352651,"line_start":6,"line_end":6,"column_start":1,"column_end":83}},{"value":"! around [`OsString`] and [`OsStr`] respectively, meaning that they work directly","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8352652,"byte_end":8352735,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"! on strings according to the local platform's path syntax.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8352736,"byte_end":8352797,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8352798,"byte_end":8352801,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! Paths can be parsed into [`Component`]s by iterating over the structure","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8352802,"byte_end":8352877,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"! returned by the [`components`] method on [`Path`]. [`Component`]s roughly","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8352878,"byte_end":8352955,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"! correspond to the substrings between path separators (`/` or `\\`). You can","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8352956,"byte_end":8353034,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"! reconstruct an equivalent path from components with the [`push`] method on","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8353035,"byte_end":8353113,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"! [`PathBuf`]; note that the paths may differ syntactically by the","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8353114,"byte_end":8353182,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"! normalization described in the documentation for the [`components`] method.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8353183,"byte_end":8353262,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8353263,"byte_end":8353266,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! [`std::path`]: https://doc.rust-lang.org/std/path/index.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8353267,"byte_end":8353331,"line_start":17,"line_end":17,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8353332,"byte_end":8353335,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! ## Simple usage","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8353336,"byte_end":8353355,"line_start":19,"line_end":19,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8353356,"byte_end":8353359,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! Path manipulation includes both parsing components from slices and building","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8353360,"byte_end":8353439,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"! new owned paths.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8353440,"byte_end":8353460,"line_start":22,"line_end":22,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8353461,"byte_end":8353464,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! To parse a path, you can create a [`Path`] slice from a [`str`]","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8353465,"byte_end":8353532,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"! slice and start asking questions:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8353533,"byte_end":8353570,"line_start":25,"line_end":25,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8353571,"byte_end":8353574,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8353575,"byte_end":8353582,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"! use async_std::path::Path;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8353583,"byte_end":8353613,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"! use std::ffi::OsStr;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8353614,"byte_end":8353638,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8353639,"byte_end":8353642,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! let path = Path::new(\"/tmp/foo/bar.txt\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8353643,"byte_end":8353688,"line_start":31,"line_end":31,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8353689,"byte_end":8353692,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! let parent = path.parent();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8353693,"byte_end":8353724,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"! assert_eq!(parent, Some(Path::new(\"/tmp/foo\")));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8353725,"byte_end":8353777,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8353778,"byte_end":8353781,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! let file_stem = path.file_stem();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8353782,"byte_end":8353819,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"! assert_eq!(file_stem, Some(OsStr::new(\"bar\")));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8353820,"byte_end":8353871,"line_start":37,"line_end":37,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8353872,"byte_end":8353875,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! let extension = path.extension();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8353876,"byte_end":8353913,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"! assert_eq!(extension, Some(OsStr::new(\"txt\")));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8353914,"byte_end":8353965,"line_start":40,"line_end":40,"column_start":1,"column_end":52}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8353966,"byte_end":8353973,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8353974,"byte_end":8353977,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"! To build or modify paths, use [`PathBuf`]:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8353978,"byte_end":8354024,"line_start":43,"line_end":43,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8354025,"byte_end":8354028,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8354029,"byte_end":8354036,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"! use async_std::path::PathBuf;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8354037,"byte_end":8354070,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8354071,"byte_end":8354074,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! // This way works...","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8354075,"byte_end":8354099,"line_start":48,"line_end":48,"column_start":1,"column_end":25}},{"value":"! let mut path = PathBuf::from(\"c:\\\\\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8354100,"byte_end":8354141,"line_start":49,"line_end":49,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8354142,"byte_end":8354145,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! path.push(\"windows\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8354146,"byte_end":8354171,"line_start":51,"line_end":51,"column_start":1,"column_end":26}},{"value":"! path.push(\"system32\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8354172,"byte_end":8354198,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8354199,"byte_end":8354202,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"! path.set_extension(\"dll\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8354203,"byte_end":8354233,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8354234,"byte_end":8354237,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! // ... but push is best used if you don't know everything up","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8354238,"byte_end":8354302,"line_start":56,"line_end":56,"column_start":1,"column_end":65}},{"value":"! // front. If you do, this way is better:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8354303,"byte_end":8354347,"line_start":57,"line_end":57,"column_start":1,"column_end":45}},{"value":"! let path: PathBuf = [\"c:\\\\\", \"windows\", \"system32.dll\"].iter().collect();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8354348,"byte_end":8354425,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8354426,"byte_end":8354433,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8354434,"byte_end":8354437,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"! [`Component`]: enum.Component.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8354438,"byte_end":8354476,"line_start":61,"line_end":61,"column_start":1,"column_end":39}},{"value":"! [`components`]: struct.Path.html#method.components","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8354477,"byte_end":8354531,"line_start":62,"line_end":62,"column_start":1,"column_end":55}},{"value":"! [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8354532,"byte_end":8354568,"line_start":63,"line_end":63,"column_start":1,"column_end":37}},{"value":"! [`Path`]: struct.Path.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8354569,"byte_end":8354599,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"! [`push`]: struct.PathBuf.html#method.push","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8354600,"byte_end":8354645,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"! [`String`]: https://doc.rust-lang.org/std/string/struct.String.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8354646,"byte_end":8354717,"line_start":66,"line_end":66,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8354718,"byte_end":8354721,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"! [`str`]: https://doc.rust-lang.org/std/primitive.str.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8354722,"byte_end":8354783,"line_start":68,"line_end":68,"column_start":1,"column_end":62}},{"value":"! [`OsString`]: https://doc.rust-lang.org/std/ffi/struct.OsString.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8354784,"byte_end":8354856,"line_start":69,"line_end":69,"column_start":1,"column_end":73}},{"value":"! [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/mod.rs","byte_start":8354857,"byte_end":8354923,"line_start":70,"line_end":70,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":4384},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8355891,"byte_end":8355900,"line_start":25,"line_end":25,"column_start":12,"column_end":21},"name":"Ancestors","qualname":"::path::ancestors::Ancestors","value":"Ancestors {  }","parent":null,"children":[{"krate":0,"index":4386}],"decl_id":null,"docs":" An iterator over [`Path`] and its ancestors.","sig":null,"attributes":[{"value":"/ An iterator over [`Path`] and its ancestors.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8355398,"byte_end":8355446,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8355447,"byte_end":8355450,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`ancestors`] method on [`Path`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8355451,"byte_end":8355520,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8355521,"byte_end":8355556,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8355557,"byte_end":8355560,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8355561,"byte_end":8355575,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8355576,"byte_end":8355579,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8355580,"byte_end":8355587,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8355588,"byte_end":8355618,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8355619,"byte_end":8355622,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let path = Path::new(\"/foo/bar\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8355623,"byte_end":8355660,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8355661,"byte_end":8355664,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ for ancestor in path.ancestors() {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8355665,"byte_end":8355703,"line_start":17,"line_end":17,"column_start":1,"column_end":39}},{"value":"/     println!(\"{}\", ancestor.display());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8355704,"byte_end":8355747,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8355748,"byte_end":8355753,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8355754,"byte_end":8355761,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8355762,"byte_end":8355765,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`ancestors`]: struct.Path.html#method.ancestors","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8355766,"byte_end":8355818,"line_start":22,"line_end":22,"column_start":1,"column_end":53}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8355819,"byte_end":8355849,"line_start":23,"line_end":23,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":4395},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8356901,"byte_end":8356911,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"name":"Components","qualname":"::path::components::Components","value":"Components {  }","parent":null,"children":[{"krate":0,"index":4397}],"decl_id":null,"docs":" An iterator over the [`Component`]s of a [`Path`].","sig":null,"attributes":[{"value":"/ An iterator over the [`Component`]s of a [`Path`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8356331,"byte_end":8356385,"line_start":6,"line_end":6,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8356386,"byte_end":8356389,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`components`] method on [`Path`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8356390,"byte_end":8356460,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8356461,"byte_end":8356496,"line_start":9,"line_end":9,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8356497,"byte_end":8356500,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8356501,"byte_end":8356515,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8356516,"byte_end":8356519,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8356520,"byte_end":8356527,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8356528,"byte_end":8356558,"line_start":14,"line_end":14,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8356559,"byte_end":8356562,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let path = Path::new(\"/tmp/foo/bar.txt\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8356563,"byte_end":8356608,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8356609,"byte_end":8356612,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ for component in path.components() {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8356613,"byte_end":8356653,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/     println!(\"{:?}\", component);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8356654,"byte_end":8356690,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8356691,"byte_end":8356696,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8356697,"byte_end":8356704,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8356705,"byte_end":8356708,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8356709,"byte_end":8356747,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/ [`components`]: struct.Path.html#method.components","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8356748,"byte_end":8356802,"line_start":24,"line_end":24,"column_start":1,"column_end":55}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8356803,"byte_end":8356833,"line_start":25,"line_end":25,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3740},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8357403,"byte_end":8357410,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"as_path","qualname":"<Components>::as_path","value":"fn (&self) -> &'a Path","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice corresponding to the portion of the path remaining for iteration.","sig":null,"attributes":[{"value":"/ Extracts a slice corresponding to the portion of the path remaining for iteration.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8357000,"byte_end":8357086,"line_start":32,"line_end":32,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8357091,"byte_end":8357094,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8357099,"byte_end":8357113,"line_start":34,"line_end":34,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8357118,"byte_end":8357121,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8357126,"byte_end":8357133,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8357138,"byte_end":8357168,"line_start":37,"line_end":37,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8357173,"byte_end":8357176,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let mut components = Path::new(\"/tmp/foo/bar.txt\").components();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8357181,"byte_end":8357249,"line_start":39,"line_end":39,"column_start":5,"column_end":73}},{"value":"/ components.next();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8357254,"byte_end":8357276,"line_start":40,"line_end":40,"column_start":5,"column_end":27}},{"value":"/ components.next();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8357281,"byte_end":8357303,"line_start":41,"line_end":41,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8357308,"byte_end":8357311,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"foo/bar.txt\"), components.as_path());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8357316,"byte_end":8357379,"line_start":43,"line_end":43,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8357384,"byte_end":8357391,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4425},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8358720,"byte_end":8358724,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"Iter","qualname":"::path::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4427}],"decl_id":null,"docs":" An iterator over the [`Component`]s of a [`Path`], as [`OsStr`] slices.","sig":null,"attributes":[{"value":"/ An iterator over the [`Component`]s of a [`Path`], as [`OsStr`] slices.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8358347,"byte_end":8358422,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8358423,"byte_end":8358426,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`Path`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8358427,"byte_end":8358491,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8358492,"byte_end":8358527,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8358528,"byte_end":8358531,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8358532,"byte_end":8358570,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/ [`iter`]: struct.Path.html#method.iter","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8358571,"byte_end":8358613,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/ [`OsStr`]: ../../std/ffi/struct.OsStr.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8358614,"byte_end":8358660,"line_start":14,"line_end":14,"column_start":1,"column_end":47}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8358661,"byte_end":8358691,"line_start":15,"line_end":15,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3765},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8359169,"byte_end":8359176,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"as_path","qualname":"<Iter>::as_path","value":"fn (&self) -> &'a Path","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice corresponding to the portion of the path remaining for iteration.","sig":null,"attributes":[{"value":"/ Extracts a slice corresponding to the portion of the path remaining for iteration.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8358796,"byte_end":8358882,"line_start":22,"line_end":22,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8358887,"byte_end":8358890,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8358895,"byte_end":8358909,"line_start":24,"line_end":24,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8358914,"byte_end":8358917,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8358922,"byte_end":8358929,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8358934,"byte_end":8358964,"line_start":27,"line_end":27,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8358969,"byte_end":8358972,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ let mut iter = Path::new(\"/tmp/foo/bar.txt\").iter();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8358977,"byte_end":8359033,"line_start":29,"line_end":29,"column_start":5,"column_end":61}},{"value":"/ iter.next();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8359038,"byte_end":8359054,"line_start":30,"line_end":30,"column_start":5,"column_end":21}},{"value":"/ iter.next();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8359059,"byte_end":8359075,"line_start":31,"line_end":31,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8359080,"byte_end":8359083,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"foo/bar.txt\"), iter.as_path());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8359088,"byte_end":8359145,"line_start":33,"line_end":33,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8359150,"byte_end":8359157,"line_start":34,"line_end":34,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4431},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8361863,"byte_end":8361867,"line_start":49,"line_end":49,"column_start":12,"column_end":16},"name":"Path","qualname":"::path::path::Path","value":"Path {  }","parent":null,"children":[{"krate":0,"index":4432}],"decl_id":null,"docs":" A slice of a path.","sig":null,"attributes":[{"value":"/ A slice of a path.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8360584,"byte_end":8360606,"line_start":11,"line_end":11,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8360607,"byte_end":8360610,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This struct is an async version of [`std::path::Path`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8360611,"byte_end":8360670,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8360671,"byte_end":8360674,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This type supports a number of operations for inspecting a path, including","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8360675,"byte_end":8360753,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ breaking the path into its components (separated by `/` on Unix and by either","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8360754,"byte_end":8360835,"line_start":16,"line_end":16,"column_start":1,"column_end":82}},{"value":"/ `/` or `\\` on Windows), extracting the file name, determining whether the path","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8360836,"byte_end":8360918,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/ is absolute, and so on.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8360919,"byte_end":8360946,"line_start":18,"line_end":18,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8360947,"byte_end":8360950,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This is an *unsized* type, meaning that it must always be used behind a","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8360951,"byte_end":8361026,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ pointer like `&` or `Box`. For an owned version of this type,","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8361027,"byte_end":8361092,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/ see [`PathBuf`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8361093,"byte_end":8361113,"line_start":22,"line_end":22,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8361114,"byte_end":8361117,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8361118,"byte_end":8361154,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"/ [`std::path::Path`]: https://doc.rust-lang.org/std/path/struct.Path.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8361155,"byte_end":8361231,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8361232,"byte_end":8361235,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ More details about the overall approach can be found in","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8361236,"byte_end":8361295,"line_start":27,"line_end":27,"column_start":1,"column_end":60}},{"value":"/ the [module documentation](index.html).","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8361296,"byte_end":8361339,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8361340,"byte_end":8361343,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8361344,"byte_end":8361358,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8361359,"byte_end":8361362,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8361363,"byte_end":8361370,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use std::path::Path;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8361371,"byte_end":8361395,"line_start":33,"line_end":33,"column_start":1,"column_end":25}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8361396,"byte_end":8361420,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8361421,"byte_end":8361424,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Note: this example does work on Windows","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8361425,"byte_end":8361471,"line_start":36,"line_end":36,"column_start":1,"column_end":47}},{"value":"/ let path = Path::new(\"./foo/bar.txt\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8361472,"byte_end":8361514,"line_start":37,"line_end":37,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8361515,"byte_end":8361518,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let parent = path.parent();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8361519,"byte_end":8361550,"line_start":39,"line_end":39,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(parent, Some(Path::new(\"./foo\")));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8361551,"byte_end":8361600,"line_start":40,"line_end":40,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8361601,"byte_end":8361604,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ let file_stem = path.file_stem();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8361605,"byte_end":8361642,"line_start":42,"line_end":42,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(file_stem, Some(OsStr::new(\"bar\")));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8361643,"byte_end":8361694,"line_start":43,"line_end":43,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8361695,"byte_end":8361698,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ let extension = path.extension();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8361699,"byte_end":8361736,"line_start":45,"line_end":45,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(extension, Some(OsStr::new(\"txt\")));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8361737,"byte_end":8361788,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8361789,"byte_end":8361796,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3806},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8362499,"byte_end":8362502,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<Path>::new","value":"fn <S> (s: &S) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Directly wraps a string slice as a `Path` slice.","sig":null,"attributes":[{"value":"/ Directly wraps a string slice as a `Path` slice.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8361917,"byte_end":8361969,"line_start":54,"line_end":54,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8361974,"byte_end":8361977,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This is a cost-free conversion.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8361982,"byte_end":8362017,"line_start":56,"line_end":56,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8362022,"byte_end":8362025,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8362030,"byte_end":8362044,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8362049,"byte_end":8362052,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8362057,"byte_end":8362064,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8362069,"byte_end":8362099,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8362104,"byte_end":8362107,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Path::new(\"foo.txt\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8362112,"byte_end":8362137,"line_start":63,"line_end":63,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8362142,"byte_end":8362149,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8362154,"byte_end":8362157,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ You can create `Path`s from `String`s, or even other `Path`s:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8362162,"byte_end":8362227,"line_start":66,"line_end":66,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8362232,"byte_end":8362235,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8362240,"byte_end":8362247,"line_start":68,"line_end":68,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8362252,"byte_end":8362282,"line_start":69,"line_end":69,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8362287,"byte_end":8362290,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ let string = String::from(\"foo.txt\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8362295,"byte_end":8362336,"line_start":71,"line_end":71,"column_start":5,"column_end":46}},{"value":"/ let from_string = Path::new(&string);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8362341,"byte_end":8362382,"line_start":72,"line_end":72,"column_start":5,"column_end":46}},{"value":"/ let from_path = Path::new(&from_string);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8362387,"byte_end":8362431,"line_start":73,"line_end":73,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(from_string, from_path);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8362436,"byte_end":8362475,"line_start":74,"line_end":74,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8362480,"byte_end":8362487,"line_start":75,"line_end":75,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3808},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8363025,"byte_end":8363034,"line_start":94,"line_end":94,"column_start":12,"column_end":21},"name":"as_os_str","qualname":"<Path>::as_os_str","value":"fn (&self) -> &OsStr","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying [`OsStr`] slice.","sig":null,"attributes":[{"value":"/ Returns the underlying [`OsStr`] slice.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8362646,"byte_end":8362689,"line_start":80,"line_end":80,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8362694,"byte_end":8362697,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8362702,"byte_end":8362768,"line_start":82,"line_end":82,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8362773,"byte_end":8362776,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8362781,"byte_end":8362795,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8362800,"byte_end":8362803,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8362808,"byte_end":8362815,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8362820,"byte_end":8362844,"line_start":87,"line_end":87,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8362849,"byte_end":8362852,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8362857,"byte_end":8362887,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8362892,"byte_end":8362895,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ let os_str = Path::new(\"foo.txt\").as_os_str();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8362900,"byte_end":8362950,"line_start":91,"line_end":91,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(os_str, OsStr::new(\"foo.txt\"));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8362955,"byte_end":8363001,"line_start":92,"line_end":92,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8363006,"byte_end":8363013,"line_start":93,"line_end":93,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3809},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8363624,"byte_end":8363630,"line_start":114,"line_end":114,"column_start":12,"column_end":18},"name":"to_str","qualname":"<Path>::to_str","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`&str`] slice if the `Path` is valid unicode.","sig":null,"attributes":[{"value":"/ Returns a [`&str`] slice if the `Path` is valid unicode.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8363096,"byte_end":8363156,"line_start":98,"line_end":98,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8363161,"byte_end":8363164,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This conversion may entail doing a check for UTF-8 validity.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8363169,"byte_end":8363233,"line_start":100,"line_end":100,"column_start":5,"column_end":69}},{"value":"/ Note that validation is performed because non-UTF-8 strings are","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8363238,"byte_end":8363305,"line_start":101,"line_end":101,"column_start":5,"column_end":72}},{"value":"/ perfectly valid for some OS.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8363310,"byte_end":8363342,"line_start":102,"line_end":102,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8363347,"byte_end":8363350,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`&str`]: https://doc.rust-lang.org/std/primitive.str.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8363355,"byte_end":8363417,"line_start":104,"line_end":104,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8363422,"byte_end":8363425,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8363430,"byte_end":8363444,"line_start":106,"line_end":106,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8363449,"byte_end":8363452,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8363457,"byte_end":8363464,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8363469,"byte_end":8363499,"line_start":109,"line_end":109,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8363504,"byte_end":8363507,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.txt\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8363512,"byte_end":8363548,"line_start":111,"line_end":111,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(path.to_str(), Some(\"foo.txt\"));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8363553,"byte_end":8363600,"line_start":112,"line_end":112,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8363605,"byte_end":8363612,"line_start":113,"line_end":113,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3810},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8364423,"byte_end":8364438,"line_start":139,"line_end":139,"column_start":12,"column_end":27},"name":"to_string_lossy","qualname":"<Path>::to_string_lossy","value":"fn (&self) -> Cow<'_, str>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Path` to a [`Cow<str>`].","sig":null,"attributes":[{"value":"/ Converts a `Path` to a [`Cow<str>`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8363695,"byte_end":8363735,"line_start":118,"line_end":118,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8363740,"byte_end":8363743,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Any non-Unicode sequences are replaced with","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8363748,"byte_end":8363795,"line_start":120,"line_end":120,"column_start":5,"column_end":52}},{"value":"/ [`U+FFFD REPLACEMENT CHARACTER`][U+FFFD].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8363800,"byte_end":8363845,"line_start":121,"line_end":121,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8363850,"byte_end":8363853,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ [`Cow<str>`]: https://doc.rust-lang.org/std/borrow/enum.Cow.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8363858,"byte_end":8363926,"line_start":123,"line_end":123,"column_start":5,"column_end":73}},{"value":"/ [U+FFFD]: https://doc.rust-lang.org/std/char/constant.REPLACEMENT_CHARACTER.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8363931,"byte_end":8364015,"line_start":124,"line_end":124,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8364020,"byte_end":8364023,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8364028,"byte_end":8364042,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8364047,"byte_end":8364050,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Calling `to_string_lossy` on a `Path` with valid unicode:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8364055,"byte_end":8364116,"line_start":128,"line_end":128,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8364121,"byte_end":8364124,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8364129,"byte_end":8364136,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8364141,"byte_end":8364171,"line_start":131,"line_end":131,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8364176,"byte_end":8364179,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.txt\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8364184,"byte_end":8364220,"line_start":133,"line_end":133,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(path.to_string_lossy(), \"foo.txt\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8364225,"byte_end":8364275,"line_start":134,"line_end":134,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8364280,"byte_end":8364287,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8364292,"byte_end":8364295,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Had `path` contained invalid unicode, the `to_string_lossy` call might","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8364300,"byte_end":8364374,"line_start":137,"line_end":137,"column_start":5,"column_end":79}},{"value":"/ have returned `\"fo�.txt\"`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8364379,"byte_end":8364411,"line_start":138,"line_end":138,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3811},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8364847,"byte_end":8364858,"line_start":155,"line_end":155,"column_start":12,"column_end":23},"name":"to_path_buf","qualname":"<Path>::to_path_buf","value":"fn (&self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Path` to an owned [`PathBuf`].","sig":null,"attributes":[{"value":"/ Converts a `Path` to an owned [`PathBuf`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8364512,"byte_end":8364558,"line_start":143,"line_end":143,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8364563,"byte_end":8364566,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8364571,"byte_end":8364607,"line_start":145,"line_end":145,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8364612,"byte_end":8364615,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8364620,"byte_end":8364634,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8364639,"byte_end":8364642,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8364647,"byte_end":8364654,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8364659,"byte_end":8364700,"line_start":150,"line_end":150,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8364705,"byte_end":8364708,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ let path_buf = Path::new(\"foo.txt\").to_path_buf();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8364713,"byte_end":8364767,"line_start":152,"line_end":152,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(path_buf, PathBuf::from(\"foo.txt\"));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8364772,"byte_end":8364823,"line_start":153,"line_end":153,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8364828,"byte_end":8364835,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3812},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8365558,"byte_end":8365569,"line_start":177,"line_end":177,"column_start":12,"column_end":23},"name":"is_absolute","qualname":"<Path>::is_absolute","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Path` is absolute, i.e. if it is independent of\n the current directory.","sig":null,"attributes":[{"value":"/ Returns `true` if the `Path` is absolute, i.e. if it is independent of","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8364938,"byte_end":8365012,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ the current directory.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8365017,"byte_end":8365043,"line_start":160,"line_end":160,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8365048,"byte_end":8365051,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ * On Unix, a path is absolute if it starts with the root, so","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8365056,"byte_end":8365120,"line_start":162,"line_end":162,"column_start":5,"column_end":69}},{"value":"/   `is_absolute` and [`has_root`] are equivalent.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8365125,"byte_end":8365177,"line_start":163,"line_end":163,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8365182,"byte_end":8365185,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ * On Windows, a path is absolute if it has a prefix and starts with the","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8365190,"byte_end":8365265,"line_start":165,"line_end":165,"column_start":5,"column_end":80}},{"value":"/   root: `c:\\windows` is absolute, while `c:temp` and `\\temp` are not.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8365270,"byte_end":8365343,"line_start":166,"line_end":166,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8365348,"byte_end":8365351,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ [`has_root`]: #method.has_root","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8365356,"byte_end":8365390,"line_start":168,"line_end":168,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8365395,"byte_end":8365398,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8365403,"byte_end":8365417,"line_start":170,"line_end":170,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8365422,"byte_end":8365425,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8365430,"byte_end":8365437,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8365442,"byte_end":8365472,"line_start":173,"line_end":173,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8365477,"byte_end":8365480,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ assert!(!Path::new(\"foo.txt\").is_absolute());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8365485,"byte_end":8365534,"line_start":175,"line_end":175,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8365539,"byte_end":8365546,"line_start":176,"line_end":176,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3813},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8365985,"byte_end":8365996,"line_start":194,"line_end":194,"column_start":12,"column_end":23},"name":"is_relative","qualname":"<Path>::is_relative","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Path` is relative, i.e. not absolute.","sig":null,"attributes":[{"value":"/ Returns `true` if the `Path` is relative, i.e. not absolute.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8365631,"byte_end":8365695,"line_start":181,"line_end":181,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8365700,"byte_end":8365703,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ See [`is_absolute`]'s documentation for more details.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8365708,"byte_end":8365765,"line_start":183,"line_end":183,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8365770,"byte_end":8365773,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ [`is_absolute`]: #method.is_absolute","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8365778,"byte_end":8365818,"line_start":185,"line_end":185,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8365823,"byte_end":8365826,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8365831,"byte_end":8365845,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8365850,"byte_end":8365853,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8365858,"byte_end":8365865,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8365870,"byte_end":8365900,"line_start":190,"line_end":190,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8365905,"byte_end":8365908,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ assert!(Path::new(\"foo.txt\").is_relative());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8365913,"byte_end":8365961,"line_start":192,"line_end":192,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8365966,"byte_end":8365973,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3814},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8366617,"byte_end":8366625,"line_start":214,"line_end":214,"column_start":12,"column_end":20},"name":"has_root","qualname":"<Path>::has_root","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Path` has a root.","sig":null,"attributes":[{"value":"/ Returns `true` if the `Path` has a root.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8366058,"byte_end":8366102,"line_start":198,"line_end":198,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8366107,"byte_end":8366110,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ * On Unix, a path has a root if it begins with `/`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8366115,"byte_end":8366170,"line_start":200,"line_end":200,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8366175,"byte_end":8366178,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ * On Windows, a path has a root if it:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8366183,"byte_end":8366225,"line_start":202,"line_end":202,"column_start":5,"column_end":47}},{"value":"/     * has no prefix and begins with a separator, e.g. `\\windows`","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8366230,"byte_end":8366298,"line_start":203,"line_end":203,"column_start":5,"column_end":73}},{"value":"/     * has a prefix followed by a separator, e.g. `c:\\windows` but not `c:windows`","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8366303,"byte_end":8366388,"line_start":204,"line_end":204,"column_start":5,"column_end":90}},{"value":"/     * has any non-disk prefix, e.g. `\\\\server\\share`","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8366393,"byte_end":8366449,"line_start":205,"line_end":205,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8366454,"byte_end":8366457,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8366462,"byte_end":8366476,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8366481,"byte_end":8366484,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8366489,"byte_end":8366496,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8366501,"byte_end":8366531,"line_start":210,"line_end":210,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8366536,"byte_end":8366539,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ assert!(Path::new(\"/etc/passwd\").has_root());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8366544,"byte_end":8366593,"line_start":212,"line_end":212,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8366598,"byte_end":8366605,"line_start":213,"line_end":213,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3815},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8367330,"byte_end":8367336,"line_start":237,"line_end":237,"column_start":12,"column_end":18},"name":"parent","qualname":"<Path>::parent","value":"fn (&self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Path` without its final component, if there is one.","sig":null,"attributes":[{"value":"/ Returns the `Path` without its final component, if there is one.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8366684,"byte_end":8366752,"line_start":218,"line_end":218,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8366757,"byte_end":8366760,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if the path terminates in a root or prefix.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8366765,"byte_end":8366829,"line_start":220,"line_end":220,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8366834,"byte_end":8366837,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8366842,"byte_end":8366922,"line_start":222,"line_end":222,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8366927,"byte_end":8366930,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8366935,"byte_end":8366949,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8366954,"byte_end":8366957,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8366962,"byte_end":8366969,"line_start":226,"line_end":226,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8366974,"byte_end":8367004,"line_start":227,"line_end":227,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8367009,"byte_end":8367012,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/foo/bar\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8367017,"byte_end":8367054,"line_start":229,"line_end":229,"column_start":5,"column_end":42}},{"value":"/ let parent = path.parent().unwrap();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8367059,"byte_end":8367099,"line_start":230,"line_end":230,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(parent, Path::new(\"/foo\"));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8367104,"byte_end":8367146,"line_start":231,"line_end":231,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8367151,"byte_end":8367154,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ let grand_parent = parent.parent().unwrap();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8367159,"byte_end":8367207,"line_start":233,"line_end":233,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(grand_parent, Path::new(\"/\"));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8367212,"byte_end":8367257,"line_start":234,"line_end":234,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(grand_parent.parent(), None);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8367262,"byte_end":8367306,"line_start":235,"line_end":235,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8367311,"byte_end":8367318,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3817},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8368459,"byte_end":8368468,"line_start":263,"line_end":263,"column_start":12,"column_end":21},"name":"ancestors","qualname":"<Path>::ancestors","value":"fn (&self) -> Ancestors<'_>","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over `Path` and its ancestors.","sig":null,"attributes":[{"value":"/ Produces an iterator over `Path` and its ancestors.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8367420,"byte_end":8367475,"line_start":241,"line_end":241,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8367480,"byte_end":8367483,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ The iterator will yield the `Path` that is returned if the [`parent`] method is used zero","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8367488,"byte_end":8367581,"line_start":243,"line_end":243,"column_start":5,"column_end":98}},{"value":"/ or more times. That means, the iterator will yield `&self`, `&self.parent().unwrap()`,","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8367586,"byte_end":8367676,"line_start":244,"line_end":244,"column_start":5,"column_end":95}},{"value":"/ `&self.parent().unwrap().parent().unwrap()` and so on. If the [`parent`] method returns","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8367681,"byte_end":8367772,"line_start":245,"line_end":245,"column_start":5,"column_end":96}},{"value":"/ [`None`], the iterator will do likewise. The iterator will always yield at least one value,","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8367777,"byte_end":8367872,"line_start":246,"line_end":246,"column_start":5,"column_end":100}},{"value":"/ namely `&self`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8367877,"byte_end":8367896,"line_start":247,"line_end":247,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8367901,"byte_end":8367904,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8367909,"byte_end":8367976,"line_start":249,"line_end":249,"column_start":5,"column_end":72}},{"value":"/ [`parent`]: struct.Path.html#method.parent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8367981,"byte_end":8368027,"line_start":250,"line_end":250,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8368032,"byte_end":8368035,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8368040,"byte_end":8368054,"line_start":252,"line_end":252,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8368059,"byte_end":8368062,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8368067,"byte_end":8368074,"line_start":254,"line_end":254,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8368079,"byte_end":8368109,"line_start":255,"line_end":255,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8368114,"byte_end":8368117,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ let mut ancestors = Path::new(\"/foo/bar\").ancestors();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8368122,"byte_end":8368180,"line_start":257,"line_end":257,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(ancestors.next(), Some(Path::new(\"/foo/bar\").into()));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8368185,"byte_end":8368254,"line_start":258,"line_end":258,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(ancestors.next(), Some(Path::new(\"/foo\").into()));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8368259,"byte_end":8368324,"line_start":259,"line_end":259,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(ancestors.next(), Some(Path::new(\"/\").into()));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8368329,"byte_end":8368391,"line_start":260,"line_end":260,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(ancestors.next(), None);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8368396,"byte_end":8368435,"line_start":261,"line_end":261,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8368440,"byte_end":8368447,"line_start":262,"line_end":262,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3818},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8369513,"byte_end":8369522,"line_start":290,"line_end":290,"column_start":12,"column_end":21},"name":"file_name","qualname":"<Path>::file_name","value":"fn (&self) -> Option<&OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the final component of the `Path`, if there is one.","sig":null,"attributes":[{"value":"/ Returns the final component of the `Path`, if there is one.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8368546,"byte_end":8368609,"line_start":267,"line_end":267,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8368614,"byte_end":8368617,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ If the path is a normal file, this is the file name. If it's the path of a directory, this","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8368622,"byte_end":8368716,"line_start":269,"line_end":269,"column_start":5,"column_end":99}},{"value":"/ is the directory name.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8368721,"byte_end":8368747,"line_start":270,"line_end":270,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8368752,"byte_end":8368755,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if the path terminates in `..`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8368760,"byte_end":8368812,"line_start":272,"line_end":272,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8368817,"byte_end":8368820,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8368825,"byte_end":8368905,"line_start":274,"line_end":274,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8368910,"byte_end":8368913,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8368918,"byte_end":8368932,"line_start":276,"line_end":276,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8368937,"byte_end":8368940,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8368945,"byte_end":8368952,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8368957,"byte_end":8368981,"line_start":279,"line_end":279,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8368986,"byte_end":8368989,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8368994,"byte_end":8369024,"line_start":281,"line_end":281,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8369029,"byte_end":8369032,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(OsStr::new(\"bin\")), Path::new(\"/usr/bin/\").file_name());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8369037,"byte_end":8369113,"line_start":283,"line_end":283,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(Some(OsStr::new(\"foo.txt\")), Path::new(\"tmp/foo.txt\").file_name());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8369118,"byte_end":8369200,"line_start":284,"line_end":284,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(Some(OsStr::new(\"foo.txt\")), Path::new(\"foo.txt/.\").file_name());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8369205,"byte_end":8369285,"line_start":285,"line_end":285,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(Some(OsStr::new(\"foo.txt\")), Path::new(\"foo.txt/.//\").file_name());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8369290,"byte_end":8369372,"line_start":286,"line_end":286,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(None, Path::new(\"foo.txt/..\").file_name());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8369377,"byte_end":8369435,"line_start":287,"line_end":287,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(None, Path::new(\"/\").file_name());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8369440,"byte_end":8369489,"line_start":288,"line_end":288,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8369494,"byte_end":8369501,"line_start":289,"line_end":289,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3819},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8370776,"byte_end":8370788,"line_start":322,"line_end":322,"column_start":12,"column_end":24},"name":"strip_prefix","qualname":"<Path>::strip_prefix","value":"fn <P> (&self, base: P) -> Result<&Path, StripPrefixError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a path that becomes `self` when joined onto `base`.","sig":null,"attributes":[{"value":"/ Returns a path that becomes `self` when joined onto `base`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8369592,"byte_end":8369655,"line_start":294,"line_end":294,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8369660,"byte_end":8369663,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8369668,"byte_end":8369680,"line_start":296,"line_end":296,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8369685,"byte_end":8369688,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ If `base` is not a prefix of `self` (i.e., [`starts_with`]","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8369693,"byte_end":8369755,"line_start":298,"line_end":298,"column_start":5,"column_end":67}},{"value":"/ returns `false`), returns [`Err`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8369760,"byte_end":8369798,"line_start":299,"line_end":299,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8369803,"byte_end":8369806,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ [`starts_with`]: #method.starts_with","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8369811,"byte_end":8369851,"line_start":301,"line_end":301,"column_start":5,"column_end":45}},{"value":"/ [`Err`]: https://doc.rust-lang.org/std/result/enum.Result.html#variant.Err","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8369856,"byte_end":8369934,"line_start":302,"line_end":302,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8369939,"byte_end":8369942,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8369947,"byte_end":8369961,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8369966,"byte_end":8369969,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8369974,"byte_end":8369981,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8369986,"byte_end":8370027,"line_start":307,"line_end":307,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8370032,"byte_end":8370035,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/test/haha/foo.txt\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8370040,"byte_end":8370087,"line_start":309,"line_end":309,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8370092,"byte_end":8370095,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(path.strip_prefix(\"/\"), Ok(Path::new(\"test/haha/foo.txt\")));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8370100,"byte_end":8370175,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(path.strip_prefix(\"/test\"), Ok(Path::new(\"haha/foo.txt\")));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8370180,"byte_end":8370254,"line_start":312,"line_end":312,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(path.strip_prefix(\"/test/\"), Ok(Path::new(\"haha/foo.txt\")));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8370259,"byte_end":8370334,"line_start":313,"line_end":313,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(path.strip_prefix(\"/test/haha/foo.txt\"), Ok(Path::new(\"\")));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8370339,"byte_end":8370414,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(path.strip_prefix(\"/test/haha/foo.txt/\"), Ok(Path::new(\"\")));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8370419,"byte_end":8370495,"line_start":315,"line_end":315,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(path.strip_prefix(\"test\").is_ok(), false);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8370500,"byte_end":8370557,"line_start":316,"line_end":316,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(path.strip_prefix(\"/haha\").is_ok(), false);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8370562,"byte_end":8370620,"line_start":317,"line_end":317,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8370625,"byte_end":8370628,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ let prefix = PathBuf::from(\"/test/\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8370633,"byte_end":8370674,"line_start":319,"line_end":319,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(path.strip_prefix(prefix), Ok(Path::new(\"haha/foo.txt\")));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8370679,"byte_end":8370752,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8370757,"byte_end":8370764,"line_start":321,"line_end":321,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3821},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8371473,"byte_end":8371484,"line_start":347,"line_end":347,"column_start":12,"column_end":23},"name":"starts_with","qualname":"<Path>::starts_with","value":"fn <P> (&self, base: P) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether `base` is a prefix of `self`.","sig":null,"attributes":[{"value":"/ Determines whether `base` is a prefix of `self`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8370953,"byte_end":8371005,"line_start":329,"line_end":329,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8371010,"byte_end":8371013,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ Only considers whole path components to match.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8371018,"byte_end":8371068,"line_start":331,"line_end":331,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8371073,"byte_end":8371076,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8371081,"byte_end":8371095,"line_start":333,"line_end":333,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8371100,"byte_end":8371103,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8371108,"byte_end":8371115,"line_start":335,"line_end":335,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8371120,"byte_end":8371150,"line_start":336,"line_end":336,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8371155,"byte_end":8371158,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/etc/passwd\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8371163,"byte_end":8371203,"line_start":338,"line_end":338,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8371208,"byte_end":8371211,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ assert!(path.starts_with(\"/etc\"));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8371216,"byte_end":8371254,"line_start":340,"line_end":340,"column_start":5,"column_end":43}},{"value":"/ assert!(path.starts_with(\"/etc/\"));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8371259,"byte_end":8371298,"line_start":341,"line_end":341,"column_start":5,"column_end":44}},{"value":"/ assert!(path.starts_with(\"/etc/passwd\"));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8371303,"byte_end":8371348,"line_start":342,"line_end":342,"column_start":5,"column_end":50}},{"value":"/ assert!(path.starts_with(\"/etc/passwd/\"));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8371353,"byte_end":8371399,"line_start":343,"line_end":343,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8371404,"byte_end":8371407,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ assert!(!path.starts_with(\"/e\"));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8371412,"byte_end":8371449,"line_start":345,"line_end":345,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8371454,"byte_end":8371461,"line_start":346,"line_end":346,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3823},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8371910,"byte_end":8371919,"line_start":364,"line_end":364,"column_start":12,"column_end":21},"name":"ends_with","qualname":"<Path>::ends_with","value":"fn <P> (&self, child: P) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether `child` is a suffix of `self`.","sig":null,"attributes":[{"value":"/ Determines whether `child` is a suffix of `self`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8371584,"byte_end":8371637,"line_start":351,"line_end":351,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8371642,"byte_end":8371645,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Only considers whole path components to match.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8371650,"byte_end":8371700,"line_start":353,"line_end":353,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8371705,"byte_end":8371708,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8371713,"byte_end":8371727,"line_start":355,"line_end":355,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8371732,"byte_end":8371735,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8371740,"byte_end":8371747,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8371752,"byte_end":8371782,"line_start":358,"line_end":358,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8371787,"byte_end":8371790,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/etc/passwd\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8371795,"byte_end":8371835,"line_start":360,"line_end":360,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8371840,"byte_end":8371843,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ assert!(path.ends_with(\"passwd\"));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8371848,"byte_end":8371886,"line_start":362,"line_end":362,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8371891,"byte_end":8371898,"line_start":363,"line_end":363,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3825},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8372761,"byte_end":8372770,"line_start":390,"line_end":390,"column_start":12,"column_end":21},"name":"file_stem","qualname":"<Path>::file_stem","value":"fn (&self) -> Option<&OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the stem (non-extension) portion of [`file_name`].","sig":null,"attributes":[{"value":"/ Extracts the stem (non-extension) portion of [`file_name`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8372019,"byte_end":8372082,"line_start":368,"line_end":368,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8372087,"byte_end":8372090,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ [`file_name`]: struct.Path.html#method.file_name","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8372095,"byte_end":8372147,"line_start":370,"line_end":370,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8372152,"byte_end":8372155,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ The stem is:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8372160,"byte_end":8372176,"line_start":372,"line_end":372,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8372181,"byte_end":8372184,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ * [`None`], if there is no file name","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8372189,"byte_end":8372229,"line_start":374,"line_end":374,"column_start":5,"column_end":45}},{"value":"/ * The entire file name if there is no embedded `.`","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8372234,"byte_end":8372288,"line_start":375,"line_end":375,"column_start":5,"column_end":59}},{"value":"/ * The entire file name if the file name begins with `.` and has no other `.`s within","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8372293,"byte_end":8372381,"line_start":376,"line_end":376,"column_start":5,"column_end":93}},{"value":"/ * Otherwise, the portion of the file name before the final `.`","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8372386,"byte_end":8372452,"line_start":377,"line_end":377,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8372457,"byte_end":8372460,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8372465,"byte_end":8372545,"line_start":379,"line_end":379,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8372550,"byte_end":8372553,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8372558,"byte_end":8372572,"line_start":381,"line_end":381,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8372577,"byte_end":8372580,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8372585,"byte_end":8372592,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8372597,"byte_end":8372627,"line_start":384,"line_end":384,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8372632,"byte_end":8372635,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.rs\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8372640,"byte_end":8372675,"line_start":386,"line_end":386,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8372680,"byte_end":8372683,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"foo\", path.file_stem().unwrap());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8372688,"byte_end":8372737,"line_start":388,"line_end":388,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8372742,"byte_end":8372749,"line_start":389,"line_end":389,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3826},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8373549,"byte_end":8373558,"line_start":415,"line_end":415,"column_start":12,"column_end":21},"name":"extension","qualname":"<Path>::extension","value":"fn (&self) -> Option<&OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the extension of [`file_name`], if possible.","sig":null,"attributes":[{"value":"/ Extracts the extension of [`file_name`], if possible.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8372840,"byte_end":8372897,"line_start":394,"line_end":394,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8372902,"byte_end":8372905,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ The extension is:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8372910,"byte_end":8372931,"line_start":396,"line_end":396,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8372936,"byte_end":8372939,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ * [`None`], if there is no file name","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8372944,"byte_end":8372984,"line_start":398,"line_end":398,"column_start":5,"column_end":45}},{"value":"/ * [`None`], if there is no embedded `.`","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8372989,"byte_end":8373032,"line_start":399,"line_end":399,"column_start":5,"column_end":48}},{"value":"/ * [`None`], if the file name begins with `.` and has no other `.`s within","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8373037,"byte_end":8373114,"line_start":400,"line_end":400,"column_start":5,"column_end":82}},{"value":"/ * Otherwise, the portion of the file name after the final `.`","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8373119,"byte_end":8373184,"line_start":401,"line_end":401,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8373189,"byte_end":8373192,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ [`file_name`]: struct.Path.html#method.file_name","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8373197,"byte_end":8373249,"line_start":403,"line_end":403,"column_start":5,"column_end":57}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8373254,"byte_end":8373334,"line_start":404,"line_end":404,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8373339,"byte_end":8373342,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8373347,"byte_end":8373361,"line_start":406,"line_end":406,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8373366,"byte_end":8373369,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8373374,"byte_end":8373381,"line_start":408,"line_end":408,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8373386,"byte_end":8373416,"line_start":409,"line_end":409,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8373421,"byte_end":8373424,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.rs\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8373429,"byte_end":8373464,"line_start":411,"line_end":411,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8373469,"byte_end":8373472,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"rs\", path.extension().unwrap());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8373477,"byte_end":8373525,"line_start":413,"line_end":413,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8373530,"byte_end":8373537,"line_start":414,"line_end":414,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3827},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8374099,"byte_end":8374103,"line_start":433,"line_end":433,"column_start":12,"column_end":16},"name":"join","qualname":"<Path>::join","value":"fn <P> (&self, path: P) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned [`PathBuf`] with `path` adjoined to `self`.","sig":null,"attributes":[{"value":"/ Creates an owned [`PathBuf`] with `path` adjoined to `self`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8373628,"byte_end":8373692,"line_start":419,"line_end":419,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8373697,"byte_end":8373700,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ See [`PathBuf::push`] for more details on what it means to adjoin a path.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8373705,"byte_end":8373782,"line_start":421,"line_end":421,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8373787,"byte_end":8373790,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8373795,"byte_end":8373831,"line_start":423,"line_end":423,"column_start":5,"column_end":41}},{"value":"/ [`PathBuf::push`]: struct.PathBuf.html#method.push","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8373836,"byte_end":8373890,"line_start":424,"line_end":424,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8373895,"byte_end":8373898,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8373903,"byte_end":8373917,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8373922,"byte_end":8373925,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8373930,"byte_end":8373937,"line_start":428,"line_end":428,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8373942,"byte_end":8373983,"line_start":429,"line_end":429,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8373988,"byte_end":8373991,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"/etc\").join(\"passwd\"), PathBuf::from(\"/etc/passwd\"));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8373996,"byte_end":8374075,"line_start":431,"line_end":431,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8374080,"byte_end":8374087,"line_start":432,"line_end":432,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3829},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8374842,"byte_end":8374856,"line_start":455,"line_end":455,"column_start":12,"column_end":26},"name":"with_file_name","qualname":"<Path>::with_file_name","value":"fn <S> (&self, file_name: S) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned [`PathBuf`] like `self` but with the given file name.","sig":null,"attributes":[{"value":"/ Creates an owned [`PathBuf`] like `self` but with the given file name.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8374206,"byte_end":8374280,"line_start":437,"line_end":437,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8374285,"byte_end":8374288,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ See [`PathBuf::set_file_name`] for more details.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8374293,"byte_end":8374345,"line_start":439,"line_end":439,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8374350,"byte_end":8374353,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8374358,"byte_end":8374394,"line_start":441,"line_end":441,"column_start":5,"column_end":41}},{"value":"/ [`PathBuf::set_file_name`]: struct.PathBuf.html#method.set_file_name","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8374399,"byte_end":8374471,"line_start":442,"line_end":442,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8374476,"byte_end":8374479,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8374484,"byte_end":8374498,"line_start":444,"line_end":444,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8374503,"byte_end":8374506,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8374511,"byte_end":8374518,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8374523,"byte_end":8374564,"line_start":447,"line_end":447,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8374569,"byte_end":8374572,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/tmp/foo.txt\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8374577,"byte_end":8374618,"line_start":449,"line_end":449,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(path.with_file_name(\"bar.txt\"), PathBuf::from(\"/tmp/bar.txt\"));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8374623,"byte_end":8374701,"line_start":450,"line_end":450,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8374706,"byte_end":8374709,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/tmp\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8374714,"byte_end":8374747,"line_start":452,"line_end":452,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(path.with_file_name(\"var\"), PathBuf::from(\"/var\"));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8374752,"byte_end":8374818,"line_start":453,"line_end":453,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8374823,"byte_end":8374830,"line_start":454,"line_end":454,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3831},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8375475,"byte_end":8375489,"line_start":474,"line_end":474,"column_start":12,"column_end":26},"name":"with_extension","qualname":"<Path>::with_extension","value":"fn <S> (&self, extension: S) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned [`PathBuf`] like `self` but with the given extension.","sig":null,"attributes":[{"value":"/ Creates an owned [`PathBuf`] like `self` but with the given extension.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8374971,"byte_end":8375045,"line_start":459,"line_end":459,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8375050,"byte_end":8375053,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ See [`PathBuf::set_extension`] for more details.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8375058,"byte_end":8375110,"line_start":461,"line_end":461,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8375115,"byte_end":8375118,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8375123,"byte_end":8375159,"line_start":463,"line_end":463,"column_start":5,"column_end":41}},{"value":"/ [`PathBuf::set_extension`]: struct.PathBuf.html#method.set_extension","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8375164,"byte_end":8375236,"line_start":464,"line_end":464,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8375241,"byte_end":8375244,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8375249,"byte_end":8375263,"line_start":466,"line_end":466,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8375268,"byte_end":8375271,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8375276,"byte_end":8375283,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8375288,"byte_end":8375329,"line_start":469,"line_end":469,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8375334,"byte_end":8375337,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.rs\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8375342,"byte_end":8375377,"line_start":471,"line_end":471,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(path.with_extension(\"txt\"), PathBuf::from(\"foo.txt\"));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8375382,"byte_end":8375451,"line_start":472,"line_end":472,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8375456,"byte_end":8375463,"line_start":473,"line_end":473,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3833},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8377076,"byte_end":8377086,"line_start":513,"line_end":513,"column_start":12,"column_end":22},"name":"components","qualname":"<Path>::components","value":"fn (&self) -> Components<'_>","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over the [`Component`]s of the path.","sig":null,"attributes":[{"value":"/ Produces an iterator over the [`Component`]s of the path.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8375604,"byte_end":8375665,"line_start":478,"line_end":478,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8375670,"byte_end":8375673,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ When parsing the path, there is a small amount of normalization:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8375678,"byte_end":8375746,"line_start":480,"line_end":480,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8375751,"byte_end":8375754,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ * Repeated separators are ignored, so `a/b` and `a//b` both have","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8375759,"byte_end":8375827,"line_start":482,"line_end":482,"column_start":5,"column_end":73}},{"value":"/   `a` and `b` as components.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8375832,"byte_end":8375864,"line_start":483,"line_end":483,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8375869,"byte_end":8375872,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ * Occurrences of `.` are normalized away, except if they are at the","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8375877,"byte_end":8375948,"line_start":485,"line_end":485,"column_start":5,"column_end":76}},{"value":"/   beginning of the path. For example, `a/./b`, `a/b/`, `a/b/.` and","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8375953,"byte_end":8376023,"line_start":486,"line_end":486,"column_start":5,"column_end":75}},{"value":"/   `a/b` all have `a` and `b` as components, but `./a/b` starts with","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8376028,"byte_end":8376099,"line_start":487,"line_end":487,"column_start":5,"column_end":76}},{"value":"/   an additional [`CurDir`] component.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8376104,"byte_end":8376145,"line_start":488,"line_end":488,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8376150,"byte_end":8376153,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ * A trailing slash is normalized away, `/a/b` and `/a/b/` are equivalent.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8376158,"byte_end":8376235,"line_start":490,"line_end":490,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8376240,"byte_end":8376243,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ Note that no other normalization takes place; in particular, `a/c`","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8376248,"byte_end":8376318,"line_start":492,"line_end":492,"column_start":5,"column_end":75}},{"value":"/ and `a/b/../c` are distinct, to account for the possibility that `b`","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8376323,"byte_end":8376395,"line_start":493,"line_end":493,"column_start":5,"column_end":77}},{"value":"/ is a symbolic link (so its parent isn't `a`).","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8376400,"byte_end":8376449,"line_start":494,"line_end":494,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8376454,"byte_end":8376457,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8376462,"byte_end":8376500,"line_start":496,"line_end":496,"column_start":5,"column_end":43}},{"value":"/ [`CurDir`]: enum.Component.html#variant.CurDir","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8376505,"byte_end":8376555,"line_start":497,"line_end":497,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8376560,"byte_end":8376563,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8376568,"byte_end":8376582,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8376587,"byte_end":8376590,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8376595,"byte_end":8376602,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8376607,"byte_end":8376631,"line_start":502,"line_end":502,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8376636,"byte_end":8376639,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::{Path, Component};","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8376644,"byte_end":8376687,"line_start":504,"line_end":504,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8376692,"byte_end":8376695,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ let mut components = Path::new(\"/tmp/foo.txt\").components();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8376700,"byte_end":8376764,"line_start":506,"line_end":506,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8376769,"byte_end":8376772,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(components.next(), Some(Component::RootDir));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8376777,"byte_end":8376837,"line_start":508,"line_end":508,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(components.next(), Some(Component::Normal(OsStr::new(\"tmp\"))));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8376842,"byte_end":8376920,"line_start":509,"line_end":509,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(components.next(), Some(Component::Normal(OsStr::new(\"foo.txt\"))));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8376925,"byte_end":8377007,"line_start":510,"line_end":510,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(components.next(), None);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8377012,"byte_end":8377052,"line_start":511,"line_end":511,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8377057,"byte_end":8377064,"line_start":512,"line_end":512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3834},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8377992,"byte_end":8377996,"line_start":541,"line_end":541,"column_start":12,"column_end":16},"name":"iter","qualname":"<Path>::iter","value":"fn (&self) -> Iter<'_>","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over the path's components viewed as [`OsStr`]\n slices.","sig":null,"attributes":[{"value":"/ Produces an iterator over the path's components viewed as [`OsStr`]","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8377200,"byte_end":8377271,"line_start":519,"line_end":519,"column_start":5,"column_end":76}},{"value":"/ slices.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8377276,"byte_end":8377287,"line_start":520,"line_end":520,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8377292,"byte_end":8377295,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ For more information about the particulars of how the path is separated","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8377300,"byte_end":8377375,"line_start":522,"line_end":522,"column_start":5,"column_end":80}},{"value":"/ into components, see [`components`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8377380,"byte_end":8377420,"line_start":523,"line_end":523,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8377425,"byte_end":8377428,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ [`components`]: #method.components","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8377433,"byte_end":8377471,"line_start":525,"line_end":525,"column_start":5,"column_end":43}},{"value":"/ [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8377476,"byte_end":8377542,"line_start":526,"line_end":526,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8377547,"byte_end":8377550,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8377555,"byte_end":8377569,"line_start":528,"line_end":528,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8377574,"byte_end":8377577,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8377582,"byte_end":8377589,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8377594,"byte_end":8377618,"line_start":531,"line_end":531,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8377623,"byte_end":8377626,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::{self, Path};","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8377631,"byte_end":8377669,"line_start":533,"line_end":533,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8377674,"byte_end":8377677,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ let mut it = Path::new(\"/tmp/foo.txt\").iter();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8377682,"byte_end":8377732,"line_start":535,"line_end":535,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(it.next(), Some(OsStr::new(&path::MAIN_SEPARATOR.to_string())));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8377737,"byte_end":8377816,"line_start":536,"line_end":536,"column_start":5,"column_end":84}},{"value":"/ assert_eq!(it.next(), Some(OsStr::new(\"tmp\")));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8377821,"byte_end":8377872,"line_start":537,"line_end":537,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(it.next(), Some(OsStr::new(\"foo.txt\")));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8377877,"byte_end":8377932,"line_start":538,"line_end":538,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(it.next(), None)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8377937,"byte_end":8377968,"line_start":539,"line_end":539,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8377973,"byte_end":8377980,"line_start":540,"line_end":540,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3835},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8378499,"byte_end":8378506,"line_start":561,"line_end":561,"column_start":12,"column_end":19},"name":"display","qualname":"<Path>::display","value":"fn (&self) -> Display<'_>","parent":null,"children":[],"decl_id":null,"docs":" Returns an object that implements [`Display`] for safely printing paths\n that may contain non-Unicode data.","sig":null,"attributes":[{"value":"/ Returns an object that implements [`Display`] for safely printing paths","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8378092,"byte_end":8378167,"line_start":547,"line_end":547,"column_start":5,"column_end":80}},{"value":"/ that may contain non-Unicode data.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8378172,"byte_end":8378210,"line_start":548,"line_end":548,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8378215,"byte_end":8378218,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ [`Display`]: https://doc.rust-lang.org/std/fmt/trait.Display.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8378223,"byte_end":8378292,"line_start":550,"line_end":550,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8378297,"byte_end":8378300,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8378305,"byte_end":8378319,"line_start":552,"line_end":552,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8378324,"byte_end":8378327,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8378332,"byte_end":8378339,"line_start":554,"line_end":554,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8378344,"byte_end":8378374,"line_start":555,"line_end":555,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8378379,"byte_end":8378382,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/tmp/foo.rs\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8378387,"byte_end":8378427,"line_start":557,"line_end":557,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8378432,"byte_end":8378435,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ println!(\"{}\", path.display());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8378440,"byte_end":8378475,"line_start":559,"line_end":559,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8378480,"byte_end":8378487,"line_start":560,"line_end":560,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3836},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8379233,"byte_end":8379241,"line_start":587,"line_end":587,"column_start":18,"column_end":26},"name":"metadata","qualname":"<Path>::metadata","value":"fn (&self) -> io::Result<fs::Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Reads the metadata of a file or directory.","sig":null,"attributes":[{"value":"/ Reads the metadata of a file or directory.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8378571,"byte_end":8378617,"line_start":565,"line_end":565,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8378622,"byte_end":8378625,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8378630,"byte_end":8378707,"line_start":567,"line_end":567,"column_start":5,"column_end":82}},{"value":"/ destination file.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8378712,"byte_end":8378733,"line_start":568,"line_end":568,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8378738,"byte_end":8378741,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::metadata`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8378746,"byte_end":8378787,"line_start":570,"line_end":570,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8378792,"byte_end":8378795,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ [`fs::metadata`]: ../fs/fn.metadata.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8378800,"byte_end":8378844,"line_start":572,"line_end":572,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8378849,"byte_end":8378852,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8378857,"byte_end":8378871,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8378876,"byte_end":8378879,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8378884,"byte_end":8378897,"line_start":576,"line_end":576,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8378902,"byte_end":8378976,"line_start":577,"line_end":577,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8378981,"byte_end":8378986,"line_start":578,"line_end":578,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8378991,"byte_end":8379021,"line_start":579,"line_end":579,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8379026,"byte_end":8379029,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/Minas/tirith\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8379034,"byte_end":8379076,"line_start":581,"line_end":581,"column_start":5,"column_end":47}},{"value":"/ let metadata = path.metadata().await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8379081,"byte_end":8379123,"line_start":582,"line_end":582,"column_start":5,"column_end":47}},{"value":"/ println!(\"{:?}\", metadata.file_type());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8379128,"byte_end":8379171,"line_start":583,"line_end":583,"column_start":5,"column_end":48}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8379176,"byte_end":8379181,"line_start":584,"line_end":584,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8379186,"byte_end":8379203,"line_start":585,"line_end":585,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8379208,"byte_end":8379215,"line_start":586,"line_end":586,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3839},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8379934,"byte_end":8379950,"line_start":610,"line_end":610,"column_start":18,"column_end":34},"name":"symlink_metadata","qualname":"<Path>::symlink_metadata","value":"fn (&self) -> io::Result<fs::Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Reads the metadata of a file or directory without following symbolic links.","sig":null,"attributes":[{"value":"/ Reads the metadata of a file or directory without following symbolic links.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8379323,"byte_end":8379402,"line_start":591,"line_end":591,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8379407,"byte_end":8379410,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::symlink_metadata`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8379415,"byte_end":8379464,"line_start":593,"line_end":593,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8379469,"byte_end":8379472,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ [`fs::symlink_metadata`]: ../fs/fn.symlink_metadata.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8379477,"byte_end":8379537,"line_start":595,"line_end":595,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8379542,"byte_end":8379545,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8379550,"byte_end":8379564,"line_start":597,"line_end":597,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8379569,"byte_end":8379572,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8379577,"byte_end":8379590,"line_start":599,"line_end":599,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8379595,"byte_end":8379669,"line_start":600,"line_end":600,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8379674,"byte_end":8379679,"line_start":601,"line_end":601,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8379684,"byte_end":8379714,"line_start":602,"line_end":602,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8379719,"byte_end":8379722,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/Minas/tirith\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8379727,"byte_end":8379769,"line_start":604,"line_end":604,"column_start":5,"column_end":47}},{"value":"/ let metadata = path.symlink_metadata().await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8379774,"byte_end":8379824,"line_start":605,"line_end":605,"column_start":5,"column_end":55}},{"value":"/ println!(\"{:?}\", metadata.file_type());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8379829,"byte_end":8379872,"line_start":606,"line_end":606,"column_start":5,"column_end":48}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8379877,"byte_end":8379882,"line_start":607,"line_end":607,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8379887,"byte_end":8379904,"line_start":608,"line_end":608,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8379909,"byte_end":8379916,"line_start":609,"line_end":609,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3842},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8380738,"byte_end":8380750,"line_start":635,"line_end":635,"column_start":18,"column_end":30},"name":"canonicalize","qualname":"<Path>::canonicalize","value":"fn (&self) -> io::Result<PathBuf>","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical form of a path.","sig":null,"attributes":[{"value":"/ Returns the canonical form of a path.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8380040,"byte_end":8380081,"line_start":614,"line_end":614,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8380086,"byte_end":8380089,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ The returned path is in absolute form with all intermediate components normalized and","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8380094,"byte_end":8380183,"line_start":616,"line_end":616,"column_start":5,"column_end":94}},{"value":"/ symbolic links resolved.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8380188,"byte_end":8380216,"line_start":617,"line_end":617,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8380221,"byte_end":8380224,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::canonicalize`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8380229,"byte_end":8380274,"line_start":619,"line_end":619,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8380279,"byte_end":8380282,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ [`fs::canonicalize`]: ../fs/fn.canonicalize.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8380287,"byte_end":8380339,"line_start":621,"line_end":621,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8380344,"byte_end":8380347,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8380352,"byte_end":8380366,"line_start":623,"line_end":623,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8380371,"byte_end":8380374,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8380379,"byte_end":8380392,"line_start":625,"line_end":625,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8380397,"byte_end":8380471,"line_start":626,"line_end":626,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8380476,"byte_end":8380481,"line_start":627,"line_end":627,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8380486,"byte_end":8380527,"line_start":628,"line_end":628,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8380532,"byte_end":8380535,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/foo/test/../test/bar.rs\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8380540,"byte_end":8380593,"line_start":630,"line_end":630,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(path.canonicalize().await?, PathBuf::from(\"/foo/test/bar.rs\"));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8380598,"byte_end":8380676,"line_start":631,"line_end":631,"column_start":5,"column_end":83}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8380681,"byte_end":8380686,"line_start":632,"line_end":632,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8380691,"byte_end":8380708,"line_start":633,"line_end":633,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8380713,"byte_end":8380720,"line_start":634,"line_end":634,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3845},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8381366,"byte_end":8381375,"line_start":657,"line_end":657,"column_start":18,"column_end":27},"name":"read_link","qualname":"<Path>::read_link","value":"fn (&self) -> io::Result<PathBuf>","parent":null,"children":[],"decl_id":null,"docs":" Reads a symbolic link, returning the file that the link points to.","sig":null,"attributes":[{"value":"/ Reads a symbolic link, returning the file that the link points to.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8380831,"byte_end":8380901,"line_start":639,"line_end":639,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8380906,"byte_end":8380909,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::read_link`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8380914,"byte_end":8380956,"line_start":641,"line_end":641,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8380961,"byte_end":8380964,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ [`fs::read_link`]: ../fs/fn.read_link.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8380969,"byte_end":8381015,"line_start":643,"line_end":643,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8381020,"byte_end":8381023,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8381028,"byte_end":8381042,"line_start":645,"line_end":645,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8381047,"byte_end":8381050,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8381055,"byte_end":8381068,"line_start":647,"line_end":647,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8381073,"byte_end":8381147,"line_start":648,"line_end":648,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8381152,"byte_end":8381157,"line_start":649,"line_end":649,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8381162,"byte_end":8381192,"line_start":650,"line_end":650,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8381197,"byte_end":8381200,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/laputa/sky_castle.rs\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8381205,"byte_end":8381255,"line_start":652,"line_end":652,"column_start":5,"column_end":55}},{"value":"/ let path_link = path.read_link().await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8381260,"byte_end":8381304,"line_start":653,"line_end":653,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8381309,"byte_end":8381314,"line_start":654,"line_end":654,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8381319,"byte_end":8381336,"line_start":655,"line_end":655,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8381341,"byte_end":8381348,"line_start":656,"line_end":656,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3848},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8382446,"byte_end":8382454,"line_start":691,"line_end":691,"column_start":18,"column_end":26},"name":"read_dir","qualname":"<Path>::read_dir","value":"fn (&self) -> io::Result<fs::ReadDir>","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the entries within a directory.","sig":null,"attributes":[{"value":"/ Returns a stream over the entries within a directory.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8381453,"byte_end":8381510,"line_start":661,"line_end":661,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8381515,"byte_end":8381518,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ The stream will yield instances of [`io::Result`]`<`[`DirEntry`]`>`. New","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8381523,"byte_end":8381599,"line_start":663,"line_end":663,"column_start":5,"column_end":81}},{"value":"/ errors may be encountered after an iterator is initially constructed.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8381604,"byte_end":8381677,"line_start":664,"line_end":664,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8381682,"byte_end":8381685,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::read_dir`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8381690,"byte_end":8381731,"line_start":666,"line_end":666,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8381736,"byte_end":8381739,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ [`io::Result`]: ../io/type.Result.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8381744,"byte_end":8381786,"line_start":668,"line_end":668,"column_start":5,"column_end":47}},{"value":"/ [`DirEntry`]: ../fs/struct.DirEntry.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8381791,"byte_end":8381835,"line_start":669,"line_end":669,"column_start":5,"column_end":49}},{"value":"/ [`fs::read_dir`]: ../fs/fn.read_dir.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8381840,"byte_end":8381884,"line_start":670,"line_end":670,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8381889,"byte_end":8381892,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8381897,"byte_end":8381911,"line_start":672,"line_end":672,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8381916,"byte_end":8381919,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8381924,"byte_end":8381937,"line_start":674,"line_end":674,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8381942,"byte_end":8382016,"line_start":675,"line_end":675,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8382021,"byte_end":8382026,"line_start":676,"line_end":676,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8382031,"byte_end":8382053,"line_start":677,"line_end":677,"column_start":5,"column_end":27}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8382058,"byte_end":8382088,"line_start":678,"line_end":678,"column_start":5,"column_end":35}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8382093,"byte_end":8382123,"line_start":679,"line_end":679,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8382128,"byte_end":8382131,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/laputa\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8382136,"byte_end":8382172,"line_start":681,"line_end":681,"column_start":5,"column_end":41}},{"value":"/ let mut dir = fs::read_dir(&path).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8382177,"byte_end":8382222,"line_start":682,"line_end":682,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8382227,"byte_end":8382230,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8382235,"byte_end":8382279,"line_start":684,"line_end":684,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8382284,"byte_end":8382309,"line_start":685,"line_end":685,"column_start":5,"column_end":30}},{"value":"/     println!(\"{}\", entry.file_name().to_string_lossy());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8382314,"byte_end":8382374,"line_start":686,"line_end":686,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8382379,"byte_end":8382384,"line_start":687,"line_end":687,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8382389,"byte_end":8382394,"line_start":688,"line_end":688,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8382399,"byte_end":8382416,"line_start":689,"line_end":689,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8382421,"byte_end":8382428,"line_start":690,"line_end":690,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3851},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8383444,"byte_end":8383450,"line_start":720,"line_end":720,"column_start":18,"column_end":24},"name":"exists","qualname":"<Path>::exists","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the path points at an existing entity.","sig":null,"attributes":[{"value":"/ Returns `true` if the path points at an existing entity.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8382535,"byte_end":8382595,"line_start":695,"line_end":695,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8382600,"byte_end":8382603,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8382608,"byte_end":8382685,"line_start":697,"line_end":697,"column_start":5,"column_end":82}},{"value":"/ destination file. In case of broken symbolic links this will return `false`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8382690,"byte_end":8382770,"line_start":698,"line_end":698,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8382775,"byte_end":8382778,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ If you cannot access the directory containing the file, e.g., because of a","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8382783,"byte_end":8382861,"line_start":700,"line_end":700,"column_start":5,"column_end":83}},{"value":"/ permission error, this will return `false`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8382866,"byte_end":8382913,"line_start":701,"line_end":701,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8382918,"byte_end":8382921,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8382926,"byte_end":8382940,"line_start":703,"line_end":703,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8382945,"byte_end":8382948,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8382953,"byte_end":8382966,"line_start":705,"line_end":705,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8382971,"byte_end":8383045,"line_start":706,"line_end":706,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8383050,"byte_end":8383055,"line_start":707,"line_end":707,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8383060,"byte_end":8383090,"line_start":708,"line_end":708,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(Path::new(\"does_not_exist.txt\").exists().await, false);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8383095,"byte_end":8383165,"line_start":709,"line_end":709,"column_start":5,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8383170,"byte_end":8383175,"line_start":710,"line_end":710,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8383180,"byte_end":8383197,"line_start":711,"line_end":711,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8383202,"byte_end":8383209,"line_start":712,"line_end":712,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8383214,"byte_end":8383217,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ # See Also","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8383222,"byte_end":8383236,"line_start":714,"line_end":714,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8383241,"byte_end":8383244,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that coerces errors to false. If you want to","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8383249,"byte_end":8383328,"line_start":716,"line_end":716,"column_start":5,"column_end":84}},{"value":"/ check errors, call [fs::metadata].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8383333,"byte_end":8383371,"line_start":717,"line_end":717,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8383376,"byte_end":8383379,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ [fs::metadata]: ../fs/fn.metadata.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8383384,"byte_end":8383426,"line_start":719,"line_end":719,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3854},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384669,"byte_end":8384676,"line_start":752,"line_end":752,"column_start":18,"column_end":25},"name":"is_file","qualname":"<Path>::is_file","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the path exists on disk and is pointing at a regular file.","sig":null,"attributes":[{"value":"/ Returns `true` if the path exists on disk and is pointing at a regular file.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8383520,"byte_end":8383600,"line_start":724,"line_end":724,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8383605,"byte_end":8383608,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8383613,"byte_end":8383690,"line_start":726,"line_end":726,"column_start":5,"column_end":82}},{"value":"/ destination file. In case of broken symbolic links this will return `false`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8383695,"byte_end":8383775,"line_start":727,"line_end":727,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8383780,"byte_end":8383783,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ If you cannot access the directory containing the file, e.g., because of a","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8383788,"byte_end":8383866,"line_start":729,"line_end":729,"column_start":5,"column_end":83}},{"value":"/ permission error, this will return `false`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8383871,"byte_end":8383918,"line_start":730,"line_end":730,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8383923,"byte_end":8383926,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8383931,"byte_end":8383945,"line_start":732,"line_end":732,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8383950,"byte_end":8383953,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8383958,"byte_end":8383971,"line_start":734,"line_end":734,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8383976,"byte_end":8384050,"line_start":735,"line_end":735,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384055,"byte_end":8384060,"line_start":736,"line_end":736,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384065,"byte_end":8384095,"line_start":737,"line_end":737,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(Path::new(\"./is_a_directory/\").is_file().await, false);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384100,"byte_end":8384170,"line_start":738,"line_end":738,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(Path::new(\"a_file.txt\").is_file().await, true);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384175,"byte_end":8384237,"line_start":739,"line_end":739,"column_start":5,"column_end":67}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384242,"byte_end":8384247,"line_start":740,"line_end":740,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384252,"byte_end":8384269,"line_start":741,"line_end":741,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384274,"byte_end":8384281,"line_start":742,"line_end":742,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384286,"byte_end":8384289,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ # See Also","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384294,"byte_end":8384308,"line_start":744,"line_end":744,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384313,"byte_end":8384316,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that coerces errors to false. If you want to","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384321,"byte_end":8384400,"line_start":746,"line_end":746,"column_start":5,"column_end":84}},{"value":"/ check errors, call [fs::metadata] and handle its Result. Then call","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384405,"byte_end":8384475,"line_start":747,"line_end":747,"column_start":5,"column_end":75}},{"value":"/ [fs::Metadata::is_file] if it was Ok.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384480,"byte_end":8384521,"line_start":748,"line_end":748,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384526,"byte_end":8384529,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ [fs::metadata]: ../fs/fn.metadata.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384534,"byte_end":8384576,"line_start":750,"line_end":750,"column_start":5,"column_end":47}},{"value":"/ [fs::Metadata::is_file]: ../fs/struct.Metadata.html#method.is_file","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384581,"byte_end":8384651,"line_start":751,"line_end":751,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3858},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385964,"byte_end":8385970,"line_start":788,"line_end":788,"column_start":18,"column_end":24},"name":"is_dir","qualname":"<Path>::is_dir","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the path exists on disk and is pointing at a directory.","sig":null,"attributes":[{"value":"/ Returns `true` if the path exists on disk and is pointing at a directory.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384815,"byte_end":8384892,"line_start":759,"line_end":759,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384897,"byte_end":8384900,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384905,"byte_end":8384982,"line_start":761,"line_end":761,"column_start":5,"column_end":82}},{"value":"/ destination file. In case of broken symbolic links this will return `false`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8384987,"byte_end":8385067,"line_start":762,"line_end":762,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385072,"byte_end":8385075,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ If you cannot access the directory containing the file, e.g., because of a","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385080,"byte_end":8385158,"line_start":764,"line_end":764,"column_start":5,"column_end":83}},{"value":"/ permission error, this will return `false`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385163,"byte_end":8385210,"line_start":765,"line_end":765,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385215,"byte_end":8385218,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385223,"byte_end":8385237,"line_start":767,"line_end":767,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385242,"byte_end":8385245,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385250,"byte_end":8385263,"line_start":769,"line_end":769,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385268,"byte_end":8385342,"line_start":770,"line_end":770,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385347,"byte_end":8385352,"line_start":771,"line_end":771,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385357,"byte_end":8385387,"line_start":772,"line_end":772,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385392,"byte_end":8385395,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"./is_a_directory/\").is_dir().await, true);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385400,"byte_end":8385468,"line_start":774,"line_end":774,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(Path::new(\"a_file.txt\").is_dir().await, false);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385473,"byte_end":8385535,"line_start":775,"line_end":775,"column_start":5,"column_end":67}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385540,"byte_end":8385545,"line_start":776,"line_end":776,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385550,"byte_end":8385567,"line_start":777,"line_end":777,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385572,"byte_end":8385579,"line_start":778,"line_end":778,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385584,"byte_end":8385587,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ # See Also","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385592,"byte_end":8385606,"line_start":780,"line_end":780,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385611,"byte_end":8385614,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that coerces errors to false. If you want to","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385619,"byte_end":8385698,"line_start":782,"line_end":782,"column_start":5,"column_end":84}},{"value":"/ check errors, call [fs::metadata] and handle its Result. Then call","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385703,"byte_end":8385773,"line_start":783,"line_end":783,"column_start":5,"column_end":75}},{"value":"/ [fs::Metadata::is_dir] if it was Ok.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385778,"byte_end":8385818,"line_start":784,"line_end":784,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385823,"byte_end":8385826,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ [fs::metadata]: ../fs/fn.metadata.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385831,"byte_end":8385873,"line_start":786,"line_end":786,"column_start":5,"column_end":47}},{"value":"/ [fs::Metadata::is_dir]: ../fs/struct.Metadata.html#method.is_dir","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8385878,"byte_end":8385946,"line_start":787,"line_end":787,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3862},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386537,"byte_end":8386550,"line_start":809,"line_end":809,"column_start":12,"column_end":25},"name":"into_path_buf","qualname":"<Path>::into_path_buf","value":"fn (self: Box<Path>) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Converts a [`Box<Path>`][`Box`] into a [`PathBuf`] without copying or\n allocating.","sig":null,"attributes":[{"value":"/ Converts a [`Box<Path>`][`Box`] into a [`PathBuf`] without copying or","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386108,"byte_end":8386181,"line_start":795,"line_end":795,"column_start":5,"column_end":78}},{"value":"/ allocating.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386186,"byte_end":8386201,"line_start":796,"line_end":796,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386206,"byte_end":8386209,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ [`Box`]: https://doc.rust-lang.org/std/boxed/struct.Box.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386214,"byte_end":8386278,"line_start":798,"line_end":798,"column_start":5,"column_end":69}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386283,"byte_end":8386319,"line_start":799,"line_end":799,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386324,"byte_end":8386327,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386332,"byte_end":8386346,"line_start":801,"line_end":801,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386351,"byte_end":8386354,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386359,"byte_end":8386366,"line_start":803,"line_end":803,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386371,"byte_end":8386401,"line_start":804,"line_end":804,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386406,"byte_end":8386409,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ let path: Box<Path> = Path::new(\"foo.txt\").into();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386414,"byte_end":8386468,"line_start":806,"line_end":806,"column_start":5,"column_end":59}},{"value":"/ let path_buf = path.into_path_buf();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386473,"byte_end":8386513,"line_start":807,"line_end":807,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386518,"byte_end":8386525,"line_start":808,"line_end":808,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4709},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8393553,"byte_end":8393560,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"name":"PathBuf","qualname":"::path::pathbuf::PathBuf","value":"PathBuf {  }","parent":null,"children":[{"krate":0,"index":4710}],"decl_id":null,"docs":" This struct is an async version of [`std::path::PathBuf`].","sig":null,"attributes":[{"value":"/ This struct is an async version of [`std::path::PathBuf`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8393324,"byte_end":8393386,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8393387,"byte_end":8393390,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::path::Path`]: https://doc.rust-lang.org/std/path/struct.PathBuf.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8393391,"byte_end":8393470,"line_start":19,"line_end":19,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3931},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8393801,"byte_end":8393804,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<PathBuf>::new","value":"fn () -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Allocates an empty `PathBuf`.","sig":null,"attributes":[{"value":"/ Allocates an empty `PathBuf`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8393616,"byte_end":8393649,"line_start":26,"line_end":26,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8393654,"byte_end":8393657,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8393662,"byte_end":8393676,"line_start":28,"line_end":28,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8393681,"byte_end":8393684,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8393689,"byte_end":8393696,"line_start":30,"line_end":30,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8393701,"byte_end":8393734,"line_start":31,"line_end":31,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8393739,"byte_end":8393742,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ let path = PathBuf::new();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8393747,"byte_end":8393777,"line_start":33,"line_end":33,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8393782,"byte_end":8393789,"line_start":34,"line_end":34,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3932},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8394165,"byte_end":8394172,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"as_path","qualname":"<PathBuf>::as_path","value":"fn (&self) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Coerces to a [`Path`] slice.","sig":null,"attributes":[{"value":"/ Coerces to a [`Path`] slice.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8393872,"byte_end":8393904,"line_start":39,"line_end":39,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8393909,"byte_end":8393912,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8393917,"byte_end":8393947,"line_start":41,"line_end":41,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8393952,"byte_end":8393955,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8393960,"byte_end":8393974,"line_start":43,"line_end":43,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8393979,"byte_end":8393982,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8393987,"byte_end":8393994,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8393999,"byte_end":8394040,"line_start":46,"line_end":46,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8394045,"byte_end":8394048,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ let p = PathBuf::from(\"/test\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8394053,"byte_end":8394088,"line_start":48,"line_end":48,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(Path::new(\"/test\"), p.as_path());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8394093,"byte_end":8394141,"line_start":49,"line_end":49,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8394146,"byte_end":8394153,"line_start":50,"line_end":50,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3933},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8395166,"byte_end":8395170,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"push","qualname":"<PathBuf>::push","value":"fn <P> (&mut self, path: P) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Extends `self` with `path`.","sig":null,"attributes":[{"value":"/ Extends `self` with `path`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8394238,"byte_end":8394269,"line_start":55,"line_end":55,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8394274,"byte_end":8394277,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ If `path` is absolute, it replaces the current path.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8394282,"byte_end":8394338,"line_start":57,"line_end":57,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8394343,"byte_end":8394346,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ On Windows:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8394351,"byte_end":8394366,"line_start":59,"line_end":59,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8394371,"byte_end":8394374,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ * if `path` has a root but no prefix (e.g., `\\windows`), it","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8394379,"byte_end":8394442,"line_start":61,"line_end":61,"column_start":5,"column_end":68}},{"value":"/   replaces everything except for the prefix (if any) of `self`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8394447,"byte_end":8394514,"line_start":62,"line_end":62,"column_start":5,"column_end":72}},{"value":"/ * if `path` has a prefix but no root, it replaces `self`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8394519,"byte_end":8394580,"line_start":63,"line_end":63,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8394585,"byte_end":8394588,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8394593,"byte_end":8394607,"line_start":65,"line_end":65,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8394612,"byte_end":8394615,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Pushing a relative path extends the existing path:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8394620,"byte_end":8394674,"line_start":67,"line_end":67,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8394679,"byte_end":8394682,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8394687,"byte_end":8394694,"line_start":69,"line_end":69,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8394699,"byte_end":8394732,"line_start":70,"line_end":70,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8394737,"byte_end":8394740,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ let mut path = PathBuf::from(\"/tmp\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8394745,"byte_end":8394786,"line_start":72,"line_end":72,"column_start":5,"column_end":46}},{"value":"/ path.push(\"file.bk\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8394791,"byte_end":8394816,"line_start":73,"line_end":73,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(path, PathBuf::from(\"/tmp/file.bk\"));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8394821,"byte_end":8394873,"line_start":74,"line_end":74,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8394878,"byte_end":8394885,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8394890,"byte_end":8394893,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Pushing an absolute path replaces the existing path:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8394898,"byte_end":8394954,"line_start":77,"line_end":77,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8394959,"byte_end":8394962,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8394967,"byte_end":8394974,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8394979,"byte_end":8395012,"line_start":80,"line_end":80,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8395017,"byte_end":8395020,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ let mut path = PathBuf::from(\"/tmp\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8395025,"byte_end":8395066,"line_start":82,"line_end":82,"column_start":5,"column_end":46}},{"value":"/ path.push(\"/etc\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8395071,"byte_end":8395093,"line_start":83,"line_end":83,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(path, PathBuf::from(\"/etc\"));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8395098,"byte_end":8395142,"line_start":84,"line_end":84,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8395147,"byte_end":8395154,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3935},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8395868,"byte_end":8395871,"line_start":110,"line_end":110,"column_start":12,"column_end":15},"name":"pop","qualname":"<PathBuf>::pop","value":"fn (&mut self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Truncates `self` to [`self.parent`].","sig":null,"attributes":[{"value":"/ Truncates `self` to [`self.parent`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8395259,"byte_end":8395299,"line_start":90,"line_end":90,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8395304,"byte_end":8395307,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Returns `false` and does nothing if [`self.parent`] is [`None`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8395312,"byte_end":8395380,"line_start":92,"line_end":92,"column_start":5,"column_end":73}},{"value":"/ Otherwise, returns `true`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8395385,"byte_end":8395415,"line_start":93,"line_end":93,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8395420,"byte_end":8395423,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8395428,"byte_end":8395508,"line_start":95,"line_end":95,"column_start":5,"column_end":85}},{"value":"/ [`self.parent`]: struct.PathBuf.html#method.parent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8395513,"byte_end":8395567,"line_start":96,"line_end":96,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8395572,"byte_end":8395575,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8395580,"byte_end":8395594,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8395599,"byte_end":8395602,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8395607,"byte_end":8395614,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8395619,"byte_end":8395660,"line_start":101,"line_end":101,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8395665,"byte_end":8395668,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let mut p = PathBuf::from(\"/test/test.rs\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8395673,"byte_end":8395720,"line_start":103,"line_end":103,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8395725,"byte_end":8395728,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ p.pop();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8395733,"byte_end":8395745,"line_start":105,"line_end":105,"column_start":5,"column_end":17}},{"value":"/ assert_eq!(Path::new(\"/test\"), p);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8395750,"byte_end":8395788,"line_start":106,"line_end":106,"column_start":5,"column_end":43}},{"value":"/ p.pop();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8395793,"byte_end":8395805,"line_start":107,"line_end":107,"column_start":5,"column_end":17}},{"value":"/ assert_eq!(Path::new(\"/\"), p);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8395810,"byte_end":8395844,"line_start":108,"line_end":108,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8395849,"byte_end":8395856,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3936},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8396901,"byte_end":8396914,"line_start":140,"line_end":140,"column_start":12,"column_end":25},"name":"set_file_name","qualname":"<PathBuf>::set_file_name","value":"fn <S> (&mut self, file_name: S) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Updates [`self.file_name`] to `file_name`.","sig":null,"attributes":[{"value":"/ Updates [`self.file_name`] to `file_name`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8395929,"byte_end":8395975,"line_start":114,"line_end":114,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8395980,"byte_end":8395983,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ If [`self.file_name`] was [`None`], this is equivalent to pushing","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8395988,"byte_end":8396057,"line_start":116,"line_end":116,"column_start":5,"column_end":74}},{"value":"/ `file_name`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8396062,"byte_end":8396078,"line_start":117,"line_end":117,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8396083,"byte_end":8396086,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ Otherwise it is equivalent to calling [`pop`] and then pushing","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8396091,"byte_end":8396157,"line_start":119,"line_end":119,"column_start":5,"column_end":71}},{"value":"/ `file_name`. The new path will be a sibling of the original path.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8396162,"byte_end":8396231,"line_start":120,"line_end":120,"column_start":5,"column_end":74}},{"value":"/ (That is, it will have the same parent.)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8396236,"byte_end":8396280,"line_start":121,"line_end":121,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8396285,"byte_end":8396288,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ [`self.file_name`]: struct.PathBuf.html#method.file_name","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8396293,"byte_end":8396353,"line_start":123,"line_end":123,"column_start":5,"column_end":65}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8396358,"byte_end":8396438,"line_start":124,"line_end":124,"column_start":5,"column_end":85}},{"value":"/ [`pop`]: struct.PathBuf.html#method.pop","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8396443,"byte_end":8396486,"line_start":125,"line_end":125,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8396491,"byte_end":8396494,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8396499,"byte_end":8396513,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8396518,"byte_end":8396521,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8396526,"byte_end":8396533,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8396538,"byte_end":8396571,"line_start":130,"line_end":130,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8396576,"byte_end":8396579,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ let mut buf = PathBuf::from(\"/\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8396584,"byte_end":8396621,"line_start":132,"line_end":132,"column_start":5,"column_end":42}},{"value":"/ assert!(buf.file_name() == None);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8396626,"byte_end":8396663,"line_start":133,"line_end":133,"column_start":5,"column_end":42}},{"value":"/ buf.set_file_name(\"bar\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8396668,"byte_end":8396697,"line_start":134,"line_end":134,"column_start":5,"column_end":34}},{"value":"/ assert!(buf == PathBuf::from(\"/bar\"));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8396702,"byte_end":8396744,"line_start":135,"line_end":135,"column_start":5,"column_end":47}},{"value":"/ assert!(buf.file_name().is_some());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8396749,"byte_end":8396788,"line_start":136,"line_end":136,"column_start":5,"column_end":44}},{"value":"/ buf.set_file_name(\"baz.txt\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8396793,"byte_end":8396826,"line_start":137,"line_end":137,"column_start":5,"column_end":38}},{"value":"/ assert!(buf == PathBuf::from(\"/baz.txt\"));","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8396831,"byte_end":8396877,"line_start":138,"line_end":138,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8396882,"byte_end":8396889,"line_start":139,"line_end":139,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3938},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8397927,"byte_end":8397940,"line_start":169,"line_end":169,"column_start":12,"column_end":25},"name":"set_extension","qualname":"<PathBuf>::set_extension","value":"fn <S> (&mut self, extension: S) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Updates [`self.extension`] to `extension`.","sig":null,"attributes":[{"value":"/ Updates [`self.extension`] to `extension`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8397014,"byte_end":8397060,"line_start":144,"line_end":144,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8397065,"byte_end":8397068,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Returns `false` and does nothing if [`self.file_name`] is [`None`],","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8397073,"byte_end":8397144,"line_start":146,"line_end":146,"column_start":5,"column_end":76}},{"value":"/ returns `true` and updates the extension otherwise.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8397149,"byte_end":8397204,"line_start":147,"line_end":147,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8397209,"byte_end":8397212,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ If [`self.extension`] is [`None`], the extension is added; otherwise","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8397217,"byte_end":8397289,"line_start":149,"line_end":149,"column_start":5,"column_end":77}},{"value":"/ it is replaced.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8397294,"byte_end":8397313,"line_start":150,"line_end":150,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8397318,"byte_end":8397321,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ [`self.file_name`]: struct.PathBuf.html#method.file_name","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8397326,"byte_end":8397386,"line_start":152,"line_end":152,"column_start":5,"column_end":65}},{"value":"/ [`self.extension`]: struct.PathBuf.html#method.extension","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8397391,"byte_end":8397451,"line_start":153,"line_end":153,"column_start":5,"column_end":65}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8397456,"byte_end":8397536,"line_start":154,"line_end":154,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8397541,"byte_end":8397544,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8397549,"byte_end":8397563,"line_start":156,"line_end":156,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8397568,"byte_end":8397571,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8397576,"byte_end":8397583,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8397588,"byte_end":8397629,"line_start":159,"line_end":159,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8397634,"byte_end":8397637,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let mut p = PathBuf::from(\"/feel/the\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8397642,"byte_end":8397685,"line_start":161,"line_end":161,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8397690,"byte_end":8397693,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ p.set_extension(\"force\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8397698,"byte_end":8397727,"line_start":163,"line_end":163,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(Path::new(\"/feel/the.force\"), p.as_path());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8397732,"byte_end":8397790,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8397795,"byte_end":8397798,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ p.set_extension(\"dark_side\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8397803,"byte_end":8397836,"line_start":166,"line_end":166,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(Path::new(\"/feel/the.dark_side\"), p.as_path());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8397841,"byte_end":8397903,"line_start":167,"line_end":167,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8397908,"byte_end":8397915,"line_start":168,"line_end":168,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3940},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8398407,"byte_end":8398421,"line_start":185,"line_end":185,"column_start":12,"column_end":26},"name":"into_os_string","qualname":"<PathBuf>::into_os_string","value":"fn (self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `PathBuf`, returning its internal [`OsString`] storage.","sig":null,"attributes":[{"value":"/ Consumes the `PathBuf`, returning its internal [`OsString`] storage.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8398048,"byte_end":8398120,"line_start":173,"line_end":173,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8398125,"byte_end":8398128,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`OsString`]: https://doc.rust-lang.org/std/ffi/struct.OsString.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8398133,"byte_end":8398205,"line_start":175,"line_end":175,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8398210,"byte_end":8398213,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8398218,"byte_end":8398232,"line_start":177,"line_end":177,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8398237,"byte_end":8398240,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8398245,"byte_end":8398252,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8398257,"byte_end":8398290,"line_start":180,"line_end":180,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8398295,"byte_end":8398298,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ let p = PathBuf::from(\"/the/head\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8398303,"byte_end":8398342,"line_start":182,"line_end":182,"column_start":5,"column_end":44}},{"value":"/ let os_str = p.into_os_string();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8398347,"byte_end":8398383,"line_start":183,"line_end":183,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8398388,"byte_end":8398395,"line_start":184,"line_end":184,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3941},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8398672,"byte_end":8398687,"line_start":193,"line_end":193,"column_start":12,"column_end":27},"name":"into_boxed_path","qualname":"<PathBuf>::into_boxed_path","value":"fn (self) -> Box<Path>","parent":null,"children":[],"decl_id":null,"docs":" Converts this `PathBuf` into a [boxed][`Box`] [`Path`].","sig":null,"attributes":[{"value":"/ Converts this `PathBuf` into a [boxed][`Box`] [`Path`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8398489,"byte_end":8398548,"line_start":189,"line_end":189,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8398553,"byte_end":8398556,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ [`Box`]: https://doc.rust-lang.org/std/boxed/struct.Box.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8398561,"byte_end":8398625,"line_start":191,"line_end":191,"column_start":5,"column_end":69}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8398630,"byte_end":8398660,"line_start":192,"line_end":192,"column_start":5,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":4008},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":4009},{"krate":0,"index":4010},{"krate":0,"index":4011},{"krate":0,"index":4015},{"krate":0,"index":4019},{"krate":0,"index":4020},{"krate":0,"index":4024},{"krate":0,"index":4025},{"krate":0,"index":4106},{"krate":0,"index":4168},{"krate":0,"index":4264}],"decl_id":null,"docs":" Networking primitives for TCP/UDP communication.","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/utils.rs","byte_start":13641,"byte_end":13668,"line_start":169,"line_end":169,"column_start":13,"column_end":40}},{"value":"! Networking primitives for TCP/UDP communication.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8403048,"byte_end":8403100,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8403101,"byte_end":8403104,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module provides networking functionality for the Transmission Control and User","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8403105,"byte_end":8403192,"line_start":3,"line_end":3,"column_start":1,"column_end":88}},{"value":"! Datagram Protocols, as well as types for IP and socket addresses.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8403193,"byte_end":8403262,"line_start":4,"line_end":4,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8403263,"byte_end":8403266,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! This module is an async version of [`std::net`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8403267,"byte_end":8403319,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8403320,"byte_end":8403323,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! # Organization","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8403324,"byte_end":8403342,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8403343,"byte_end":8403346,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8403347,"byte_end":8403435,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"! * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8403436,"byte_end":8403505,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"! * [`IpAddr`] represents IP addresses of either IPv4 or IPv6; [`Ipv4Addr`] and","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8403506,"byte_end":8403587,"line_start":12,"line_end":12,"column_start":1,"column_end":82}},{"value":"!   [`Ipv6Addr`] are respectively IPv4 and IPv6 addresses","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8403588,"byte_end":8403647,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"! * [`SocketAddr`] represents socket addresses of either IPv4 or IPv6; [`SocketAddrV4`]","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8403648,"byte_end":8403737,"line_start":14,"line_end":14,"column_start":1,"column_end":90}},{"value":"!   and [`SocketAddrV6`] are respectively IPv4 and IPv6 socket addresses","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8403738,"byte_end":8403812,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"! * [`ToSocketAddrs`] is a trait that used for generic address resolution when interacting","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8403813,"byte_end":8403905,"line_start":16,"line_end":16,"column_start":1,"column_end":93}},{"value":"!   with networking objects like [`TcpListener`], [`TcpStream`] or [`UdpSocket`]","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8403906,"byte_end":8403988,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"! * Other types are return or parameter types for various methods in this module","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8403989,"byte_end":8404071,"line_start":18,"line_end":18,"column_start":1,"column_end":83}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8404072,"byte_end":8404075,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! [`IpAddr`]: enum.IpAddr.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8404076,"byte_end":8404108,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"! [`Ipv4Addr`]: struct.Ipv4Addr.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8404109,"byte_end":8404147,"line_start":21,"line_end":21,"column_start":1,"column_end":39}},{"value":"! [`Ipv6Addr`]: struct.Ipv6Addr.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8404148,"byte_end":8404186,"line_start":22,"line_end":22,"column_start":1,"column_end":39}},{"value":"! [`SocketAddr`]: enum.SocketAddr.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8404187,"byte_end":8404227,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"! [`SocketAddrV4`]: struct.SocketAddrV4.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8404228,"byte_end":8404274,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"! [`SocketAddrV6`]: struct.SocketAddrV6.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8404275,"byte_end":8404321,"line_start":25,"line_end":25,"column_start":1,"column_end":47}},{"value":"! [`TcpListener`]: struct.TcpListener.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8404322,"byte_end":8404366,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"! [`TcpStream`]: struct.TcpStream.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8404367,"byte_end":8404407,"line_start":27,"line_end":27,"column_start":1,"column_end":41}},{"value":"! [`ToSocketAddrs`]: trait.ToSocketAddrs.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8404408,"byte_end":8404455,"line_start":28,"line_end":28,"column_start":1,"column_end":48}},{"value":"! [`UdpSocket`]: struct.UdpSocket.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8404456,"byte_end":8404496,"line_start":29,"line_end":29,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8404497,"byte_end":8404500,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! # Platform-specific extensions","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8404501,"byte_end":8404535,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8404536,"byte_end":8404539,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! APIs such as Unix domain sockets are available on certain platforms only. You can find","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8404540,"byte_end":8404630,"line_start":33,"line_end":33,"column_start":1,"column_end":91}},{"value":"! platform-specific extensions in the [`async_std::os`] module.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8404631,"byte_end":8404696,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8404697,"byte_end":8404700,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! [`async_std::os`]: ../os/index.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8404701,"byte_end":8404740,"line_start":36,"line_end":36,"column_start":1,"column_end":40}},{"value":"! [`std::net`]: https://doc.rust-lang.org/std/net/index.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8404741,"byte_end":8404803,"line_start":37,"line_end":37,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8404804,"byte_end":8404807,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8404808,"byte_end":8404822,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8404823,"byte_end":8404826,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"! A simple UDP echo server:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8404827,"byte_end":8404856,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8404857,"byte_end":8404860,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8404861,"byte_end":8404874,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8404875,"byte_end":8404949,"line_start":44,"line_end":44,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8404950,"byte_end":8404955,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"! use async_std::net::UdpSocket;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8404956,"byte_end":8404990,"line_start":46,"line_end":46,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8404991,"byte_end":8404994,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8404995,"byte_end":8405053,"line_start":48,"line_end":48,"column_start":1,"column_end":59}},{"value":"! let mut buf = vec![0u8; 1024];","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8405054,"byte_end":8405088,"line_start":49,"line_end":49,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8405089,"byte_end":8405092,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! loop {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8405093,"byte_end":8405103,"line_start":51,"line_end":51,"column_start":1,"column_end":11}},{"value":"!     let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8405104,"byte_end":8405162,"line_start":52,"line_end":52,"column_start":1,"column_end":59}},{"value":"!     socket.send_to(&buf[..n], &peer).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8405163,"byte_end":8405211,"line_start":53,"line_end":53,"column_start":1,"column_end":49}},{"value":"! }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8405212,"byte_end":8405217,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"! #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8405218,"byte_end":8405223,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"! # }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8405224,"byte_end":8405234,"line_start":56,"line_end":56,"column_start":1,"column_end":11}},{"value":"! ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/mod.rs","byte_start":8405235,"byte_end":8405242,"line_start":57,"line_end":57,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":4044},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8406802,"byte_end":8406815,"line_start":45,"line_end":45,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs","parent":null,"children":[{"krate":0,"index":4045},{"krate":0,"index":4046}],"decl_id":null,"docs":" Converts or resolves addresses to [`SocketAddr`] values.","sig":null,"attributes":[{"value":"/ Converts or resolves addresses to [`SocketAddr`] values.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8406224,"byte_end":8406284,"line_start":26,"line_end":26,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8406285,"byte_end":8406288,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait is an async version of [`std::net::ToSocketAddrs`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8406289,"byte_end":8406355,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8406356,"byte_end":8406359,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`std::net::ToSocketAddrs`]: https://doc.rust-lang.org/std/net/trait.ToSocketAddrs.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8406360,"byte_end":8406451,"line_start":30,"line_end":30,"column_start":1,"column_end":92}},{"value":"/ [`SocketAddr`]: enum.SocketAddr.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8406452,"byte_end":8406492,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8406493,"byte_end":8406496,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8406497,"byte_end":8406511,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8406512,"byte_end":8406515,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8406516,"byte_end":8406523,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8406524,"byte_end":8406598,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8406599,"byte_end":8406604,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ use async_std::net::ToSocketAddrs;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8406605,"byte_end":8406643,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8406644,"byte_end":8406647,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let addr = \"localhost:8080\".to_socket_addrs().await?.next().unwrap();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8406648,"byte_end":8406721,"line_start":40,"line_end":40,"column_start":1,"column_end":74}},{"value":"/ println!(\"resolved: {:?}\", addr);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8406722,"byte_end":8406759,"line_start":41,"line_end":41,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8406760,"byte_end":8406765,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8406766,"byte_end":8406783,"line_start":43,"line_end":43,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8406784,"byte_end":8406791,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":4045},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8406910,"byte_end":8406914,"line_start":47,"line_end":47,"column_start":10,"column_end":14},"name":"Iter","qualname":"::net::addr::ToSocketAddrs::Iter","value":"type Iter: Iterator<Item = SocketAddr>;","parent":{"krate":0,"index":4044},"children":[],"decl_id":null,"docs":" Returned iterator over socket addresses which this type may correspond to.\n","sig":null,"attributes":[{"value":"/ Returned iterator over socket addresses which this type may correspond to.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8406822,"byte_end":8406900,"line_start":46,"line_end":46,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":4046},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8407256,"byte_end":8407271,"line_start":55,"line_end":55,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"::net::addr::ToSocketAddrs::to_socket_addrs","value":"fn (&self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":4044},"children":[],"decl_id":null,"docs":" Converts this object to an iterator of resolved `SocketAddr`s.","sig":null,"attributes":[{"value":"/ Converts this object to an iterator of resolved `SocketAddr`s.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8406950,"byte_end":8407016,"line_start":49,"line_end":49,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8407021,"byte_end":8407024,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ The returned iterator may not actually yield any values depending on the outcome of any","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8407029,"byte_end":8407120,"line_start":51,"line_end":51,"column_start":5,"column_end":96}},{"value":"/ resolution performed.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8407125,"byte_end":8407150,"line_start":52,"line_end":52,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8407155,"byte_end":8407158,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that this function may block a backend thread while resolution is performed.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8407163,"byte_end":8407248,"line_start":54,"line_end":54,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4049},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8407488,"byte_end":8407497,"line_start":66,"line_end":66,"column_start":5,"column_end":14},"name":"Resolving","qualname":"::net::addr::ToSocketAddrsFuture::Resolving","value":"ToSocketAddrsFuture::Resolving(JoinHandle<io::Result<I>>)","parent":{"krate":0,"index":4047},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4052},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8407530,"byte_end":8407535,"line_start":67,"line_end":67,"column_start":5,"column_end":10},"name":"Ready","qualname":"::net::addr::ToSocketAddrsFuture::Ready","value":"ToSocketAddrsFuture::Ready(io::Result<I>)","parent":{"krate":0,"index":4047},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4055},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8407556,"byte_end":8407560,"line_start":68,"line_end":68,"column_start":5,"column_end":9},"name":"Done","qualname":"::net::addr::ToSocketAddrsFuture::Done","value":"ToSocketAddrsFuture::Done","parent":{"krate":0,"index":4047},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4047},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8407459,"byte_end":8407478,"line_start":65,"line_end":65,"column_start":10,"column_end":29},"name":"ToSocketAddrsFuture","qualname":"::net::addr::ToSocketAddrsFuture","value":"ToSocketAddrsFuture::{Resolving, Ready, Done}","parent":null,"children":[{"krate":0,"index":4049},{"krate":0,"index":4052},{"krate":0,"index":4055}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8407410,"byte_end":8407449,"line_start":64,"line_end":64,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":4752},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8428239,"byte_end":8428250,"line_start":51,"line_end":51,"column_start":12,"column_end":23},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":4753}],"decl_id":null,"docs":" A TCP socket server, listening for connections.","sig":null,"attributes":[{"value":"/ A TCP socket server, listening for connections.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8426983,"byte_end":8427034,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8427035,"byte_end":8427038,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ After creating a `TcpListener` by [`bind`]ing it to a socket address, it listens for incoming","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8427039,"byte_end":8427136,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ TCP connections. These can be accepted by awaiting elements from the async stream of","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8427137,"byte_end":8427225,"line_start":16,"line_end":16,"column_start":1,"column_end":89}},{"value":"/ [`incoming`] connections.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8427226,"byte_end":8427255,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8427256,"byte_end":8427259,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The socket will be closed when the value is dropped.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8427260,"byte_end":8427316,"line_start":19,"line_end":19,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8427317,"byte_end":8427320,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The Transmission Control Protocol is specified in [IETF RFC 793].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8427321,"byte_end":8427390,"line_start":21,"line_end":21,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8427391,"byte_end":8427394,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::TcpListener`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8427395,"byte_end":8427458,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8427459,"byte_end":8427462,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`bind`]: #method.bind","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8427463,"byte_end":8427489,"line_start":25,"line_end":25,"column_start":1,"column_end":27}},{"value":"/ [`incoming`]: #method.incoming","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8427490,"byte_end":8427524,"line_start":26,"line_end":26,"column_start":1,"column_end":35}},{"value":"/ [IETF RFC 793]: https://tools.ietf.org/html/rfc793","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8427525,"byte_end":8427579,"line_start":27,"line_end":27,"column_start":1,"column_end":55}},{"value":"/ [`std::net::TcpListener`]: https://doc.rust-lang.org/std/net/struct.TcpListener.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8427580,"byte_end":8427668,"line_start":28,"line_end":28,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8427669,"byte_end":8427672,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8427673,"byte_end":8427687,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8427688,"byte_end":8427691,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8427692,"byte_end":8427705,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8427706,"byte_end":8427780,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8427781,"byte_end":8427786,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8427787,"byte_end":8427809,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8427810,"byte_end":8427846,"line_start":36,"line_end":36,"column_start":1,"column_end":37}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8427847,"byte_end":8427877,"line_start":37,"line_end":37,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8427878,"byte_end":8427881,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8427882,"byte_end":8427944,"line_start":39,"line_end":39,"column_start":1,"column_end":63}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8427945,"byte_end":8427988,"line_start":40,"line_end":40,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8427989,"byte_end":8427992,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8427993,"byte_end":8428045,"line_start":42,"line_end":42,"column_start":1,"column_end":53}},{"value":"/     let stream = stream?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8428046,"byte_end":8428075,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"/     let (reader, writer) = &mut (&stream, &stream);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8428076,"byte_end":8428131,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/     io::copy(reader, writer).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8428132,"byte_end":8428172,"line_start":45,"line_end":45,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8428173,"byte_end":8428178,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8428179,"byte_end":8428184,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8428185,"byte_end":8428202,"line_start":48,"line_end":48,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8428203,"byte_end":8428210,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4189},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8429074,"byte_end":8429078,"line_start":77,"line_end":77,"column_start":18,"column_end":22},"name":"bind","qualname":"<TcpListener>::bind","value":"fn <A> (addrs: A) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TcpListener` which will be bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new `TcpListener` which will be bound to the specified address.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8428324,"byte_end":8428401,"line_start":56,"line_end":56,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8428406,"byte_end":8428409,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The returned listener is ready for accepting connections.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8428414,"byte_end":8428475,"line_start":58,"line_end":58,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8428480,"byte_end":8428483,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port to this listener.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8428488,"byte_end":8428581,"line_start":60,"line_end":60,"column_start":5,"column_end":98}},{"value":"/ The port allocated can be queried via the [`local_addr`] method.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8428586,"byte_end":8428654,"line_start":61,"line_end":61,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8428659,"byte_end":8428662,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8428667,"byte_end":8428681,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/ Create a TCP listener bound to 127.0.0.1:0:","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8428686,"byte_end":8428733,"line_start":64,"line_end":64,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8428738,"byte_end":8428741,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8428746,"byte_end":8428759,"line_start":66,"line_end":66,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8428764,"byte_end":8428838,"line_start":67,"line_end":67,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8428843,"byte_end":8428848,"line_start":68,"line_end":68,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8428853,"byte_end":8428889,"line_start":69,"line_end":69,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8428894,"byte_end":8428897,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8428902,"byte_end":8428961,"line_start":71,"line_end":71,"column_start":5,"column_end":64}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8428966,"byte_end":8428971,"line_start":72,"line_end":72,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8428976,"byte_end":8428993,"line_start":73,"line_end":73,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8428998,"byte_end":8429005,"line_start":74,"line_end":74,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8429010,"byte_end":8429013,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ [`local_addr`]: #method.local_addr","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8429018,"byte_end":8429056,"line_start":76,"line_end":76,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":4194},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8430303,"byte_end":8430309,"line_start":116,"line_end":116,"column_start":18,"column_end":24},"name":"accept","qualname":"<TcpListener>::accept","value":"fn (&self) -> io::Result<(TcpStream, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8429770,"byte_end":8429825,"line_start":100,"line_end":100,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8429830,"byte_end":8429833,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ When a connection is established, the corresponding stream and address will be returned.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8429838,"byte_end":8429930,"line_start":102,"line_end":102,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8429935,"byte_end":8429938,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8429943,"byte_end":8429958,"line_start":104,"line_end":104,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8429963,"byte_end":8429966,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8429971,"byte_end":8429984,"line_start":106,"line_end":106,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8429989,"byte_end":8430063,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8430068,"byte_end":8430073,"line_start":108,"line_end":108,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8430078,"byte_end":8430114,"line_start":109,"line_end":109,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8430119,"byte_end":8430122,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8430127,"byte_end":8430186,"line_start":111,"line_end":111,"column_start":5,"column_end":64}},{"value":"/ let (stream, addr) = listener.accept().await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8430191,"byte_end":8430241,"line_start":112,"line_end":112,"column_start":5,"column_end":55}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8430246,"byte_end":8430251,"line_start":113,"line_end":113,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8430256,"byte_end":8430273,"line_start":114,"line_end":114,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8430278,"byte_end":8430285,"line_start":115,"line_end":115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4199},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8431641,"byte_end":8431649,"line_start":154,"line_end":154,"column_start":12,"column_end":20},"name":"incoming","qualname":"<TcpListener>::incoming","value":"fn (&self) -> Incoming<'_>","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of incoming connections.","sig":null,"attributes":[{"value":"/ Returns a stream of incoming connections.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8430706,"byte_end":8430751,"line_start":128,"line_end":128,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8430756,"byte_end":8430759,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ Iterating over this stream is equivalent to calling [`accept`] in a loop. The stream of","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8430764,"byte_end":8430855,"line_start":130,"line_end":130,"column_start":5,"column_end":96}},{"value":"/ connections is infinite, i.e awaiting the next connection will never result in [`None`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8430860,"byte_end":8430952,"line_start":131,"line_end":131,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8430957,"byte_end":8430960,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ [`accept`]: #method.accept","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8430965,"byte_end":8430995,"line_start":133,"line_end":133,"column_start":5,"column_end":35}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8431000,"byte_end":8431080,"line_start":134,"line_end":134,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8431085,"byte_end":8431088,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8431093,"byte_end":8431108,"line_start":136,"line_end":136,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8431113,"byte_end":8431116,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8431121,"byte_end":8431134,"line_start":138,"line_end":138,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8431139,"byte_end":8431213,"line_start":139,"line_end":139,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8431218,"byte_end":8431223,"line_start":140,"line_end":140,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8431228,"byte_end":8431264,"line_start":141,"line_end":141,"column_start":5,"column_end":41}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8431269,"byte_end":8431299,"line_start":142,"line_end":142,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8431304,"byte_end":8431307,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8431312,"byte_end":8431371,"line_start":144,"line_end":144,"column_start":5,"column_end":64}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8431376,"byte_end":8431419,"line_start":145,"line_end":145,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8431424,"byte_end":8431427,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8431432,"byte_end":8431484,"line_start":147,"line_end":147,"column_start":5,"column_end":57}},{"value":"/     let mut stream = stream?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8431489,"byte_end":8431522,"line_start":148,"line_end":148,"column_start":5,"column_end":38}},{"value":"/     stream.write_all(b\"hello world\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8431527,"byte_end":8431575,"line_start":149,"line_end":149,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8431580,"byte_end":8431585,"line_start":150,"line_end":150,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8431590,"byte_end":8431595,"line_start":151,"line_end":151,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8431600,"byte_end":8431617,"line_start":152,"line_end":152,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8431622,"byte_end":8431629,"line_start":153,"line_end":153,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4200},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8432254,"byte_end":8432264,"line_start":175,"line_end":175,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8431709,"byte_end":8431770,"line_start":158,"line_end":158,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8431775,"byte_end":8431778,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, to identify when binding to port 0 which port was assigned","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8431783,"byte_end":8431878,"line_start":160,"line_end":160,"column_start":5,"column_end":100}},{"value":"/ by the OS.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8431883,"byte_end":8431897,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8431902,"byte_end":8431905,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8431910,"byte_end":8431924,"line_start":163,"line_end":163,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8431929,"byte_end":8431932,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8431937,"byte_end":8431950,"line_start":165,"line_end":165,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8431955,"byte_end":8432029,"line_start":166,"line_end":166,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8432034,"byte_end":8432039,"line_start":167,"line_end":167,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8432044,"byte_end":8432080,"line_start":168,"line_end":168,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8432085,"byte_end":8432088,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8432093,"byte_end":8432155,"line_start":170,"line_end":170,"column_start":5,"column_end":67}},{"value":"/ let addr = listener.local_addr()?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8432160,"byte_end":8432198,"line_start":171,"line_end":171,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8432203,"byte_end":8432208,"line_start":172,"line_end":172,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8432213,"byte_end":8432230,"line_start":173,"line_end":173,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8432235,"byte_end":8432242,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4756},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8432921,"byte_end":8432929,"line_start":192,"line_end":192,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::tcp::listener::Incoming","value":"","parent":null,"children":[],"decl_id":null,"docs":" A stream of incoming TCP connections.","sig":null,"attributes":[{"value":"/ A stream of incoming TCP connections.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8432353,"byte_end":8432394,"line_start":180,"line_end":180,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8432395,"byte_end":8432398,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ This stream is infinite, i.e awaiting the next connection will never result in [`None`]. It is","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8432399,"byte_end":8432497,"line_start":182,"line_end":182,"column_start":1,"column_end":99}},{"value":"/ created by the [`incoming`] method on [`TcpListener`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8432498,"byte_end":8432556,"line_start":183,"line_end":183,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8432557,"byte_end":8432560,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::Incoming`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8432561,"byte_end":8432621,"line_start":185,"line_end":185,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8432622,"byte_end":8432625,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8432626,"byte_end":8432706,"line_start":187,"line_end":187,"column_start":1,"column_end":81}},{"value":"/ [`incoming`]: struct.TcpListener.html#method.incoming","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8432707,"byte_end":8432764,"line_start":188,"line_end":188,"column_start":1,"column_end":58}},{"value":"/ [`TcpListener`]: struct.TcpListener.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8432765,"byte_end":8432809,"line_start":189,"line_end":189,"column_start":1,"column_end":45}},{"value":"/ [`std::net::Incoming`]: https://doc.rust-lang.org/std/net/struct.Incoming.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8432810,"byte_end":8432892,"line_start":190,"line_end":190,"column_start":1,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":4774},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8436939,"byte_end":8436948,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":4775}],"decl_id":null,"docs":" A TCP stream between a local and a remote socket.","sig":null,"attributes":[{"value":"/ A TCP stream between a local and a remote socket.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8435381,"byte_end":8435434,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8435435,"byte_end":8435438,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A `TcpStream` can either be created by connecting to an endpoint, via the [`connect`] method,","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8435439,"byte_end":8435536,"line_start":14,"line_end":14,"column_start":1,"column_end":98}},{"value":"/ or by [accepting] a connection from a [listener].  It can be read or written to using the","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8435537,"byte_end":8435630,"line_start":15,"line_end":15,"column_start":1,"column_end":94}},{"value":"/ [`AsyncRead`], [`AsyncWrite`], and related extension traits in [`futures::io`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8435631,"byte_end":8435714,"line_start":16,"line_end":16,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8435715,"byte_end":8435718,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The connection will be closed when the value is dropped. The reading and writing portions of","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8435719,"byte_end":8435815,"line_start":18,"line_end":18,"column_start":1,"column_end":97}},{"value":"/ the connection can also be shut down individually with the [`shutdown`] method.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8435816,"byte_end":8435899,"line_start":19,"line_end":19,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8435900,"byte_end":8435903,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::TcpStream`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8435904,"byte_end":8435965,"line_start":21,"line_end":21,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8435966,"byte_end":8435969,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [`connect`]: struct.TcpStream.html#method.connect","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8435970,"byte_end":8436023,"line_start":23,"line_end":23,"column_start":1,"column_end":54}},{"value":"/ [accepting]: struct.TcpListener.html#method.accept","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8436024,"byte_end":8436078,"line_start":24,"line_end":24,"column_start":1,"column_end":55}},{"value":"/ [listener]: struct.TcpListener.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8436079,"byte_end":8436118,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: https://docs.rs/futures/0.3/futures/io/trait.AsyncRead.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8436119,"byte_end":8436197,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ [`AsyncWrite`]: https://docs.rs/futures/0.3/futures/io/trait.AsyncWrite.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8436198,"byte_end":8436278,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ [`futures::io`]: https://docs.rs/futures/0.3/futures/io/index.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8436279,"byte_end":8436349,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/ [`shutdown`]: struct.TcpStream.html#method.shutdown","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8436350,"byte_end":8436405,"line_start":29,"line_end":29,"column_start":1,"column_end":56}},{"value":"/ [`std::net::TcpStream`]: https://doc.rust-lang.org/std/net/struct.TcpStream.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8436406,"byte_end":8436490,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8436491,"byte_end":8436494,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8436495,"byte_end":8436510,"line_start":32,"line_end":32,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8436511,"byte_end":8436514,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8436515,"byte_end":8436528,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8436529,"byte_end":8436603,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8436604,"byte_end":8436609,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8436610,"byte_end":8436644,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8436645,"byte_end":8436675,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8436676,"byte_end":8436679,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8436680,"byte_end":8436745,"line_start":40,"line_end":40,"column_start":1,"column_end":66}},{"value":"/ stream.write_all(b\"hello world\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8436746,"byte_end":8436790,"line_start":41,"line_end":41,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8436791,"byte_end":8436794,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8436795,"byte_end":8436829,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/ let n = stream.read(&mut buf).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8436830,"byte_end":8436871,"line_start":44,"line_end":44,"column_start":1,"column_end":42}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8436872,"byte_end":8436877,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8436878,"byte_end":8436895,"line_start":46,"line_end":46,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8436896,"byte_end":8436903,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4227},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8437715,"byte_end":8437722,"line_start":73,"line_end":73,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpStream>::connect","value":"fn <A> (addrs: A) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TCP stream connected to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new TCP stream connected to the specified address.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8437034,"byte_end":8437098,"line_start":54,"line_end":54,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8437103,"byte_end":8437106,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This method will create a new TCP socket and attempt to connect it to the `addr`","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8437111,"byte_end":8437195,"line_start":56,"line_end":56,"column_start":5,"column_end":89}},{"value":"/ provided. The [returned future] will be resolved once the stream has successfully","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8437200,"byte_end":8437285,"line_start":57,"line_end":57,"column_start":5,"column_end":90}},{"value":"/ connected, or it will return an error if one occurs.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8437290,"byte_end":8437346,"line_start":58,"line_end":58,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8437351,"byte_end":8437354,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [returned future]: struct.Connect.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8437359,"byte_end":8437401,"line_start":60,"line_end":60,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8437406,"byte_end":8437409,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8437414,"byte_end":8437428,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8437433,"byte_end":8437436,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8437441,"byte_end":8437454,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8437459,"byte_end":8437533,"line_start":65,"line_end":65,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8437538,"byte_end":8437543,"line_start":66,"line_end":66,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8437548,"byte_end":8437582,"line_start":67,"line_end":67,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8437587,"byte_end":8437590,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:0\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8437595,"byte_end":8437653,"line_start":69,"line_end":69,"column_start":5,"column_end":63}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8437658,"byte_end":8437663,"line_start":70,"line_end":70,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8437668,"byte_end":8437685,"line_start":71,"line_end":71,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8437690,"byte_end":8437697,"line_start":72,"line_end":72,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4233},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8439468,"byte_end":8439478,"line_start":125,"line_end":125,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the local address that this stream is connected to.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8439052,"byte_end":8439115,"line_start":111,"line_end":111,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8439120,"byte_end":8439123,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8439128,"byte_end":8439143,"line_start":113,"line_end":113,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8439148,"byte_end":8439151,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8439156,"byte_end":8439169,"line_start":115,"line_end":115,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8439174,"byte_end":8439248,"line_start":116,"line_end":116,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8439253,"byte_end":8439258,"line_start":117,"line_end":117,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8439263,"byte_end":8439297,"line_start":118,"line_end":118,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8439302,"byte_end":8439305,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8439310,"byte_end":8439371,"line_start":120,"line_end":120,"column_start":5,"column_end":66}},{"value":"/ let addr = stream.local_addr()?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8439376,"byte_end":8439412,"line_start":121,"line_end":121,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8439417,"byte_end":8439422,"line_start":122,"line_end":122,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8439427,"byte_end":8439444,"line_start":123,"line_end":123,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8439449,"byte_end":8439456,"line_start":124,"line_end":124,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4234},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8439985,"byte_end":8439994,"line_start":143,"line_end":143,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address that this stream is connected to.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8439569,"byte_end":8439633,"line_start":129,"line_end":129,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8439638,"byte_end":8439641,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8439646,"byte_end":8439661,"line_start":131,"line_end":131,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8439666,"byte_end":8439669,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8439674,"byte_end":8439687,"line_start":133,"line_end":133,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8439692,"byte_end":8439766,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8439771,"byte_end":8439776,"line_start":135,"line_end":135,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8439781,"byte_end":8439815,"line_start":136,"line_end":136,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8439820,"byte_end":8439823,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8439828,"byte_end":8439889,"line_start":138,"line_end":138,"column_start":5,"column_end":66}},{"value":"/ let peer = stream.peer_addr()?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8439894,"byte_end":8439929,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8439934,"byte_end":8439939,"line_start":140,"line_end":140,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8439944,"byte_end":8439961,"line_start":141,"line_end":141,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8439966,"byte_end":8439973,"line_start":142,"line_end":142,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4235},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8440649,"byte_end":8440652,"line_start":167,"line_end":167,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8440084,"byte_end":8440142,"line_start":147,"line_end":147,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8440147,"byte_end":8440150,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8440155,"byte_end":8440215,"line_start":149,"line_end":149,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8440220,"byte_end":8440223,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: #method.set_ttl","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8440228,"byte_end":8440260,"line_start":151,"line_end":151,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8440265,"byte_end":8440268,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8440273,"byte_end":8440287,"line_start":153,"line_end":153,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8440292,"byte_end":8440295,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8440300,"byte_end":8440313,"line_start":155,"line_end":155,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8440318,"byte_end":8440392,"line_start":156,"line_end":156,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8440397,"byte_end":8440402,"line_start":157,"line_end":157,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8440407,"byte_end":8440441,"line_start":158,"line_end":158,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8440446,"byte_end":8440449,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8440454,"byte_end":8440515,"line_start":160,"line_end":160,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8440520,"byte_end":8440523,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(100)?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8440528,"byte_end":8440553,"line_start":162,"line_end":162,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(stream.ttl()?, 100);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8440558,"byte_end":8440593,"line_start":163,"line_end":163,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8440598,"byte_end":8440603,"line_start":164,"line_end":164,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8440608,"byte_end":8440625,"line_start":165,"line_end":165,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8440630,"byte_end":8440637,"line_start":166,"line_end":166,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4236},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8441291,"byte_end":8441298,"line_start":190,"line_end":190,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8440729,"byte_end":8440787,"line_start":171,"line_end":171,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8440792,"byte_end":8440795,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8440800,"byte_end":8440876,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8440881,"byte_end":8440902,"line_start":174,"line_end":174,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8440907,"byte_end":8440910,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8440915,"byte_end":8440929,"line_start":176,"line_end":176,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8440934,"byte_end":8440937,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8440942,"byte_end":8440955,"line_start":178,"line_end":178,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8440960,"byte_end":8441034,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8441039,"byte_end":8441044,"line_start":180,"line_end":180,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8441049,"byte_end":8441083,"line_start":181,"line_end":181,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8441088,"byte_end":8441091,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8441096,"byte_end":8441157,"line_start":183,"line_end":183,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8441162,"byte_end":8441165,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(100)?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8441170,"byte_end":8441195,"line_start":185,"line_end":185,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(stream.ttl()?, 100);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8441200,"byte_end":8441235,"line_start":186,"line_end":186,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8441240,"byte_end":8441245,"line_start":187,"line_end":187,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8441250,"byte_end":8441267,"line_start":188,"line_end":188,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8441272,"byte_end":8441279,"line_start":189,"line_end":189,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4237},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8442149,"byte_end":8442153,"line_start":216,"line_end":216,"column_start":18,"column_end":22},"name":"peek","qualname":"<TcpStream>::peek","value":"fn (&self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is connected, without\n removing that data from the queue.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is connected, without","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8441391,"byte_end":8441480,"line_start":194,"line_end":194,"column_start":5,"column_end":94}},{"value":"/ removing that data from the queue.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8441485,"byte_end":8441523,"line_start":195,"line_end":195,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8441528,"byte_end":8441531,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes peeked.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8441536,"byte_end":8441587,"line_start":197,"line_end":197,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8441592,"byte_end":8441595,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing `MSG_PEEK` as a flag","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8441600,"byte_end":8441695,"line_start":199,"line_end":199,"column_start":5,"column_end":100}},{"value":"/ to the underlying `recv` system call.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8441700,"byte_end":8441741,"line_start":200,"line_end":200,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8441746,"byte_end":8441749,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8441754,"byte_end":8441768,"line_start":202,"line_end":202,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8441773,"byte_end":8441776,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8441781,"byte_end":8441794,"line_start":204,"line_end":204,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8441799,"byte_end":8441873,"line_start":205,"line_end":205,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8441878,"byte_end":8441883,"line_start":206,"line_end":206,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8441888,"byte_end":8441922,"line_start":207,"line_end":207,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8441927,"byte_end":8441930,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8441935,"byte_end":8441996,"line_start":209,"line_end":209,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8442001,"byte_end":8442004,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8442009,"byte_end":8442041,"line_start":211,"line_end":211,"column_start":5,"column_end":37}},{"value":"/ let n = stream.peek(&mut buf).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8442046,"byte_end":8442087,"line_start":212,"line_end":212,"column_start":5,"column_end":46}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8442092,"byte_end":8442097,"line_start":213,"line_end":213,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8442102,"byte_end":8442119,"line_start":214,"line_end":214,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8442124,"byte_end":8442131,"line_start":215,"line_end":215,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4242},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8442895,"byte_end":8442902,"line_start":240,"line_end":240,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8442304,"byte_end":8442366,"line_start":220,"line_end":220,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8442371,"byte_end":8442374,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8442379,"byte_end":8442443,"line_start":222,"line_end":222,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8442448,"byte_end":8442451,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ [`set_nodelay`]: #method.set_nodelay","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8442456,"byte_end":8442496,"line_start":224,"line_end":224,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8442501,"byte_end":8442504,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8442509,"byte_end":8442523,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8442528,"byte_end":8442531,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8442536,"byte_end":8442549,"line_start":228,"line_end":228,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8442554,"byte_end":8442628,"line_start":229,"line_end":229,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8442633,"byte_end":8442638,"line_start":230,"line_end":230,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8442643,"byte_end":8442677,"line_start":231,"line_end":231,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8442682,"byte_end":8442685,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8442690,"byte_end":8442751,"line_start":233,"line_end":233,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8442756,"byte_end":8442759,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8442764,"byte_end":8442794,"line_start":235,"line_end":235,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(stream.nodelay()?, true);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8442799,"byte_end":8442839,"line_start":236,"line_end":236,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8442844,"byte_end":8442849,"line_start":237,"line_end":237,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8442854,"byte_end":8442871,"line_start":238,"line_end":238,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8442876,"byte_end":8442883,"line_start":239,"line_end":239,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4243},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8443786,"byte_end":8443797,"line_start":266,"line_end":266,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"fn (&self, nodelay: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8442984,"byte_end":8443046,"line_start":244,"line_end":244,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8443051,"byte_end":8443054,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8443059,"byte_end":8443128,"line_start":246,"line_end":246,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8443133,"byte_end":8443206,"line_start":247,"line_end":247,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8443211,"byte_end":8443284,"line_start":248,"line_end":248,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8443289,"byte_end":8443364,"line_start":249,"line_end":249,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8443369,"byte_end":8443387,"line_start":250,"line_end":250,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8443392,"byte_end":8443395,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8443400,"byte_end":8443414,"line_start":252,"line_end":252,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8443419,"byte_end":8443422,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8443427,"byte_end":8443440,"line_start":254,"line_end":254,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8443445,"byte_end":8443519,"line_start":255,"line_end":255,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8443524,"byte_end":8443529,"line_start":256,"line_end":256,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8443534,"byte_end":8443568,"line_start":257,"line_end":257,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8443573,"byte_end":8443576,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8443581,"byte_end":8443642,"line_start":259,"line_end":259,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8443647,"byte_end":8443650,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8443655,"byte_end":8443685,"line_start":261,"line_end":261,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(stream.nodelay()?, true);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8443690,"byte_end":8443730,"line_start":262,"line_end":262,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8443735,"byte_end":8443740,"line_start":263,"line_end":263,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8443745,"byte_end":8443762,"line_start":264,"line_end":264,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8443767,"byte_end":8443774,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4244},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8444634,"byte_end":8444642,"line_start":291,"line_end":291,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"fn (&self, how: std::net::Shutdown) -> std::io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8443903,"byte_end":8443969,"line_start":270,"line_end":270,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8443974,"byte_end":8443977,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This method will cause all pending and future I/O on the specified portions to return","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8443982,"byte_end":8444071,"line_start":272,"line_end":272,"column_start":5,"column_end":94}},{"value":"/ immediately with an appropriate value (see the documentation of [`Shutdown`]).","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8444076,"byte_end":8444158,"line_start":273,"line_end":273,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8444163,"byte_end":8444166,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ [`Shutdown`]: https://doc.rust-lang.org/std/net/enum.Shutdown.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8444171,"byte_end":8444241,"line_start":275,"line_end":275,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8444246,"byte_end":8444249,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8444254,"byte_end":8444268,"line_start":277,"line_end":277,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8444273,"byte_end":8444276,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8444281,"byte_end":8444294,"line_start":279,"line_end":279,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8444299,"byte_end":8444373,"line_start":280,"line_end":280,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8444378,"byte_end":8444383,"line_start":281,"line_end":281,"column_start":5,"column_end":10}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8444388,"byte_end":8444415,"line_start":282,"line_end":282,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8444420,"byte_end":8444423,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8444428,"byte_end":8444462,"line_start":284,"line_end":284,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8444467,"byte_end":8444470,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8444475,"byte_end":8444536,"line_start":286,"line_end":286,"column_start":5,"column_end":66}},{"value":"/ stream.shutdown(Shutdown::Both)?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8444541,"byte_end":8444578,"line_start":287,"line_end":287,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8444583,"byte_end":8444588,"line_start":288,"line_end":288,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8444593,"byte_end":8444610,"line_start":289,"line_end":289,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8444615,"byte_end":8444622,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4791},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8450383,"byte_end":8450392,"line_start":47,"line_end":47,"column_start":12,"column_end":21},"name":"UdpSocket","qualname":"::net::udp::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":4792}],"decl_id":null,"docs":" A UDP socket.","sig":null,"attributes":[{"value":"/ A UDP socket.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8449129,"byte_end":8449146,"line_start":10,"line_end":10,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8449147,"byte_end":8449150,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ After creating a `UdpSocket` by [`bind`]ing it to a socket address, data can be [sent to] and","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8449151,"byte_end":8449248,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ [received from] any other socket address.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8449249,"byte_end":8449294,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8449295,"byte_end":8449298,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ As stated in the User Datagram Protocol's specification in [IETF RFC 768], UDP is an unordered,","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8449299,"byte_end":8449398,"line_start":15,"line_end":15,"column_start":1,"column_end":100}},{"value":"/ unreliable protocol. Refer to [`TcpListener`] and [`TcpStream`] for async TCP primitives.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8449399,"byte_end":8449492,"line_start":16,"line_end":16,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8449493,"byte_end":8449496,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::UdpSocket`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8449497,"byte_end":8449558,"line_start":18,"line_end":18,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8449559,"byte_end":8449562,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`bind`]: #method.bind","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8449563,"byte_end":8449589,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/ [received from]: #method.recv_from","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8449590,"byte_end":8449628,"line_start":21,"line_end":21,"column_start":1,"column_end":39}},{"value":"/ [sent to]: #method.send_to","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8449629,"byte_end":8449659,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`TcpListener`]: struct.TcpListener.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8449660,"byte_end":8449704,"line_start":23,"line_end":23,"column_start":1,"column_end":45}},{"value":"/ [`TcpStream`]: struct.TcpStream.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8449705,"byte_end":8449745,"line_start":24,"line_end":24,"column_start":1,"column_end":41}},{"value":"/ [`std::net`]: https://doc.rust-lang.org/std/net/index.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8449746,"byte_end":8449808,"line_start":25,"line_end":25,"column_start":1,"column_end":63}},{"value":"/ [IETF RFC 768]: https://tools.ietf.org/html/rfc768","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8449809,"byte_end":8449863,"line_start":26,"line_end":26,"column_start":1,"column_end":55}},{"value":"/ [`std::net::UdpSocket`]: https://doc.rust-lang.org/std/net/struct.UdpSocket.html","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8449864,"byte_end":8449948,"line_start":27,"line_end":27,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8449949,"byte_end":8449952,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8449953,"byte_end":8449968,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8449969,"byte_end":8449972,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8449973,"byte_end":8449986,"line_start":31,"line_end":31,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8449987,"byte_end":8450061,"line_start":32,"line_end":32,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8450062,"byte_end":8450067,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8450068,"byte_end":8450102,"line_start":34,"line_end":34,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8450103,"byte_end":8450106,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8450107,"byte_end":8450165,"line_start":36,"line_end":36,"column_start":1,"column_end":59}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8450166,"byte_end":8450200,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8450201,"byte_end":8450204,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8450205,"byte_end":8450215,"line_start":39,"line_end":39,"column_start":1,"column_end":11}},{"value":"/     let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8450216,"byte_end":8450274,"line_start":40,"line_end":40,"column_start":1,"column_end":59}},{"value":"/     socket.send_to(&buf[..n], &peer).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8450275,"byte_end":8450323,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8450324,"byte_end":8450329,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8450330,"byte_end":8450335,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/ # }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8450336,"byte_end":8450346,"line_start":44,"line_end":44,"column_start":1,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8450347,"byte_end":8450354,"line_start":45,"line_end":45,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4275},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8451049,"byte_end":8451053,"line_start":70,"line_end":70,"column_start":18,"column_end":22},"name":"bind","qualname":"<UdpSocket>::bind","value":"fn <A> (addrs: A) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDP socket from the given address.","sig":null,"attributes":[{"value":"/ Creates a UDP socket from the given address.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8450462,"byte_end":8450510,"line_start":52,"line_end":52,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8450515,"byte_end":8450518,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port to this socket. The","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8450523,"byte_end":8450618,"line_start":54,"line_end":54,"column_start":5,"column_end":100}},{"value":"/ port allocated can be queried via the [`local_addr`] method.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8450623,"byte_end":8450687,"line_start":55,"line_end":55,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8450692,"byte_end":8450695,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ [`local_addr`]: #method.local_addr","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8450700,"byte_end":8450738,"line_start":57,"line_end":57,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8450743,"byte_end":8450746,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8450751,"byte_end":8450765,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8450770,"byte_end":8450773,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8450778,"byte_end":8450791,"line_start":61,"line_end":61,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8450796,"byte_end":8450870,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8450875,"byte_end":8450880,"line_start":63,"line_end":63,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8450885,"byte_end":8450919,"line_start":64,"line_end":64,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8450924,"byte_end":8450927,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8450932,"byte_end":8450987,"line_start":66,"line_end":66,"column_start":5,"column_end":60}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8450992,"byte_end":8450997,"line_start":67,"line_end":67,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8451002,"byte_end":8451019,"line_start":68,"line_end":68,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8451024,"byte_end":8451031,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4280},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8452293,"byte_end":8452303,"line_start":112,"line_end":112,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8451761,"byte_end":8451822,"line_start":95,"line_end":95,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8451827,"byte_end":8451830,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out which port was","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8451835,"byte_end":8451923,"line_start":97,"line_end":97,"column_start":5,"column_end":93}},{"value":"/ actually bound.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8451928,"byte_end":8451947,"line_start":98,"line_end":98,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8451952,"byte_end":8451955,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8451960,"byte_end":8451974,"line_start":100,"line_end":100,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8451979,"byte_end":8451982,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8451987,"byte_end":8452000,"line_start":102,"line_end":102,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8452005,"byte_end":8452079,"line_start":103,"line_end":103,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8452084,"byte_end":8452089,"line_start":104,"line_end":104,"column_start":5,"column_end":10}},{"value":"/\tuse async_std::net::UdpSocket;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8452094,"byte_end":8452128,"line_start":105,"line_end":105,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8452133,"byte_end":8452136,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8452141,"byte_end":8452196,"line_start":107,"line_end":107,"column_start":5,"column_end":60}},{"value":"/ let addr = socket.local_addr()?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8452201,"byte_end":8452237,"line_start":108,"line_end":108,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8452242,"byte_end":8452247,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8452252,"byte_end":8452269,"line_start":110,"line_end":110,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8452274,"byte_end":8452281,"line_start":111,"line_end":111,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4282},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8453347,"byte_end":8453354,"line_start":145,"line_end":145,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"fn <A> (&self, buf: &[u8], addrs: A) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the given address.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the given address.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8452489,"byte_end":8452539,"line_start":119,"line_end":119,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8452544,"byte_end":8452547,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8452552,"byte_end":8452604,"line_start":121,"line_end":121,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8452609,"byte_end":8452612,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8452617,"byte_end":8452631,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8452636,"byte_end":8452639,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8452644,"byte_end":8452657,"line_start":125,"line_end":125,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8452662,"byte_end":8452736,"line_start":126,"line_end":126,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8452741,"byte_end":8452746,"line_start":127,"line_end":127,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8452751,"byte_end":8452785,"line_start":128,"line_end":128,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8452790,"byte_end":8452793,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ const THE_MERCHANT_OF_VENICE: &[u8] = b\"","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8452798,"byte_end":8452842,"line_start":130,"line_end":130,"column_start":5,"column_end":49}},{"value":"/     If you prick us, do we not bleed?","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8452847,"byte_end":8452888,"line_start":131,"line_end":131,"column_start":5,"column_end":46}},{"value":"/     If you tickle us, do we not laugh?","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8452893,"byte_end":8452935,"line_start":132,"line_end":132,"column_start":5,"column_end":47}},{"value":"/     If you poison us, do we not die?","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8452940,"byte_end":8452980,"line_start":133,"line_end":133,"column_start":5,"column_end":45}},{"value":"/     And if you wrong us, shall we not revenge?","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8452985,"byte_end":8453035,"line_start":134,"line_end":134,"column_start":5,"column_end":55}},{"value":"/ \";","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8453040,"byte_end":8453046,"line_start":135,"line_end":135,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8453051,"byte_end":8453054,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8453059,"byte_end":8453114,"line_start":137,"line_end":137,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8453119,"byte_end":8453122,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ let addr = \"127.0.0.1:7878\";","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8453127,"byte_end":8453159,"line_start":139,"line_end":139,"column_start":5,"column_end":37}},{"value":"/ let sent = socket.send_to(THE_MERCHANT_OF_VENICE, &addr).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8453164,"byte_end":8453232,"line_start":140,"line_end":140,"column_start":5,"column_end":73}},{"value":"/ println!(\"Sent {} bytes to {}\", sent, addr);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8453237,"byte_end":8453285,"line_start":141,"line_end":141,"column_start":5,"column_end":53}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8453290,"byte_end":8453295,"line_start":142,"line_end":142,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8453300,"byte_end":8453317,"line_start":143,"line_end":143,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8453322,"byte_end":8453329,"line_start":144,"line_end":144,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4289},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8454547,"byte_end":8454556,"line_start":183,"line_end":183,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"fn (&self, buf: &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8453965,"byte_end":8453999,"line_start":164,"line_end":164,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8454004,"byte_end":8454007,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read and the origin.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8454012,"byte_end":8454076,"line_start":166,"line_end":166,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8454081,"byte_end":8454084,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8454089,"byte_end":8454103,"line_start":168,"line_end":168,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8454108,"byte_end":8454111,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8454116,"byte_end":8454129,"line_start":170,"line_end":170,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8454134,"byte_end":8454208,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8454213,"byte_end":8454218,"line_start":172,"line_end":172,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8454223,"byte_end":8454257,"line_start":173,"line_end":173,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8454262,"byte_end":8454265,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8454270,"byte_end":8454325,"line_start":175,"line_end":175,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8454330,"byte_end":8454333,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8454338,"byte_end":8454370,"line_start":177,"line_end":177,"column_start":5,"column_end":37}},{"value":"/ let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8454375,"byte_end":8454429,"line_start":178,"line_end":178,"column_start":5,"column_end":59}},{"value":"/ println!(\"Received {} bytes from {}\", n, peer);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8454434,"byte_end":8454485,"line_start":179,"line_end":179,"column_start":5,"column_end":56}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8454490,"byte_end":8454495,"line_start":180,"line_end":180,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8454500,"byte_end":8454517,"line_start":181,"line_end":181,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8454522,"byte_end":8454529,"line_start":182,"line_end":182,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4296},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8455894,"byte_end":8455901,"line_start":224,"line_end":224,"column_start":18,"column_end":25},"name":"connect","qualname":"<UdpSocket>::connect","value":"fn <A> (&self, addrs: A) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket to a remote address.","sig":null,"attributes":[{"value":"/ Connects the UDP socket to a remote address.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8455116,"byte_end":8455164,"line_start":202,"line_end":202,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8455169,"byte_end":8455172,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ When connected, methods [`send`] and [`recv`] will use the specified address for sending","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8455177,"byte_end":8455269,"line_start":204,"line_end":204,"column_start":5,"column_end":97}},{"value":"/ and receiving messages. Additionally, a filter will be applied to [`recv_from`] so that it","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8455274,"byte_end":8455368,"line_start":205,"line_end":205,"column_start":5,"column_end":99}},{"value":"/ only receives messages from that same address.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8455373,"byte_end":8455423,"line_start":206,"line_end":206,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8455428,"byte_end":8455431,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ [`send`]: #method.send","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8455436,"byte_end":8455462,"line_start":208,"line_end":208,"column_start":5,"column_end":31}},{"value":"/ [`recv`]: #method.recv","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8455467,"byte_end":8455493,"line_start":209,"line_end":209,"column_start":5,"column_end":31}},{"value":"/ [`recv_from`]: #method.recv_from","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8455498,"byte_end":8455534,"line_start":210,"line_end":210,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8455539,"byte_end":8455542,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8455547,"byte_end":8455561,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8455566,"byte_end":8455569,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8455574,"byte_end":8455587,"line_start":214,"line_end":214,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8455592,"byte_end":8455666,"line_start":215,"line_end":215,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8455671,"byte_end":8455676,"line_start":216,"line_end":216,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8455681,"byte_end":8455715,"line_start":217,"line_end":217,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8455720,"byte_end":8455723,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8455728,"byte_end":8455783,"line_start":219,"line_end":219,"column_start":5,"column_end":60}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8455788,"byte_end":8455832,"line_start":220,"line_end":220,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8455837,"byte_end":8455842,"line_start":221,"line_end":221,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8455847,"byte_end":8455864,"line_start":222,"line_end":222,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8455869,"byte_end":8455876,"line_start":223,"line_end":223,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4302},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8457340,"byte_end":8457344,"line_start":269,"line_end":269,"column_start":18,"column_end":22},"name":"send","qualname":"<UdpSocket>::send","value":"fn (&self, buf: &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the remote address to which it is connected.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the remote address to which it is connected.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8456604,"byte_end":8456680,"line_start":247,"line_end":247,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8456685,"byte_end":8456688,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8456693,"byte_end":8456765,"line_start":249,"line_end":249,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8456770,"byte_end":8456827,"line_start":250,"line_end":250,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8456832,"byte_end":8456835,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: #method.connect","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8456840,"byte_end":8456872,"line_start":252,"line_end":252,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8456877,"byte_end":8456880,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8456885,"byte_end":8456899,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8456904,"byte_end":8456907,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8456912,"byte_end":8456925,"line_start":256,"line_end":256,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8456930,"byte_end":8457004,"line_start":257,"line_end":257,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8457009,"byte_end":8457014,"line_start":258,"line_end":258,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8457019,"byte_end":8457053,"line_start":259,"line_end":259,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8457058,"byte_end":8457061,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8457066,"byte_end":8457125,"line_start":261,"line_end":261,"column_start":5,"column_end":64}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8457130,"byte_end":8457174,"line_start":262,"line_end":262,"column_start":5,"column_end":49}},{"value":"/ let bytes = socket.send(b\"Hi there!\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8457179,"byte_end":8457228,"line_start":263,"line_end":263,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8457233,"byte_end":8457236,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ println!(\"Sent {} bytes\", bytes);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8457241,"byte_end":8457278,"line_start":265,"line_end":265,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8457283,"byte_end":8457288,"line_start":266,"line_end":266,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8457293,"byte_end":8457310,"line_start":267,"line_end":267,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8457315,"byte_end":8457322,"line_start":268,"line_end":268,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4309},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8458471,"byte_end":8458475,"line_start":305,"line_end":305,"column_start":18,"column_end":22},"name":"recv","qualname":"<UdpSocket>::recv","value":"fn (&self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8457882,"byte_end":8457916,"line_start":285,"line_end":285,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8457921,"byte_end":8457924,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8457929,"byte_end":8457978,"line_start":287,"line_end":287,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8457983,"byte_end":8457986,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8457991,"byte_end":8458005,"line_start":289,"line_end":289,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8458010,"byte_end":8458013,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8458018,"byte_end":8458031,"line_start":291,"line_end":291,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8458036,"byte_end":8458110,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8458115,"byte_end":8458120,"line_start":293,"line_end":293,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8458125,"byte_end":8458159,"line_start":294,"line_end":294,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8458164,"byte_end":8458167,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8458172,"byte_end":8458227,"line_start":296,"line_end":296,"column_start":5,"column_end":60}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8458232,"byte_end":8458276,"line_start":297,"line_end":297,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8458281,"byte_end":8458284,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8458289,"byte_end":8458321,"line_start":299,"line_end":299,"column_start":5,"column_end":37}},{"value":"/ let n = socket.recv(&mut buf).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8458326,"byte_end":8458367,"line_start":300,"line_end":300,"column_start":5,"column_end":46}},{"value":"/ println!(\"Received {} bytes\", n);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8458372,"byte_end":8458409,"line_start":301,"line_end":301,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8458414,"byte_end":8458419,"line_start":302,"line_end":302,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8458424,"byte_end":8458441,"line_start":303,"line_end":303,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8458446,"byte_end":8458453,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4316},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8459231,"byte_end":8459240,"line_start":326,"line_end":326,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8459019,"byte_end":8459083,"line_start":321,"line_end":321,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8459088,"byte_end":8459091,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_broadcast`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8459096,"byte_end":8459162,"line_start":323,"line_end":323,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8459167,"byte_end":8459170,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ [`set_broadcast`]: #method.set_broadcast","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8459175,"byte_end":8459219,"line_start":325,"line_end":325,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4317},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8459493,"byte_end":8459506,"line_start":333,"line_end":333,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"fn (&self, on: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8459324,"byte_end":8459388,"line_start":330,"line_end":330,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8459393,"byte_end":8459396,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast address.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8459401,"byte_end":8459481,"line_start":332,"line_end":332,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4318},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8459845,"byte_end":8459862,"line_start":342,"line_end":342,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8459604,"byte_end":8459673,"line_start":337,"line_end":337,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8459678,"byte_end":8459681,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v4`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8459686,"byte_end":8459760,"line_start":339,"line_end":339,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8459765,"byte_end":8459768,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v4`]: #method.set_multicast_loop_v4","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8459773,"byte_end":8459833,"line_start":341,"line_end":341,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":4319},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8460207,"byte_end":8460228,"line_start":353,"line_end":353,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"fn (&self, on: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8459954,"byte_end":8460023,"line_start":346,"line_end":346,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8460028,"byte_end":8460031,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8460036,"byte_end":8460110,"line_start":348,"line_end":348,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8460115,"byte_end":8460118,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8460123,"byte_end":8460133,"line_start":350,"line_end":350,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8460138,"byte_end":8460141,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8460146,"byte_end":8460195,"line_start":352,"line_end":352,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4320},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8460571,"byte_end":8460587,"line_start":362,"line_end":362,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8460334,"byte_end":8460402,"line_start":357,"line_end":357,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8460407,"byte_end":8460410,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_ttl_v4`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8460415,"byte_end":8460488,"line_start":359,"line_end":359,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8460493,"byte_end":8460496,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_ttl_v4`]: #method.set_multicast_ttl_v4","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8460501,"byte_end":8460559,"line_start":361,"line_end":361,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":4321},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8461071,"byte_end":8461091,"line_start":375,"line_end":375,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8460677,"byte_end":8460745,"line_start":366,"line_end":366,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8460750,"byte_end":8460753,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for this socket. The default","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8460758,"byte_end":8460853,"line_start":368,"line_end":368,"column_start":5,"column_end":100}},{"value":"/ value is 1 which means that multicast packets don't leave the local network unless","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8460858,"byte_end":8460944,"line_start":369,"line_end":369,"column_start":5,"column_end":91}},{"value":"/ explicitly requested.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8460949,"byte_end":8460974,"line_start":370,"line_end":370,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8460979,"byte_end":8460982,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8460987,"byte_end":8460997,"line_start":372,"line_end":372,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8461002,"byte_end":8461005,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8461010,"byte_end":8461059,"line_start":374,"line_end":374,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4322},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8461440,"byte_end":8461457,"line_start":384,"line_end":384,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8461197,"byte_end":8461268,"line_start":379,"line_end":379,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8461273,"byte_end":8461276,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v6`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8461281,"byte_end":8461355,"line_start":381,"line_end":381,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8461360,"byte_end":8461363,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v6`]: #method.set_multicast_loop_v6","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8461368,"byte_end":8461428,"line_start":383,"line_end":383,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":4323},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8461806,"byte_end":8461827,"line_start":395,"line_end":395,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"fn (&self, on: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8461549,"byte_end":8461620,"line_start":388,"line_end":388,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8461625,"byte_end":8461628,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8461633,"byte_end":8461709,"line_start":390,"line_end":390,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8461714,"byte_end":8461717,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8461722,"byte_end":8461732,"line_start":392,"line_end":392,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8461737,"byte_end":8461740,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv4 sockets.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8461745,"byte_end":8461794,"line_start":394,"line_end":394,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4324},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8462121,"byte_end":8462124,"line_start":404,"line_end":404,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8461933,"byte_end":8461991,"line_start":399,"line_end":399,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8461996,"byte_end":8461999,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8462004,"byte_end":8462064,"line_start":401,"line_end":401,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8462069,"byte_end":8462072,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: #method.set_ttl","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8462077,"byte_end":8462109,"line_start":403,"line_end":403,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4325},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8462386,"byte_end":8462393,"line_start":412,"line_end":412,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8462201,"byte_end":8462259,"line_start":408,"line_end":408,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8462264,"byte_end":8462267,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8462272,"byte_end":8462348,"line_start":410,"line_end":410,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8462353,"byte_end":8462374,"line_start":411,"line_end":411,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4326},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8463410,"byte_end":8463427,"line_start":440,"line_end":440,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"fn (&self, multiaddr: Ipv4Addr, interface: Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8462486,"byte_end":8462544,"line_start":416,"line_end":416,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8462549,"byte_end":8462552,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ This method specifies a new multicast group for this socket to join. The address must be","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8462557,"byte_end":8462649,"line_start":418,"line_end":418,"column_start":5,"column_end":97}},{"value":"/ a valid multicast address, and `interface` is the address of the local interface with which","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8462654,"byte_end":8462749,"line_start":419,"line_end":419,"column_start":5,"column_end":100}},{"value":"/ the system should join the multicast group. If it's equal to `INADDR_ANY` then an","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8462754,"byte_end":8462839,"line_start":420,"line_end":420,"column_start":5,"column_end":90}},{"value":"/ appropriate interface is chosen by the system.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8462844,"byte_end":8462894,"line_start":421,"line_end":421,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8462899,"byte_end":8462902,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8462907,"byte_end":8462921,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8462926,"byte_end":8462929,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8462934,"byte_end":8462947,"line_start":425,"line_end":425,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8462952,"byte_end":8463026,"line_start":426,"line_end":426,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8463031,"byte_end":8463036,"line_start":427,"line_end":427,"column_start":5,"column_end":10}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8463041,"byte_end":8463068,"line_start":428,"line_end":428,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8463073,"byte_end":8463076,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8463081,"byte_end":8463115,"line_start":430,"line_end":430,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8463120,"byte_end":8463123,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ let interface = Ipv4Addr::new(0, 0, 0, 0);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8463128,"byte_end":8463174,"line_start":432,"line_end":432,"column_start":5,"column_end":51}},{"value":"/ let mdns_addr = Ipv4Addr::new(224, 0, 0, 123);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8463179,"byte_end":8463229,"line_start":433,"line_end":433,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8463234,"byte_end":8463237,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8463242,"byte_end":8463297,"line_start":435,"line_end":435,"column_start":5,"column_end":60}},{"value":"/ socket.join_multicast_v4(mdns_addr, interface)?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8463302,"byte_end":8463354,"line_start":436,"line_end":436,"column_start":5,"column_end":57}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8463359,"byte_end":8463364,"line_start":437,"line_end":437,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8463369,"byte_end":8463386,"line_start":438,"line_end":438,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8463391,"byte_end":8463398,"line_start":439,"line_end":439,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4327},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8464490,"byte_end":8464507,"line_start":469,"line_end":469,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"fn (&self, multiaddr: &Ipv6Addr, interface: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8463607,"byte_end":8463667,"line_start":446,"line_end":446,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8463672,"byte_end":8463675,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ This method specifies a new multicast group for this socket to join. The address must be","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8463680,"byte_end":8463772,"line_start":448,"line_end":448,"column_start":5,"column_end":97}},{"value":"/ a valid multicast address, and `interface` is the index of the interface to join/leave (or","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8463777,"byte_end":8463871,"line_start":449,"line_end":449,"column_start":5,"column_end":99}},{"value":"/ 0 to indicate any interface).","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8463876,"byte_end":8463909,"line_start":450,"line_end":450,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8463914,"byte_end":8463917,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8463922,"byte_end":8463936,"line_start":452,"line_end":452,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8463941,"byte_end":8463944,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8463949,"byte_end":8463962,"line_start":454,"line_end":454,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8463967,"byte_end":8464041,"line_start":455,"line_end":455,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8464046,"byte_end":8464051,"line_start":456,"line_end":456,"column_start":5,"column_end":10}},{"value":"/ use std::net::{Ipv6Addr, SocketAddr};","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8464056,"byte_end":8464097,"line_start":457,"line_end":457,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8464102,"byte_end":8464105,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8464110,"byte_end":8464144,"line_start":459,"line_end":459,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8464149,"byte_end":8464152,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ let socket_addr = SocketAddr::new(Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 0).into(), 0);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8464157,"byte_end":8464244,"line_start":461,"line_end":461,"column_start":5,"column_end":92}},{"value":"/ let mdns_addr = Ipv6Addr::new(0xFF02, 0, 0, 0, 0, 0, 0, 0x0123);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8464249,"byte_end":8464317,"line_start":462,"line_end":462,"column_start":5,"column_end":73}},{"value":"/ let socket = UdpSocket::bind(&socket_addr).await?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8464322,"byte_end":8464376,"line_start":463,"line_end":463,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8464381,"byte_end":8464384,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ socket.join_multicast_v6(&mdns_addr, 0)?;","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8464389,"byte_end":8464434,"line_start":465,"line_end":465,"column_start":5,"column_end":50}},{"value":"/ #","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8464439,"byte_end":8464444,"line_start":466,"line_end":466,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8464449,"byte_end":8464466,"line_start":467,"line_end":467,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8464471,"byte_end":8464478,"line_start":468,"line_end":468,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4328},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8464900,"byte_end":8464918,"line_start":480,"line_end":480,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"fn (&self, multiaddr: Ipv4Addr, interface: Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8464681,"byte_end":8464740,"line_start":475,"line_end":475,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8464745,"byte_end":8464748,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v4`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8464753,"byte_end":8464823,"line_start":477,"line_end":477,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8464828,"byte_end":8464831,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v4`]: #method.join_multicast_v4","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8464836,"byte_end":8464888,"line_start":479,"line_end":479,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4329},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8465320,"byte_end":8465338,"line_start":491,"line_end":491,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"fn (&self, multiaddr: &Ipv6Addr, interface: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8465099,"byte_end":8465160,"line_start":486,"line_end":486,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8465165,"byte_end":8465168,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v6`].","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8465173,"byte_end":8465243,"line_start":488,"line_end":488,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8465248,"byte_end":8465251,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v6`]: #method.join_multicast_v6","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8465256,"byte_end":8465308,"line_start":490,"line_end":490,"column_start":5,"column_end":57}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/utils.rs","byte_start":10023,"byte_end":10027,"line_start":9,"line_end":9,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":10}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6896169,"byte_end":6896176,"line_start":38,"line_end":38,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6897113,"byte_end":6897119,"line_start":38,"line_end":38,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6897149,"byte_end":6897155,"line_start":40,"line_end":40,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7103900,"byte_end":7103913,"line_start":53,"line_end":53,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1412}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7104114,"byte_end":7104127,"line_start":60,"line_end":60,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1415},{"krate":0,"index":1416}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7104763,"byte_end":7104775,"line_start":81,"line_end":81,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7104802,"byte_end":7104814,"line_start":83,"line_end":83,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1419}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/lines.rs","byte_start":8033835,"byte_end":8033840,"line_start":32,"line_end":32,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1487},{"krate":0,"index":1488}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/read_line.rs","byte_start":8035841,"byte_end":8035855,"line_start":19,"line_end":19,"column_start":46,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1513},{"krate":0,"index":1514}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/read_until.rs","byte_start":8037365,"byte_end":8037380,"line_start":17,"line_end":17,"column_start":46,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1535},{"krate":0,"index":1536}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/split.rs","byte_start":8038609,"byte_end":8038614,"line_start":31,"line_end":31,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1551},{"krate":0,"index":1552}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/bytes.rs","byte_start":8056075,"byte_end":8056080,"line_start":18,"line_end":18,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1577},{"krate":0,"index":1578}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8057955,"byte_end":8057960,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1594},{"krate":0,"index":1595},{"krate":0,"index":1596}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8060119,"byte_end":8060124,"line_start":97,"line_end":97,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1600}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8060366,"byte_end":8060371,"line_start":106,"line_end":106,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1604},{"krate":0,"index":1605}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8061516,"byte_end":8061521,"line_start":142,"line_end":142,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1609},{"krate":0,"index":1610}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read.rs","byte_start":8063412,"byte_end":8063422,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1627},{"krate":0,"index":1628}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read_exact.rs","byte_start":8064018,"byte_end":8064033,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1646},{"krate":0,"index":1647}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read_to_end.rs","byte_start":8064988,"byte_end":8065003,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1665},{"krate":0,"index":1666}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read_to_end.rs","byte_start":8066153,"byte_end":8066158,"line_start":48,"line_end":48,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1674}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read_to_string.rs","byte_start":8067560,"byte_end":8067578,"line_start":19,"line_end":19,"column_start":43,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1696},{"krate":0,"index":1697}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read_vectored.rs","byte_start":8068982,"byte_end":8069000,"line_start":14,"line_end":14,"column_start":43,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1716},{"krate":0,"index":1717}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8069841,"byte_end":8069845,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1731},{"krate":0,"index":1732},{"krate":0,"index":1733},{"krate":0,"index":1734},{"krate":0,"index":1735}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8073517,"byte_end":8073521,"line_start":160,"line_end":160,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1738}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8074439,"byte_end":8074443,"line_start":194,"line_end":194,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1743},{"krate":0,"index":1744}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/seek/seek.rs","byte_start":8079897,"byte_end":8079907,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1777},{"krate":0,"index":1778}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/flush.rs","byte_start":8091548,"byte_end":8091559,"line_start":13,"line_end":13,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1797},{"krate":0,"index":1798}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/write.rs","byte_start":8092090,"byte_end":8092101,"line_start":14,"line_end":14,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1815},{"krate":0,"index":1816}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/write_all.rs","byte_start":8092687,"byte_end":8092701,"line_start":15,"line_end":15,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1834},{"krate":0,"index":1835}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/write_fmt.rs","byte_start":8093703,"byte_end":8093717,"line_start":17,"line_end":17,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1854},{"krate":0,"index":1855}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/write_vectored.rs","byte_start":8095258,"byte_end":8095277,"line_start":14,"line_end":14,"column_start":44,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1873},{"krate":0,"index":1874}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/utils.rs","byte_start":8095765,"byte_end":8095771,"line_start":8,"line_end":8,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1891}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/utils.rs","byte_start":8096024,"byte_end":8096036,"line_start":20,"line_end":20,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1895}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/utils.rs","byte_start":8096323,"byte_end":8096335,"line_start":32,"line_end":32,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1898}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/utils.rs","byte_start":8096466,"byte_end":8096478,"line_start":38,"line_end":38,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1900}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8098501,"byte_end":8098510,"line_start":55,"line_end":55,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1922},{"krate":0,"index":1923}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8099738,"byte_end":8099747,"line_start":100,"line_end":100,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1926},{"krate":0,"index":1927},{"krate":0,"index":1928},{"krate":0,"index":1929},{"krate":0,"index":1930},{"krate":0,"index":1931}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8102487,"byte_end":8102496,"line_start":201,"line_end":201,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1934},{"krate":0,"index":1935}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8103950,"byte_end":8103959,"line_start":240,"line_end":240,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1939},{"krate":0,"index":1941}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8104881,"byte_end":8104890,"line_start":265,"line_end":265,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1944}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8105228,"byte_end":8105237,"line_start":277,"line_end":277,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1947}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8112286,"byte_end":8112295,"line_start":118,"line_end":118,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1965},{"krate":0,"index":1966},{"krate":0,"index":1967},{"krate":0,"index":1968},{"krate":0,"index":1969},{"krate":0,"index":1970},{"krate":0,"index":1973},{"krate":0,"index":1974}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8118127,"byte_end":8118136,"line_start":302,"line_end":302,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1977},{"krate":0,"index":1978},{"krate":0,"index":1979}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8119034,"byte_end":8119043,"line_start":329,"line_end":329,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1982}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8119289,"byte_end":8119298,"line_start":338,"line_end":338,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1985}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8121829,"byte_end":8121839,"line_start":63,"line_end":63,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2008},{"krate":0,"index":2009}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8126699,"byte_end":8126705,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2027},{"krate":0,"index":2028},{"krate":0,"index":2029},{"krate":0,"index":2030},{"krate":0,"index":2031},{"krate":0,"index":2032}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8130006,"byte_end":8130012,"line_start":154,"line_end":154,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2035}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8130278,"byte_end":8130284,"line_start":167,"line_end":167,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2038},{"krate":0,"index":2039}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8130800,"byte_end":8130806,"line_start":188,"line_end":188,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2042},{"krate":0,"index":2043}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8131156,"byte_end":8131162,"line_start":201,"line_end":201,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2045},{"krate":0,"index":2046},{"krate":0,"index":2047},{"krate":0,"index":2048}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8131921,"byte_end":8131927,"line_start":227,"line_end":227,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2050},{"krate":0,"index":2051},{"krate":0,"index":2052}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8132451,"byte_end":8132457,"line_start":245,"line_end":245,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2054},{"krate":0,"index":2055},{"krate":0,"index":2056}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8133996,"byte_end":8134001,"line_start":39,"line_end":39,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2071}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8134120,"byte_end":8134125,"line_start":45,"line_end":45,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2073}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8134329,"byte_end":8134334,"line_start":56,"line_end":56,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2075},{"krate":0,"index":2077}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8135586,"byte_end":8135592,"line_start":40,"line_end":40,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2091}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8135711,"byte_end":8135717,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2093}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8136760,"byte_end":8136764,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2107}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8136883,"byte_end":8136887,"line_start":42,"line_end":42,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2109},{"krate":0,"index":2110},{"krate":0,"index":2111}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8168372,"byte_end":8168379,"line_start":60,"line_end":60,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2267},{"krate":0,"index":2268}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8172029,"byte_end":8172035,"line_start":111,"line_end":111,"column_start":6,"column_end":12},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8172992,"byte_end":8172998,"line_start":140,"line_end":140,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2284},{"krate":0,"index":2286},{"krate":0,"index":2288}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8176401,"byte_end":8176407,"line_start":226,"line_end":226,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2379}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8180659,"byte_end":8180664,"line_start":116,"line_end":116,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2305}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8183674,"byte_end":8183679,"line_start":199,"line_end":199,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2312}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8185778,"byte_end":8185783,"line_start":252,"line_end":252,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2414}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8190291,"byte_end":8190297,"line_start":111,"line_end":111,"column_start":6,"column_end":12},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8191254,"byte_end":8191260,"line_start":140,"line_end":140,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2341},{"krate":0,"index":2343},{"krate":0,"index":2345}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8194663,"byte_end":8194669,"line_start":226,"line_end":226,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2448}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8204866,"byte_end":8204878,"line_start":48,"line_end":48,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2490},{"krate":0,"index":2491},{"krate":0,"index":2496},{"krate":0,"index":2497},{"krate":0,"index":2498},{"krate":0,"index":2502},{"krate":0,"index":2503},{"krate":0,"index":2504},{"krate":0,"index":2509},{"krate":0,"index":2514},{"krate":0,"index":2520},{"krate":0,"index":2525}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8212553,"byte_end":8212565,"line_start":298,"line_end":298,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2527}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8213018,"byte_end":8213030,"line_start":315,"line_end":315,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2529}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8213387,"byte_end":8213399,"line_start":325,"line_end":325,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2531}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8213508,"byte_end":8213520,"line_start":331,"line_end":331,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2533}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8213704,"byte_end":8213716,"line_start":338,"line_end":338,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2535}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8215708,"byte_end":8215720,"line_start":56,"line_end":56,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2560},{"krate":0,"index":2565},{"krate":0,"index":2569},{"krate":0,"index":2570}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8219517,"byte_end":8219529,"line_start":170,"line_end":170,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2572}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8220500,"byte_end":8220508,"line_start":197,"line_end":197,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2574},{"krate":0,"index":2575}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8220884,"byte_end":8220896,"line_start":209,"line_end":209,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2577}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8221253,"byte_end":8221265,"line_start":219,"line_end":219,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2579}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8221374,"byte_end":8221386,"line_start":225,"line_end":225,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2581}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8221570,"byte_end":8221582,"line_start":232,"line_end":232,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2583}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8223024,"byte_end":8223034,"line_start":44,"line_end":44,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2611},{"krate":0,"index":2616},{"krate":0,"index":2617},{"krate":0,"index":2618},{"krate":0,"index":2619}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8226437,"byte_end":8226447,"line_start":156,"line_end":156,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2621}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8226903,"byte_end":8226913,"line_start":176,"line_end":176,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2626},{"krate":0,"index":2627},{"krate":0,"index":2628}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8227950,"byte_end":8227960,"line_start":213,"line_end":213,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2636}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8228409,"byte_end":8228419,"line_start":230,"line_end":230,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2638}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8228756,"byte_end":8228766,"line_start":240,"line_end":240,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2640}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8228875,"byte_end":8228885,"line_start":246,"line_end":246,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2642}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8229061,"byte_end":8229071,"line_start":253,"line_end":253,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2644}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/all.rs","byte_start":6994616,"byte_end":6994625,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/all.rs","byte_start":6994832,"byte_end":6994841,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/all.rs","byte_start":6994881,"byte_end":6994890,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/any.rs","byte_start":6996021,"byte_end":6996030,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/any.rs","byte_start":6996237,"byte_end":6996246,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/any.rs","byte_start":6996286,"byte_end":6996295,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/chain.rs","byte_start":6997675,"byte_end":6997680,"line_start":26,"line_end":26,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/chain.rs","byte_start":6997898,"byte_end":6997903,"line_start":35,"line_end":35,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/cloned.rs","byte_start":6999000,"byte_end":6999006,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/cloned.rs","byte_start":6999118,"byte_end":6999124,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/cmp.rs","byte_start":7000090,"byte_end":7000099,"line_start":27,"line_end":27,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/cmp.rs","byte_start":7000328,"byte_end":7000337,"line_start":38,"line_end":38,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/copied.rs","byte_start":7002728,"byte_end":7002734,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/copied.rs","byte_start":7002846,"byte_end":7002852,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/cycle.rs","byte_start":7003466,"byte_end":7003471,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/cycle.rs","byte_start":7003681,"byte_end":7003686,"line_start":26,"line_end":26,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/cycle.rs","byte_start":7003822,"byte_end":7003827,"line_start":34,"line_end":34,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/enumerate.rs","byte_start":7004781,"byte_end":7004790,"line_start":17,"line_end":17,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/enumerate.rs","byte_start":7004897,"byte_end":7004906,"line_start":23,"line_end":23,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/eq.rs","byte_start":7005947,"byte_end":7005955,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/eq.rs","byte_start":7006169,"byte_end":7006177,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/filter.rs","byte_start":7007508,"byte_end":7007514,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/filter.rs","byte_start":7007679,"byte_end":7007685,"line_start":33,"line_end":33,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/filter_map.rs","byte_start":7008533,"byte_end":7008542,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/filter_map.rs","byte_start":7008661,"byte_end":7008670,"line_start":23,"line_end":23,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/find.rs","byte_start":7009551,"byte_end":7009561,"line_start":14,"line_end":14,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/find.rs","byte_start":7009695,"byte_end":7009705,"line_start":20,"line_end":20,"column_start":29,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/find.rs","byte_start":7009746,"byte_end":7009756,"line_start":22,"line_end":22,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/find_map.rs","byte_start":7010588,"byte_end":7010601,"line_start":14,"line_end":14,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/find_map.rs","byte_start":7010735,"byte_end":7010748,"line_start":20,"line_end":20,"column_start":29,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/find_map.rs","byte_start":7010792,"byte_end":7010805,"line_start":22,"line_end":22,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/fold.rs","byte_start":7011759,"byte_end":7011769,"line_start":19,"line_end":19,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/fold.rs","byte_start":7011962,"byte_end":7011972,"line_start":29,"line_end":29,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":395},{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/for_each.rs","byte_start":7012981,"byte_end":7012994,"line_start":19,"line_end":19,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/for_each.rs","byte_start":7013143,"byte_end":7013156,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":412},{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/fuse.rs","byte_start":7014232,"byte_end":7014236,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/fuse.rs","byte_start":7014391,"byte_end":7014395,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/ge.rs","byte_start":7015448,"byte_end":7015456,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/ge.rs","byte_start":7015664,"byte_end":7015672,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/gt.rs","byte_start":7016713,"byte_end":7016721,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/gt.rs","byte_start":7016929,"byte_end":7016937,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":466},{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/inspect.rs","byte_start":7017954,"byte_end":7017961,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/inspect.rs","byte_start":7018110,"byte_end":7018117,"line_start":33,"line_end":33,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/last.rs","byte_start":7018895,"byte_end":7018905,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/last.rs","byte_start":7019021,"byte_end":7019031,"line_start":25,"line_end":25,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":499},{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/le.rs","byte_start":7020176,"byte_end":7020184,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/le.rs","byte_start":7020392,"byte_end":7020400,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":519},{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/lt.rs","byte_start":7021451,"byte_end":7021459,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/lt.rs","byte_start":7021667,"byte_end":7021675,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/map.rs","byte_start":7022457,"byte_end":7022460,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/map.rs","byte_start":7022612,"byte_end":7022615,"line_start":27,"line_end":27,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/max.rs","byte_start":7023406,"byte_end":7023415,"line_start":22,"line_end":22,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/max.rs","byte_start":7023604,"byte_end":7023613,"line_start":32,"line_end":32,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/max_by.rs","byte_start":7024891,"byte_end":7024902,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/max_by.rs","byte_start":7025089,"byte_end":7025100,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":597},{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/max_by_key.rs","byte_start":7026376,"byte_end":7026390,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/max_by_key.rs","byte_start":7026575,"byte_end":7026589,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/min.rs","byte_start":7028127,"byte_end":7028136,"line_start":22,"line_end":22,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/min.rs","byte_start":7028325,"byte_end":7028334,"line_start":32,"line_end":32,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":645},{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/min_by.rs","byte_start":7029609,"byte_end":7029620,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/min_by.rs","byte_start":7029807,"byte_end":7029818,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":664},{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/min_by_key.rs","byte_start":7031121,"byte_end":7031135,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/min_by_key.rs","byte_start":7031320,"byte_end":7031334,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":683},{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/ne.rs","byte_start":7032951,"byte_end":7032959,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/ne.rs","byte_start":7033173,"byte_end":7033181,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":709},{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/next.rs","byte_start":7034300,"byte_end":7034310,"line_start":13,"line_end":13,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":724},{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/nth.rs","byte_start":7034773,"byte_end":7034782,"line_start":14,"line_end":14,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/nth.rs","byte_start":7034806,"byte_end":7034815,"line_start":16,"line_end":16,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":743}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/nth.rs","byte_start":7034945,"byte_end":7034954,"line_start":22,"line_end":22,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":747},{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/partial_cmp.rs","byte_start":7036191,"byte_end":7036207,"line_start":27,"line_end":27,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/partial_cmp.rs","byte_start":7036436,"byte_end":7036452,"line_start":38,"line_end":38,"column_start":39,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":767},{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/position.rs","byte_start":7038927,"byte_end":7038941,"line_start":15,"line_end":15,"column_start":26,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/position.rs","byte_start":7038971,"byte_end":7038985,"line_start":17,"line_end":17,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/position.rs","byte_start":7039188,"byte_end":7039202,"line_start":27,"line_end":27,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":796},{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/scan.rs","byte_start":7040449,"byte_end":7040453,"line_start":24,"line_end":24,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/scan.rs","byte_start":7040658,"byte_end":7040662,"line_start":33,"line_end":33,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":815},{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/skip.rs","byte_start":7041695,"byte_end":7041699,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":828}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/skip.rs","byte_start":7041813,"byte_end":7041817,"line_start":30,"line_end":30,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":831},{"krate":0,"index":832}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/skip_while.rs","byte_start":7042986,"byte_end":7042995,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":843}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/skip_while.rs","byte_start":7043177,"byte_end":7043186,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":847},{"krate":0,"index":848}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/step_by.rs","byte_start":7044587,"byte_end":7044593,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/step_by.rs","byte_start":7044794,"byte_end":7044800,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":861},{"krate":0,"index":862}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/take.rs","byte_start":7046060,"byte_end":7046064,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/take.rs","byte_start":7046235,"byte_end":7046239,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":875},{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/take_while.rs","byte_start":7047332,"byte_end":7047341,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":887}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/take_while.rs","byte_start":7047506,"byte_end":7047515,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":891},{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/try_fold.rs","byte_start":7048423,"byte_end":7048436,"line_start":15,"line_end":15,"column_start":29,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/try_fold.rs","byte_start":7048472,"byte_end":7048485,"line_start":17,"line_end":17,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":918}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/try_fold.rs","byte_start":7048697,"byte_end":7048710,"line_start":27,"line_end":27,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":925},{"krate":0,"index":926}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/try_for_each.rs","byte_start":7049790,"byte_end":7049806,"line_start":14,"line_end":14,"column_start":26,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/try_for_each.rs","byte_start":7049836,"byte_end":7049852,"line_start":16,"line_end":16,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/try_for_each.rs","byte_start":7049987,"byte_end":7050003,"line_start":22,"line_end":22,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":954},{"krate":0,"index":955}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/zip.rs","byte_start":7051307,"byte_end":7051310,"line_start":26,"line_end":26,"column_start":60,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":967}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/zip.rs","byte_start":7051550,"byte_end":7051553,"line_start":35,"line_end":35,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":971}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/zip.rs","byte_start":7051755,"byte_end":7051758,"line_start":45,"line_end":45,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":975},{"krate":0,"index":976}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":7053355,"byte_end":7053360,"line_start":44,"line_end":44,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1033},{"krate":0,"index":1034}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7053910,"byte_end":7053916,"line_start":17,"line_end":17,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7054845,"byte_end":7054851,"line_start":58,"line_end":58,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1049},{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":7056272,"byte_end":7056280,"line_start":49,"line_end":49,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1062},{"krate":0,"index":1063}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":7057648,"byte_end":7057652,"line_start":45,"line_end":45,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1075},{"krate":0,"index":1076}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":7058878,"byte_end":7058884,"line_start":41,"line_end":41,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1087},{"krate":0,"index":1088}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7059499,"byte_end":7059509,"line_start":17,"line_end":17,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7060701,"byte_end":7060711,"line_start":74,"line_end":74,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1103},{"krate":0,"index":1104}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7069418,"byte_end":7069423,"line_start":48,"line_end":48,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7069469,"byte_end":7069474,"line_start":49,"line_end":49,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7069490,"byte_end":7069495,"line_start":51,"line_end":51,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1142}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7069874,"byte_end":7069879,"line_start":70,"line_end":70,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1145},{"krate":0,"index":1161},{"krate":0,"index":1162},{"krate":0,"index":1163}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7070640,"byte_end":7070650,"line_start":101,"line_end":101,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1156},{"krate":0,"index":1157}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7071716,"byte_end":7071726,"line_start":128,"line_end":128,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1160}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7074175,"byte_end":7074180,"line_start":221,"line_end":221,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7074300,"byte_end":7074306,"line_start":224,"line_end":224,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1170}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7074678,"byte_end":7074683,"line_start":237,"line_end":237,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7074794,"byte_end":7074799,"line_start":243,"line_end":243,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1176}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7075025,"byte_end":7075035,"line_start":252,"line_end":252,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7075085,"byte_end":7075095,"line_start":253,"line_end":253,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7075132,"byte_end":7075142,"line_start":255,"line_end":255,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1188}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7075498,"byte_end":7075508,"line_start":265,"line_end":265,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1191}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7075674,"byte_end":7075684,"line_start":271,"line_end":271,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1194}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7075816,"byte_end":7075826,"line_start":277,"line_end":277,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1197},{"krate":0,"index":1198}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7075964,"byte_end":7075974,"line_start":285,"line_end":285,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1201}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7077789,"byte_end":7077795,"line_start":59,"line_end":59,"column_start":40,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7077848,"byte_end":7077854,"line_start":60,"line_end":60,"column_start":47,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7077870,"byte_end":7077876,"line_start":62,"line_end":62,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1234}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7078315,"byte_end":7078321,"line_start":82,"line_end":82,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1237},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1272}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7078987,"byte_end":7078997,"line_start":109,"line_end":109,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1248},{"krate":0,"index":1249}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7080107,"byte_end":7080117,"line_start":136,"line_end":136,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1252}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7082958,"byte_end":7082969,"line_start":234,"line_end":234,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1265},{"krate":0,"index":1266}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7084082,"byte_end":7084093,"line_start":261,"line_end":261,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1269}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7086522,"byte_end":7086528,"line_start":348,"line_end":348,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1275}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7086648,"byte_end":7086654,"line_start":351,"line_end":351,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1279}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7087028,"byte_end":7087034,"line_start":364,"line_end":364,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1282}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7087147,"byte_end":7087153,"line_start":370,"line_end":370,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1285}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7087392,"byte_end":7087407,"line_start":379,"line_end":379,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7087457,"byte_end":7087472,"line_start":380,"line_end":380,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7087509,"byte_end":7087524,"line_start":382,"line_end":382,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1297}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7087885,"byte_end":7087900,"line_start":393,"line_end":393,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1300}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7088066,"byte_end":7088081,"line_start":399,"line_end":399,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1303}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7088213,"byte_end":7088228,"line_start":405,"line_end":405,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1306},{"krate":0,"index":1307}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7088491,"byte_end":7088507,"line_start":416,"line_end":416,"column_start":40,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7088557,"byte_end":7088573,"line_start":417,"line_end":417,"column_start":40,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7088610,"byte_end":7088626,"line_start":419,"line_end":419,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1319}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7089024,"byte_end":7089040,"line_start":432,"line_end":432,"column_start":45,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1322}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7089206,"byte_end":7089222,"line_start":438,"line_end":438,"column_start":49,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1325}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7089354,"byte_end":7089370,"line_start":444,"line_end":444,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1328},{"krate":0,"index":1329}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7089508,"byte_end":7089524,"line_start":452,"line_end":452,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1332}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/waker_set.rs","byte_start":7091587,"byte_end":7091595,"line_start":49,"line_end":49,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1356},{"krate":0,"index":1357},{"krate":0,"index":1358},{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1363}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/waker_set.rs","byte_start":7095692,"byte_end":7095696,"line_start":193,"line_end":193,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1368}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/waker_set.rs","byte_start":7096262,"byte_end":7096266,"line_start":213,"line_end":213,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1370},{"krate":0,"index":1371}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/waker_set.rs","byte_start":7096420,"byte_end":7096424,"line_start":222,"line_end":222,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1373}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8233981,"byte_end":8233989,"line_start":36,"line_end":36,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2854},{"krate":0,"index":2855}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/builder.rs","byte_start":8239093,"byte_end":8239100,"line_start":16,"line_end":16,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2913},{"krate":0,"index":2914},{"krate":0,"index":2915}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/builder.rs","byte_start":8240760,"byte_end":8240768,"line_start":77,"line_end":77,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2924}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/executor/sleepers.rs","byte_start":8248536,"byte_end":8248544,"line_start":19,"line_end":19,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2988},{"krate":0,"index":2989},{"krate":0,"index":2990}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8249916,"byte_end":8249926,"line_start":17,"line_end":17,"column_start":25,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8249957,"byte_end":8249967,"line_start":18,"line_end":18,"column_start":25,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8249983,"byte_end":8249993,"line_start":20,"line_end":20,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3004},{"krate":0,"index":3005}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8250562,"byte_end":8250572,"line_start":46,"line_end":46,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3008},{"krate":0,"index":3009}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8256882,"byte_end":8256887,"line_start":28,"line_end":28,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3073}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8257430,"byte_end":8257434,"line_start":48,"line_end":48,"column_start":22,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8257459,"byte_end":8257463,"line_start":49,"line_end":49,"column_start":22,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8257473,"byte_end":8257477,"line_start":51,"line_end":51,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3079},{"krate":0,"index":3080},{"krate":0,"index":3081},{"krate":0,"index":3083},{"krate":0,"index":3084},{"krate":0,"index":3086},{"krate":0,"index":3087},{"krate":0,"index":3091}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8260222,"byte_end":8260226,"line_start":146,"line_end":146,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3096}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8260504,"byte_end":8260508,"line_start":158,"line_end":158,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3098}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8260955,"byte_end":8260959,"line_start":170,"line_end":170,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3100}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_id.rs","byte_start":8261686,"byte_end":8261692,"line_start":18,"line_end":18,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3107}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_id.rs","byte_start":8262018,"byte_end":8262024,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3110}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8262636,"byte_end":8262644,"line_start":21,"line_end":21,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3121},{"krate":0,"index":3124},{"krate":0,"index":3129}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8266483,"byte_end":8266494,"line_start":148,"line_end":148,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3133}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8266638,"byte_end":8266649,"line_start":154,"line_end":154,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3135}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8266814,"byte_end":8266825,"line_start":160,"line_end":160,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8267193,"byte_end":8267202,"line_start":177,"line_end":177,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3143},{"krate":0,"index":3144},{"krate":0,"index":3147}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8277006,"byte_end":8277016,"line_start":25,"line_end":25,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3339},{"krate":0,"index":3340},{"krate":0,"index":3341}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8279595,"byte_end":8279605,"line_start":117,"line_end":117,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4341}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8280363,"byte_end":8280371,"line_start":20,"line_end":20,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3360},{"krate":0,"index":3361},{"krate":0,"index":3362},{"krate":0,"index":3366},{"krate":0,"index":3370}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8284334,"byte_end":8284342,"line_start":155,"line_end":155,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3372}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8284495,"byte_end":8284503,"line_start":161,"line_end":161,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3374}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8284658,"byte_end":8284666,"line_start":170,"line_end":170,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4344}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8286846,"byte_end":8286850,"line_start":69,"line_end":69,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3416},{"krate":0,"index":3417},{"krate":0,"index":3423},{"krate":0,"index":3429},{"krate":0,"index":3434},{"krate":0,"index":3439},{"krate":0,"index":3444},{"krate":0,"index":3448}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8294696,"byte_end":8294700,"line_start":312,"line_end":312,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3453}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8295179,"byte_end":8295183,"line_start":322,"line_end":322,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3455}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8295297,"byte_end":8295301,"line_start":328,"line_end":328,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3457}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8295782,"byte_end":8295786,"line_start":349,"line_end":349,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3461},{"krate":0,"index":3462},{"krate":0,"index":3463}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8296950,"byte_end":8296954,"line_start":388,"line_end":388,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3470}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8297443,"byte_end":8297447,"line_start":409,"line_end":409,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3474}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8297636,"byte_end":8297640,"line_start":418,"line_end":418,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4351}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8297756,"byte_end":8297760,"line_start":424,"line_end":424,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4353}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8297904,"byte_end":8297908,"line_start":430,"line_end":430,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4355}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8299028,"byte_end":8299032,"line_start":470,"line_end":470,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8299069,"byte_end":8299073,"line_start":471,"line_end":471,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8299340,"byte_end":8299344,"line_start":485,"line_end":485,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3490},{"krate":0,"index":3491}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8300579,"byte_end":8300588,"line_start":522,"line_end":522,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8300625,"byte_end":8300634,"line_start":523,"line_end":523,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8300650,"byte_end":8300659,"line_start":525,"line_end":525,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3503}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8301050,"byte_end":8301059,"line_start":538,"line_end":538,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3507}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8301367,"byte_end":8301376,"line_start":550,"line_end":550,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3510},{"krate":0,"index":3511}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8301502,"byte_end":8301511,"line_start":558,"line_end":558,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3514}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8303072,"byte_end":8303081,"line_start":611,"line_end":611,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3531},{"krate":0,"index":3532},{"krate":0,"index":3534},{"krate":0,"index":3535},{"krate":0,"index":3536},{"krate":0,"index":3538},{"krate":0,"index":3540}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8327185,"byte_end":8327196,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3570},{"krate":0,"index":3571},{"krate":0,"index":3572},{"krate":0,"index":3573},{"krate":0,"index":3574},{"krate":0,"index":3575},{"krate":0,"index":3576},{"krate":0,"index":3577}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8333985,"byte_end":8333996,"line_start":294,"line_end":294,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3583}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8334141,"byte_end":8334152,"line_start":303,"line_end":303,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4367},{"krate":0,"index":4368}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8340251,"byte_end":8340258,"line_start":81,"line_end":81,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3616}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8340457,"byte_end":8340464,"line_start":88,"line_end":88,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3618},{"krate":0,"index":3619}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8355971,"byte_end":8355980,"line_start":29,"line_end":29,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3729},{"krate":0,"index":3730}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8356185,"byte_end":8356194,"line_start":39,"line_end":39,"column_start":24,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8356979,"byte_end":8356989,"line_start":31,"line_end":31,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3740}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8357498,"byte_end":8357508,"line_start":50,"line_end":50,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3742}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8357601,"byte_end":8357611,"line_start":56,"line_end":56,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3744}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8357717,"byte_end":8357727,"line_start":62,"line_end":62,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3747},{"krate":0,"index":3748}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8357884,"byte_end":8357894,"line_start":70,"line_end":70,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3751}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8358019,"byte_end":8358029,"line_start":76,"line_end":76,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8358059,"byte_end":8358068,"line_start":78,"line_end":78,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3754}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8358781,"byte_end":8358785,"line_start":21,"line_end":21,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3765}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8359258,"byte_end":8359262,"line_start":40,"line_end":40,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3768},{"krate":0,"index":3769}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8359424,"byte_end":8359428,"line_start":48,"line_end":48,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3771}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8359569,"byte_end":8359580,"line_start":52,"line_end":52,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3777}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8359877,"byte_end":8359881,"line_start":64,"line_end":64,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3779}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8359974,"byte_end":8359978,"line_start":70,"line_end":70,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3781}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8360095,"byte_end":8360099,"line_start":76,"line_end":76,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3784}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8360246,"byte_end":8360250,"line_start":82,"line_end":82,"column_start":24,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8361906,"byte_end":8361910,"line_start":53,"line_end":53,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3806},{"krate":0,"index":3808},{"krate":0,"index":3809},{"krate":0,"index":3810},{"krate":0,"index":3811},{"krate":0,"index":3812},{"krate":0,"index":3813},{"krate":0,"index":3814},{"krate":0,"index":3815},{"krate":0,"index":3817},{"krate":0,"index":3818},{"krate":0,"index":3819},{"krate":0,"index":3821},{"krate":0,"index":3823},{"krate":0,"index":3825},{"krate":0,"index":3826},{"krate":0,"index":3827},{"krate":0,"index":3829},{"krate":0,"index":3831},{"krate":0,"index":3833},{"krate":0,"index":3834},{"krate":0,"index":3835},{"krate":0,"index":3836},{"krate":0,"index":3839},{"krate":0,"index":3842},{"krate":0,"index":3845},{"krate":0,"index":3848},{"krate":0,"index":3851},{"krate":0,"index":3854},{"krate":0,"index":3858},{"krate":0,"index":3862}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386760,"byte_end":8386763,"line_start":816,"line_end":816,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3864}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386992,"byte_end":8386995,"line_start":824,"line_end":824,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3866}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8387290,"byte_end":8387292,"line_start":833,"line_end":833,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3868}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8387495,"byte_end":8387499,"line_start":841,"line_end":841,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3870},{"krate":0,"index":3871}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8387623,"byte_end":8387627,"line_start":849,"line_end":849,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3873}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8387721,"byte_end":8387725,"line_start":855,"line_end":855,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3875}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8387803,"byte_end":8387808,"line_start":861,"line_end":861,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3877}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8387904,"byte_end":8387907,"line_start":867,"line_end":867,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3880}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8388033,"byte_end":8388036,"line_start":874,"line_end":874,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3882}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8388136,"byte_end":8388144,"line_start":880,"line_end":880,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3884}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8388325,"byte_end":8388331,"line_start":892,"line_end":892,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3888}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8388420,"byte_end":8388427,"line_start":898,"line_end":898,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3890}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8391575,"byte_end":8391579,"line_start":1016,"line_end":1016,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3910}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8391686,"byte_end":8391690,"line_start":1022,"line_end":1022,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3912}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8391786,"byte_end":8391793,"line_start":1028,"line_end":1028,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3914}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8393602,"byte_end":8393609,"line_start":25,"line_end":25,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3931},{"krate":0,"index":3932},{"krate":0,"index":3933},{"krate":0,"index":3935},{"krate":0,"index":3936},{"krate":0,"index":3938},{"krate":0,"index":3940},{"krate":0,"index":3941}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8398855,"byte_end":8398862,"line_start":199,"line_end":199,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3943}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8398970,"byte_end":8398973,"line_start":205,"line_end":205,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3945}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8399073,"byte_end":8399076,"line_start":211,"line_end":211,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3947}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8399227,"byte_end":8399234,"line_start":218,"line_end":218,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3950}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8399351,"byte_end":8399358,"line_start":224,"line_end":224,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3952}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8399467,"byte_end":8399475,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3954}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8399584,"byte_end":8399591,"line_start":236,"line_end":236,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3956}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8399697,"byte_end":8399704,"line_start":242,"line_end":242,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3958},{"krate":0,"index":3959}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8399883,"byte_end":8399890,"line_start":250,"line_end":250,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3962}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8400085,"byte_end":8400092,"line_start":258,"line_end":258,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3966}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8400249,"byte_end":8400256,"line_start":264,"line_end":264,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3970},{"krate":0,"index":3971}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8400377,"byte_end":8400384,"line_start":272,"line_end":272,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3973}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8400476,"byte_end":8400479,"line_start":278,"line_end":278,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3976}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8400611,"byte_end":8400614,"line_start":285,"line_end":285,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3979}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8400765,"byte_end":8400772,"line_start":292,"line_end":292,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3982}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8400884,"byte_end":8400887,"line_start":299,"line_end":299,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3984}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8401110,"byte_end":8401112,"line_start":307,"line_end":307,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3986}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8401327,"byte_end":8401334,"line_start":315,"line_end":315,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3988}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8402339,"byte_end":8402346,"line_start":355,"line_end":355,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3990}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8402475,"byte_end":8402482,"line_start":361,"line_end":361,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3992}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8402587,"byte_end":8402594,"line_start":367,"line_end":367,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3994}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8407725,"byte_end":8407744,"line_start":74,"line_end":74,"column_start":26,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4059}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8408016,"byte_end":8408035,"line_start":83,"line_end":83,"column_start":49,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":4063},{"krate":0,"index":4064}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8408759,"byte_end":8408769,"line_start":104,"line_end":104,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4066},{"krate":0,"index":4067}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8409064,"byte_end":8409076,"line_start":117,"line_end":117,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4069},{"krate":0,"index":4070}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8409441,"byte_end":8409453,"line_start":132,"line_end":132,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4073},{"krate":0,"index":4074}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8413172,"byte_end":8413178,"line_start":271,"line_end":271,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4104},{"krate":0,"index":4105}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/driver/mod.rs","byte_start":8415175,"byte_end":8415182,"line_start":60,"line_end":60,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4128},{"krate":0,"index":4129},{"krate":0,"index":4130}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/driver/mod.rs","byte_start":8420257,"byte_end":8420264,"line_start":200,"line_end":200,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4142},{"krate":0,"index":4143},{"krate":0,"index":4144},{"krate":0,"index":4149},{"krate":0,"index":4154},{"krate":0,"index":4156},{"krate":0,"index":4158}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/driver/mod.rs","byte_start":8425154,"byte_end":8425161,"line_start":339,"line_end":339,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4161}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/driver/mod.rs","byte_start":8425436,"byte_end":8425443,"line_start":349,"line_end":349,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4164}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8428306,"byte_end":8428317,"line_start":55,"line_end":55,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4189},{"krate":0,"index":4194},{"krate":0,"index":4199},{"krate":0,"index":4200}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8432973,"byte_end":8432981,"line_start":194,"line_end":194,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4203},{"krate":0,"index":4204}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8433345,"byte_end":8433356,"line_start":206,"line_end":206,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4206}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8433770,"byte_end":8433781,"line_start":219,"line_end":219,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4769}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8433910,"byte_end":8433921,"line_start":225,"line_end":225,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4771}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8434080,"byte_end":8434091,"line_start":231,"line_end":231,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4773}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8437018,"byte_end":8437027,"line_start":53,"line_end":53,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4227},{"krate":0,"index":4233},{"krate":0,"index":4234},{"krate":0,"index":4235},{"krate":0,"index":4236},{"krate":0,"index":4237},{"krate":0,"index":4242},{"krate":0,"index":4243},{"krate":0,"index":4244}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8444768,"byte_end":8444777,"line_start":296,"line_end":296,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4246},{"krate":0,"index":4247}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8445457,"byte_end":8445466,"line_start":324,"line_end":324,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4252},{"krate":0,"index":4253},{"krate":0,"index":4254},{"krate":0,"index":4255}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8446788,"byte_end":8446797,"line_start":370,"line_end":370,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4263}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8447206,"byte_end":8447215,"line_start":383,"line_end":383,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4786}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8447344,"byte_end":8447353,"line_start":389,"line_end":389,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4788}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8447508,"byte_end":8447517,"line_start":395,"line_end":395,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4790}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8450446,"byte_end":8450455,"line_start":51,"line_end":51,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4275},{"krate":0,"index":4280},{"krate":0,"index":4282},{"krate":0,"index":4289},{"krate":0,"index":4296},{"krate":0,"index":4302},{"krate":0,"index":4309},{"krate":0,"index":4316},{"krate":0,"index":4317},{"krate":0,"index":4318},{"krate":0,"index":4319},{"krate":0,"index":4320},{"krate":0,"index":4321},{"krate":0,"index":4322},{"krate":0,"index":4323},{"krate":0,"index":4324},{"krate":0,"index":4325},{"krate":0,"index":4326},{"krate":0,"index":4327},{"krate":0,"index":4328},{"krate":0,"index":4329}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8465546,"byte_end":8465555,"line_start":498,"line_end":498,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4331}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8465954,"byte_end":8465963,"line_start":511,"line_end":511,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4801}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8466092,"byte_end":8466101,"line_start":517,"line_end":517,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4803}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8466256,"byte_end":8466265,"line_start":523,"line_end":523,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4805}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":9076,"byte_end":9082,"line_start":244,"line_end":244,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":34}},{"kind":"Mod","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":9096,"byte_end":9098,"line_start":245,"line_end":245,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":84}},{"kind":"Mod","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/mod.rs","byte_start":6907048,"byte_end":6907055,"line_start":290,"line_end":290,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":1462}},{"kind":"Mod","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":9112,"byte_end":9114,"line_start":246,"line_end":246,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":86}},{"kind":"Mod","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/mod.rs","byte_start":6908143,"byte_end":6908147,"line_start":4,"line_end":4,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":2449}},{"kind":"Mod","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/mod.rs","byte_start":8195887,"byte_end":8195889,"line_start":4,"line_end":4,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":2450}},{"kind":"Mod","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/mod.rs","byte_start":8195921,"byte_end":8195923,"line_start":8,"line_end":8,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":2456}},{"kind":"Mod","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/mod.rs","byte_start":8195937,"byte_end":8195940,"line_start":9,"line_end":9,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":2466}},{"kind":"Mod","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":9128,"byte_end":9135,"line_start":247,"line_end":247,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":87}},{"kind":"Mod","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":9149,"byte_end":9155,"line_start":248,"line_end":248,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":88}},{"kind":"Mod","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":9169,"byte_end":9173,"line_start":249,"line_end":249,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":1105}},{"kind":"Mod","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":9187,"byte_end":9191,"line_start":250,"line_end":250,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":1375}},{"kind":"Mod","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":9223,"byte_end":9225,"line_start":254,"line_end":254,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":3260}},{"kind":"Mod","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":9239,"byte_end":9243,"line_start":255,"line_end":255,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":3723}},{"kind":"Mod","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/lib.rs","byte_start":9257,"byte_end":9260,"line_start":256,"line_end":256,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":4008}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/utils.rs","byte_start":10023,"byte_end":10027,"line_start":9,"line_end":9,"column_start":19,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":7},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/future/mod.rs","byte_start":6881683,"byte_end":6881689,"line_start":61,"line_end":61,"column_start":15,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":8191},"to":{"krate":0,"index":1388}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/pending.rs","byte_start":6896169,"byte_end":6896176,"line_start":38,"line_end":38,"column_start":20,"column_end":27},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6897113,"byte_end":6897119,"line_start":38,"line_end":38,"column_start":19,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":69},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/poll_fn.rs","byte_start":6897149,"byte_end":6897155,"line_start":40,"line_end":40,"column_start":23,"column_end":29},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":69},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7103900,"byte_end":7103913,"line_start":53,"line_end":53,"column_start":9,"column_end":22},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":6841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7104114,"byte_end":7104127,"line_start":60,"line_end":60,"column_start":28,"column_end":41},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":6841},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7104763,"byte_end":7104775,"line_start":81,"line_end":81,"column_start":16,"column_end":28},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1420},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/future/timeout.rs","byte_start":7104802,"byte_end":7104814,"line_start":83,"line_end":83,"column_start":23,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1420},"to":{"krate":2,"index":6073}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/lines.rs","byte_start":8033835,"byte_end":8033840,"line_start":32,"line_end":32,"column_start":29,"column_end":34},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":6832},"to":{"krate":15,"index":68}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/read_line.rs","byte_start":8035841,"byte_end":8035855,"line_start":19,"line_end":19,"column_start":46,"column_end":60},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1504},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/read_until.rs","byte_start":8037365,"byte_end":8037380,"line_start":17,"line_end":17,"column_start":46,"column_end":61},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1526},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/split.rs","byte_start":8038609,"byte_end":8038614,"line_start":31,"line_end":31,"column_start":29,"column_end":34},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":6784},"to":{"krate":15,"index":68}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_read/mod.rs","byte_start":8021849,"byte_end":8021856,"line_start":42,"line_end":42,"column_start":15,"column_end":22},"kind":"SuperTrait","from":{"krate":23,"index":27},"to":{"krate":0,"index":2124}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/bytes.rs","byte_start":8056075,"byte_end":8056080,"line_start":18,"line_end":18,"column_start":34,"column_end":39},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2133},"to":{"krate":15,"index":68}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8057955,"byte_end":8057960,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":6696},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8060119,"byte_end":8060124,"line_start":97,"line_end":97,"column_start":51,"column_end":56},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":6696},"to":{"krate":2,"index":6068}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8060366,"byte_end":8060371,"line_start":106,"line_end":106,"column_start":33,"column_end":38},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":6696},"to":{"krate":23,"index":17}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/chain.rs","byte_start":8061516,"byte_end":8061521,"line_start":142,"line_end":142,"column_start":42,"column_end":47},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":6696},"to":{"krate":23,"index":27}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read.rs","byte_start":8063412,"byte_end":8063422,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1620},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read_exact.rs","byte_start":8064018,"byte_end":8064033,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1639},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read_to_end.rs","byte_start":8064988,"byte_end":8065003,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1657},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read_to_end.rs","byte_start":8066153,"byte_end":8066158,"line_start":48,"line_end":48,"column_start":19,"column_end":24},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1669},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read_to_string.rs","byte_start":8067560,"byte_end":8067578,"line_start":19,"line_end":19,"column_start":43,"column_end":61},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1687},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/read_vectored.rs","byte_start":8068982,"byte_end":8069000,"line_start":14,"line_end":14,"column_start":43,"column_end":61},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1709},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8069841,"byte_end":8069845,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":6689},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8073517,"byte_end":8073521,"line_start":160,"line_end":160,"column_start":24,"column_end":28},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":6689},"to":{"krate":23,"index":17}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/take.rs","byte_start":8074439,"byte_end":8074443,"line_start":194,"line_end":194,"column_start":30,"column_end":34},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":6689},"to":{"krate":23,"index":27}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/read/mod.rs","byte_start":8040693,"byte_end":8040697,"line_start":53,"line_end":53,"column_start":15,"column_end":19},"kind":"SuperTrait","from":{"krate":23,"index":17},"to":{"krate":0,"index":2151}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/seek/seek.rs","byte_start":8079897,"byte_end":8079907,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1770},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/seek/mod.rs","byte_start":8077134,"byte_end":8077138,"line_start":35,"line_end":35,"column_start":15,"column_end":19},"kind":"SuperTrait","from":{"krate":23,"index":25},"to":{"krate":0,"index":2181}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/flush.rs","byte_start":8091548,"byte_end":8091559,"line_start":13,"line_end":13,"column_start":44,"column_end":55},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1791},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/write.rs","byte_start":8092090,"byte_end":8092101,"line_start":14,"line_end":14,"column_start":44,"column_end":55},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1808},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/write_all.rs","byte_start":8092687,"byte_end":8092701,"line_start":15,"line_end":15,"column_start":44,"column_end":58},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1827},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/write_fmt.rs","byte_start":8093703,"byte_end":8093717,"line_start":17,"line_end":17,"column_start":44,"column_end":58},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1845},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/write_vectored.rs","byte_start":8095258,"byte_end":8095277,"line_start":14,"line_end":14,"column_start":44,"column_end":63},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1866},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/write/mod.rs","byte_start":8081537,"byte_end":8081542,"line_start":46,"line_end":46,"column_start":15,"column_end":20},"kind":"SuperTrait","from":{"krate":23,"index":20},"to":{"krate":0,"index":2197}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/utils.rs","byte_start":8095765,"byte_end":8095771,"line_start":8,"line_end":8,"column_start":21,"column_end":27},"kind":{"Impl":{"id":32}},"from":{"krate":2,"index":29668},"to":{"krate":0,"index":15}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/utils.rs","byte_start":8096024,"byte_end":8096036,"line_start":20,"line_end":20,"column_start":6,"column_end":18},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2211},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/utils.rs","byte_start":8096323,"byte_end":8096335,"line_start":32,"line_end":32,"column_start":23,"column_end":35},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":2211},"to":{"krate":2,"index":6073}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/utils.rs","byte_start":8096466,"byte_end":8096478,"line_start":38,"line_end":38,"column_start":19,"column_end":31},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":2211},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8098501,"byte_end":8098510,"line_start":55,"line_end":55,"column_start":19,"column_end":28},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":6611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8099738,"byte_end":8099747,"line_start":100,"line_end":100,"column_start":9,"column_end":18},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":6611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8102487,"byte_end":8102496,"line_start":201,"line_end":201,"column_start":24,"column_end":33},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":6611},"to":{"krate":23,"index":17}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8103950,"byte_end":8103959,"line_start":240,"line_end":240,"column_start":27,"column_end":36},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":6611},"to":{"krate":23,"index":27}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8104881,"byte_end":8104890,"line_start":265,"line_end":265,"column_start":47,"column_end":56},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":6611},"to":{"krate":2,"index":6068}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_reader.rs","byte_start":8105228,"byte_end":8105237,"line_start":277,"line_end":277,"column_start":24,"column_end":33},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":6611},"to":{"krate":23,"index":25}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8112286,"byte_end":8112295,"line_start":118,"line_end":118,"column_start":16,"column_end":25},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":6570},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8118127,"byte_end":8118136,"line_start":302,"line_end":302,"column_start":26,"column_end":35},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":6570},"to":{"krate":23,"index":20}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8119034,"byte_end":8119043,"line_start":329,"line_end":329,"column_start":44,"column_end":53},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":6570},"to":{"krate":2,"index":6068}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/buf_writer.rs","byte_start":8119289,"byte_end":8119298,"line_start":338,"line_end":338,"column_start":32,"column_end":41},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":6570},"to":{"krate":23,"index":25}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/copy.rs","byte_start":8121829,"byte_end":8121839,"line_start":63,"line_end":63,"column_start":27,"column_end":37},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":6521},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8126699,"byte_end":8126705,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":2224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8130006,"byte_end":8130012,"line_start":154,"line_end":154,"column_start":18,"column_end":24},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2224},"to":{"krate":23,"index":25}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8130278,"byte_end":8130284,"line_start":167,"line_end":167,"column_start":18,"column_end":24},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":2224},"to":{"krate":23,"index":17}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8130800,"byte_end":8130806,"line_start":188,"line_end":188,"column_start":21,"column_end":27},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":2224},"to":{"krate":23,"index":27}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8131156,"byte_end":8131162,"line_start":201,"line_end":201,"column_start":16,"column_end":22},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":2224},"to":{"krate":23,"index":20}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8131921,"byte_end":8131927,"line_start":227,"line_end":227,"column_start":16,"column_end":22},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":2224},"to":{"krate":23,"index":20}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/cursor.rs","byte_start":8132451,"byte_end":8132457,"line_start":245,"line_end":245,"column_start":16,"column_end":22},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2224},"to":{"krate":23,"index":20}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8133996,"byte_end":8134001,"line_start":39,"line_end":39,"column_start":21,"column_end":26},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":2068},"to":{"krate":2,"index":6068}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8134120,"byte_end":8134125,"line_start":45,"line_end":45,"column_start":15,"column_end":20},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2068},"to":{"krate":23,"index":17}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/empty.rs","byte_start":8134329,"byte_end":8134334,"line_start":56,"line_end":56,"column_start":18,"column_end":23},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":2068},"to":{"krate":23,"index":27}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8135586,"byte_end":8135592,"line_start":40,"line_end":40,"column_start":21,"column_end":27},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2088},"to":{"krate":2,"index":6068}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/repeat.rs","byte_start":8135711,"byte_end":8135717,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2088},"to":{"krate":23,"index":17}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8136760,"byte_end":8136764,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":2104},"to":{"krate":2,"index":6068}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/sink.rs","byte_start":8136883,"byte_end":8136887,"line_start":42,"line_end":42,"column_start":16,"column_end":20},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2104},"to":{"krate":23,"index":20}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/timeout.rs","byte_start":8168372,"byte_end":8168379,"line_start":60,"line_end":60,"column_start":23,"column_end":30},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":6512},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8172029,"byte_end":8172035,"line_start":111,"line_end":111,"column_start":6,"column_end":12},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8172992,"byte_end":8172998,"line_start":140,"line_end":140,"column_start":16,"column_end":22},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2346},"to":{"krate":23,"index":20}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stderr.rs","byte_start":8176401,"byte_end":8176407,"line_start":226,"line_end":226,"column_start":22,"column_end":28},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":2346},"to":{"krate":1,"index":8188}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8180659,"byte_end":8180664,"line_start":116,"line_end":116,"column_start":6,"column_end":11},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":2380},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8183674,"byte_end":8183679,"line_start":199,"line_end":199,"column_start":15,"column_end":20},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":2380},"to":{"krate":23,"index":17}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdin.rs","byte_start":8185778,"byte_end":8185783,"line_start":252,"line_end":252,"column_start":22,"column_end":27},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":2380},"to":{"krate":1,"index":8188}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8190291,"byte_end":8190297,"line_start":111,"line_end":111,"column_start":6,"column_end":12},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":2415},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8191254,"byte_end":8191260,"line_start":140,"line_end":140,"column_start":16,"column_end":22},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2415},"to":{"krate":23,"index":20}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/io/stdout.rs","byte_start":8194663,"byte_end":8194669,"line_start":226,"line_end":226,"column_start":22,"column_end":28},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2415},"to":{"krate":1,"index":8188}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8204866,"byte_end":8204878,"line_start":48,"line_end":48,"column_start":6,"column_end":18},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8212553,"byte_end":8212565,"line_start":298,"line_end":298,"column_start":21,"column_end":33},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2487},"to":{"krate":2,"index":6068}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8213018,"byte_end":8213030,"line_start":315,"line_end":315,"column_start":49,"column_end":61},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2487},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8213387,"byte_end":8213399,"line_start":325,"line_end":325,"column_start":18,"column_end":30},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":2487},"to":{"krate":1,"index":8188}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8213508,"byte_end":8213520,"line_start":331,"line_end":331,"column_start":20,"column_end":32},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2487},"to":{"krate":1,"index":8190}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/datagram.rs","byte_start":8213704,"byte_end":8213716,"line_start":338,"line_end":338,"column_start":20,"column_end":32},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2487},"to":{"krate":1,"index":8192}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8215708,"byte_end":8215720,"line_start":56,"line_end":56,"column_start":6,"column_end":18},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2557},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8219517,"byte_end":8219529,"line_start":170,"line_end":170,"column_start":21,"column_end":33},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2557},"to":{"krate":2,"index":6068}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8220500,"byte_end":8220508,"line_start":197,"line_end":197,"column_start":17,"column_end":25},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2650},"to":{"krate":15,"index":68}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8220884,"byte_end":8220896,"line_start":209,"line_end":209,"column_start":49,"column_end":61},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2557},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8221253,"byte_end":8221265,"line_start":219,"line_end":219,"column_start":18,"column_end":30},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":2557},"to":{"krate":1,"index":8188}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8221374,"byte_end":8221386,"line_start":225,"line_end":225,"column_start":20,"column_end":32},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2557},"to":{"krate":1,"index":8190}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/listener.rs","byte_start":8221570,"byte_end":8221582,"line_start":232,"line_end":232,"column_start":20,"column_end":32},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2557},"to":{"krate":1,"index":8192}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8223024,"byte_end":8223034,"line_start":44,"line_end":44,"column_start":6,"column_end":16},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2608},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8226437,"byte_end":8226447,"line_start":156,"line_end":156,"column_start":15,"column_end":25},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2608},"to":{"krate":23,"index":17}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8226903,"byte_end":8226913,"line_start":176,"line_end":176,"column_start":16,"column_end":26},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2608},"to":{"krate":23,"index":20}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8227950,"byte_end":8227960,"line_start":213,"line_end":213,"column_start":21,"column_end":31},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2608},"to":{"krate":2,"index":6068}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8228409,"byte_end":8228419,"line_start":230,"line_end":230,"column_start":47,"column_end":57},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2608},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8228756,"byte_end":8228766,"line_start":240,"line_end":240,"column_start":18,"column_end":28},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2608},"to":{"krate":1,"index":8188}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8228875,"byte_end":8228885,"line_start":246,"line_end":246,"column_start":20,"column_end":30},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2608},"to":{"krate":1,"index":8190}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/os/unix/net/stream.rs","byte_start":8229061,"byte_end":8229071,"line_start":253,"line_end":253,"column_start":20,"column_end":30},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2608},"to":{"krate":1,"index":8192}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/all.rs","byte_start":6994616,"byte_end":6994625,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":117},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/all.rs","byte_start":6994832,"byte_end":6994841,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":117},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/all.rs","byte_start":6994881,"byte_end":6994890,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":117},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/any.rs","byte_start":6996021,"byte_end":6996030,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":148},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/any.rs","byte_start":6996237,"byte_end":6996246,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":148},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/any.rs","byte_start":6996286,"byte_end":6996295,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":148},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/chain.rs","byte_start":6997675,"byte_end":6997680,"line_start":26,"line_end":26,"column_start":28,"column_end":33},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":6463},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/chain.rs","byte_start":6997898,"byte_end":6997903,"line_start":35,"line_end":35,"column_start":55,"column_end":60},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":6463},"to":{"krate":15,"index":68}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/cloned.rs","byte_start":6999000,"byte_end":6999006,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":6417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/cloned.rs","byte_start":6999118,"byte_end":6999124,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":6417},"to":{"krate":15,"index":68}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/cmp.rs","byte_start":7000090,"byte_end":7000099,"line_start":27,"line_end":27,"column_start":28,"column_end":37},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":6334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/cmp.rs","byte_start":7000328,"byte_end":7000337,"line_start":38,"line_end":38,"column_start":39,"column_end":48},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":6334},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/copied.rs","byte_start":7002728,"byte_end":7002734,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":6328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/copied.rs","byte_start":7002846,"byte_end":7002852,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":6328},"to":{"krate":15,"index":68}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/cycle.rs","byte_start":7003466,"byte_end":7003471,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2671},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/cycle.rs","byte_start":7003681,"byte_end":7003686,"line_start":26,"line_end":26,"column_start":18,"column_end":23},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2671},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/cycle.rs","byte_start":7003822,"byte_end":7003827,"line_start":34,"line_end":34,"column_start":20,"column_end":25},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2671},"to":{"krate":15,"index":68}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/enumerate.rs","byte_start":7004781,"byte_end":7004790,"line_start":17,"line_end":17,"column_start":9,"column_end":18},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":6291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/enumerate.rs","byte_start":7004897,"byte_end":7004906,"line_start":23,"line_end":23,"column_start":20,"column_end":29},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":6291},"to":{"krate":15,"index":68}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/eq.rs","byte_start":7005947,"byte_end":7005955,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":6213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/eq.rs","byte_start":7006169,"byte_end":7006177,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":6213},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/filter.rs","byte_start":7007508,"byte_end":7007514,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":6204},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/filter.rs","byte_start":7007679,"byte_end":7007685,"line_start":33,"line_end":33,"column_start":23,"column_end":29},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":6204},"to":{"krate":15,"index":68}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/filter_map.rs","byte_start":7008533,"byte_end":7008542,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":6155},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/filter_map.rs","byte_start":7008661,"byte_end":7008670,"line_start":23,"line_end":23,"column_start":26,"column_end":35},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":6155},"to":{"krate":15,"index":68}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/find.rs","byte_start":7009551,"byte_end":7009561,"line_start":14,"line_end":14,"column_start":16,"column_end":26},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/find.rs","byte_start":7009695,"byte_end":7009705,"line_start":20,"line_end":20,"column_start":29,"column_end":39},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":330},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/find.rs","byte_start":7009746,"byte_end":7009756,"line_start":22,"line_end":22,"column_start":27,"column_end":37},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":330},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/find_map.rs","byte_start":7010588,"byte_end":7010601,"line_start":14,"line_end":14,"column_start":16,"column_end":29},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":357},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/find_map.rs","byte_start":7010735,"byte_end":7010748,"line_start":20,"line_end":20,"column_start":29,"column_end":42},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":357},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/find_map.rs","byte_start":7010792,"byte_end":7010805,"line_start":22,"line_end":22,"column_start":30,"column_end":43},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":357},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/fold.rs","byte_start":7011759,"byte_end":7011769,"line_start":19,"line_end":19,"column_start":15,"column_end":25},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":6103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/fold.rs","byte_start":7011962,"byte_end":7011972,"line_start":29,"line_end":29,"column_start":26,"column_end":36},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":6103},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/for_each.rs","byte_start":7012981,"byte_end":7012994,"line_start":19,"line_end":19,"column_start":12,"column_end":25},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":6008},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/for_each.rs","byte_start":7013143,"byte_end":7013156,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":6008},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/fuse.rs","byte_start":7014232,"byte_end":7014236,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":5998},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/fuse.rs","byte_start":7014391,"byte_end":7014395,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":5998},"to":{"krate":15,"index":68}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/ge.rs","byte_start":7015448,"byte_end":7015456,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":5924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/ge.rs","byte_start":7015664,"byte_end":7015672,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":5924},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/gt.rs","byte_start":7016713,"byte_end":7016721,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":5883},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/gt.rs","byte_start":7016929,"byte_end":7016937,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":5883},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/inspect.rs","byte_start":7017954,"byte_end":7017961,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":5874},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/inspect.rs","byte_start":7018110,"byte_end":7018117,"line_start":33,"line_end":33,"column_start":23,"column_end":30},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":5874},"to":{"krate":15,"index":68}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/last.rs","byte_start":7018895,"byte_end":7018905,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":5789},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/last.rs","byte_start":7019021,"byte_end":7019031,"line_start":25,"line_end":25,"column_start":20,"column_end":30},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":5789},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/le.rs","byte_start":7020176,"byte_end":7020184,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":5748},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/le.rs","byte_start":7020392,"byte_end":7020400,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":5748},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/lt.rs","byte_start":7021451,"byte_end":7021459,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":5707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/lt.rs","byte_start":7021667,"byte_end":7021675,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":5707},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/map.rs","byte_start":7022457,"byte_end":7022460,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":5698},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/map.rs","byte_start":7022612,"byte_end":7022615,"line_start":27,"line_end":27,"column_start":26,"column_end":29},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":5698},"to":{"krate":15,"index":68}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/max.rs","byte_start":7023406,"byte_end":7023415,"line_start":22,"line_end":22,"column_start":15,"column_end":24},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":5601},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/max.rs","byte_start":7023604,"byte_end":7023613,"line_start":32,"line_end":32,"column_start":23,"column_end":32},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":5601},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/max_by.rs","byte_start":7024891,"byte_end":7024902,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":5544},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/max_by.rs","byte_start":7025089,"byte_end":7025100,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":5544},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/max_by_key.rs","byte_start":7026376,"byte_end":7026390,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":5487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/max_by_key.rs","byte_start":7026575,"byte_end":7026589,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":5487},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/min.rs","byte_start":7028127,"byte_end":7028136,"line_start":22,"line_end":22,"column_start":15,"column_end":24},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":5430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/min.rs","byte_start":7028325,"byte_end":7028334,"line_start":32,"line_end":32,"column_start":23,"column_end":32},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":5430},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/min_by.rs","byte_start":7029609,"byte_end":7029620,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":5373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/min_by.rs","byte_start":7029807,"byte_end":7029818,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":5373},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/min_by_key.rs","byte_start":7031121,"byte_end":7031135,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":5316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/min_by_key.rs","byte_start":7031320,"byte_end":7031334,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":5316},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/ne.rs","byte_start":7032951,"byte_end":7032959,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":5271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/ne.rs","byte_start":7033173,"byte_end":7033181,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":5271},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/next.rs","byte_start":7034300,"byte_end":7034310,"line_start":13,"line_end":13,"column_start":45,"column_end":55},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":718},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/nth.rs","byte_start":7034773,"byte_end":7034782,"line_start":14,"line_end":14,"column_start":26,"column_end":35},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":733},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/nth.rs","byte_start":7034806,"byte_end":7034815,"line_start":16,"line_end":16,"column_start":13,"column_end":22},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":733},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/nth.rs","byte_start":7034945,"byte_end":7034954,"line_start":22,"line_end":22,"column_start":24,"column_end":33},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":733},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/partial_cmp.rs","byte_start":7036191,"byte_end":7036207,"line_start":27,"line_end":27,"column_start":28,"column_end":44},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":5218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/partial_cmp.rs","byte_start":7036436,"byte_end":7036452,"line_start":38,"line_end":38,"column_start":39,"column_end":55},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":5218},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/position.rs","byte_start":7038927,"byte_end":7038941,"line_start":15,"line_end":15,"column_start":26,"column_end":40},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":776},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/position.rs","byte_start":7038971,"byte_end":7038985,"line_start":17,"line_end":17,"column_start":16,"column_end":30},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":776},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/position.rs","byte_start":7039188,"byte_end":7039202,"line_start":27,"line_end":27,"column_start":27,"column_end":41},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":776},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/scan.rs","byte_start":7040449,"byte_end":7040453,"line_start":24,"line_end":24,"column_start":16,"column_end":20},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":5207},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/scan.rs","byte_start":7040658,"byte_end":7040662,"line_start":33,"line_end":33,"column_start":30,"column_end":34},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":5207},"to":{"krate":15,"index":68}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/skip.rs","byte_start":7041695,"byte_end":7041699,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":5153},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/skip.rs","byte_start":7041813,"byte_end":7041817,"line_start":30,"line_end":30,"column_start":20,"column_end":24},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":5153},"to":{"krate":15,"index":68}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/skip_while.rs","byte_start":7042986,"byte_end":7042995,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":5111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/skip_while.rs","byte_start":7043177,"byte_end":7043186,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":5111},"to":{"krate":15,"index":68}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/step_by.rs","byte_start":7044587,"byte_end":7044593,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":5063},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/step_by.rs","byte_start":7044794,"byte_end":7044800,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":5063},"to":{"krate":15,"index":68}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/take.rs","byte_start":7046060,"byte_end":7046064,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":5017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/take.rs","byte_start":7046235,"byte_end":7046239,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":5017},"to":{"krate":15,"index":68}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/take_while.rs","byte_start":7047332,"byte_end":7047341,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":4975},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/take_while.rs","byte_start":7047506,"byte_end":7047515,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":4975},"to":{"krate":15,"index":68}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/try_fold.rs","byte_start":7048423,"byte_end":7048436,"line_start":15,"line_end":15,"column_start":29,"column_end":42},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":900},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/try_fold.rs","byte_start":7048472,"byte_end":7048485,"line_start":17,"line_end":17,"column_start":19,"column_end":32},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/try_fold.rs","byte_start":7048697,"byte_end":7048710,"line_start":27,"line_end":27,"column_start":33,"column_end":46},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":900},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/try_for_each.rs","byte_start":7049790,"byte_end":7049806,"line_start":14,"line_end":14,"column_start":26,"column_end":42},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":934},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/try_for_each.rs","byte_start":7049836,"byte_end":7049852,"line_start":16,"line_end":16,"column_start":16,"column_end":32},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":934},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/try_for_each.rs","byte_start":7049987,"byte_end":7050003,"line_start":22,"line_end":22,"column_start":30,"column_end":46},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":934},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/zip.rs","byte_start":7051307,"byte_end":7051310,"line_start":26,"line_end":26,"column_start":60,"column_end":63},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":4886},"to":{"krate":2,"index":6068}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/zip.rs","byte_start":7051550,"byte_end":7051553,"line_start":35,"line_end":35,"column_start":20,"column_end":23},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":4886},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/zip.rs","byte_start":7051755,"byte_end":7051758,"line_start":45,"line_end":45,"column_start":39,"column_end":42},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":4886},"to":{"krate":15,"index":68}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/stream/mod.rs","byte_start":6924664,"byte_end":6924670,"line_start":172,"line_end":172,"column_start":15,"column_end":21},"kind":"SuperTrait","from":{"krate":15,"index":68},"to":{"krate":0,"index":2690}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/empty.rs","byte_start":7053355,"byte_end":7053360,"line_start":44,"line_end":44,"column_start":20,"column_end":25},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":2784},"to":{"krate":15,"index":68}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7053910,"byte_end":7053916,"line_start":17,"line_end":17,"column_start":19,"column_end":25},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":2790},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_fn.rs","byte_start":7054845,"byte_end":7054851,"line_start":58,"line_end":58,"column_start":23,"column_end":29},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":2790},"to":{"krate":15,"index":68}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/from_iter.rs","byte_start":7056272,"byte_end":7056280,"line_start":49,"line_end":49,"column_start":30,"column_end":38},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":4877},"to":{"krate":15,"index":68}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/once.rs","byte_start":7057648,"byte_end":7057652,"line_start":45,"line_end":45,"column_start":20,"column_end":24},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":4838},"to":{"krate":15,"index":68}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat.rs","byte_start":7058878,"byte_end":7058884,"line_start":41,"line_end":41,"column_start":27,"column_end":33},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":2799},"to":{"krate":15,"index":68}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7059499,"byte_end":7059509,"line_start":17,"line_end":17,"column_start":19,"column_end":29},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":2808},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/stream/repeat_with.rs","byte_start":7060701,"byte_end":7060711,"line_start":74,"line_end":74,"column_start":23,"column_end":33},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":2808},"to":{"krate":15,"index":68}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7069418,"byte_end":7069423,"line_start":48,"line_end":48,"column_start":40,"column_end":45},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":1131},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7069469,"byte_end":7069474,"line_start":49,"line_end":49,"column_start":40,"column_end":45},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":1131},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7069490,"byte_end":7069495,"line_start":51,"line_end":51,"column_start":9,"column_end":14},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":1131},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7069874,"byte_end":7069879,"line_start":70,"line_end":70,"column_start":17,"column_end":22},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":1131},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7070640,"byte_end":7070650,"line_start":101,"line_end":101,"column_start":40,"column_end":50},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":1148},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7071716,"byte_end":7071726,"line_start":128,"line_end":128,"column_start":34,"column_end":44},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":1148},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7074175,"byte_end":7074180,"line_start":221,"line_end":221,"column_start":45,"column_end":50},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":1131},"to":{"krate":2,"index":6068}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7074300,"byte_end":7074306,"line_start":224,"line_end":224,"column_start":29,"column_end":35},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":1167},"to":{"krate":2,"index":6068}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7074678,"byte_end":7074683,"line_start":237,"line_end":237,"column_start":21,"column_end":26},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":1131},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7074794,"byte_end":7074799,"line_start":243,"line_end":243,"column_start":39,"column_end":44},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":1131},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7075025,"byte_end":7075035,"line_start":252,"line_end":252,"column_start":40,"column_end":50},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7075085,"byte_end":7075095,"line_start":253,"line_end":253,"column_start":40,"column_end":50},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7075132,"byte_end":7075142,"line_start":255,"line_end":255,"column_start":26,"column_end":36},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7075498,"byte_end":7075508,"line_start":265,"line_end":265,"column_start":44,"column_end":54},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":6068}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7075674,"byte_end":7075684,"line_start":271,"line_end":271,"column_start":49,"column_end":59},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":6073}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7075816,"byte_end":7075826,"line_start":277,"line_end":277,"column_start":27,"column_end":37},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":2073}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/mutex.rs","byte_start":7075964,"byte_end":7075974,"line_start":285,"line_end":285,"column_start":30,"column_end":40},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7077789,"byte_end":7077795,"line_start":59,"line_end":59,"column_start":40,"column_end":46},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":1222},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7077848,"byte_end":7077854,"line_start":60,"line_end":60,"column_start":47,"column_end":53},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":1222},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7077870,"byte_end":7077876,"line_start":62,"line_end":62,"column_start":9,"column_end":15},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":1222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7078315,"byte_end":7078321,"line_start":82,"line_end":82,"column_start":17,"column_end":23},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":1222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7078987,"byte_end":7078997,"line_start":109,"line_end":109,"column_start":40,"column_end":50},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":1240},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7080107,"byte_end":7080117,"line_start":136,"line_end":136,"column_start":34,"column_end":44},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":1240},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7082958,"byte_end":7082969,"line_start":234,"line_end":234,"column_start":40,"column_end":51},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":1257},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7084082,"byte_end":7084093,"line_start":261,"line_end":261,"column_start":34,"column_end":45},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":1257},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7086522,"byte_end":7086528,"line_start":348,"line_end":348,"column_start":45,"column_end":51},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":1222},"to":{"krate":2,"index":6068}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7086648,"byte_end":7086654,"line_start":351,"line_end":351,"column_start":29,"column_end":35},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":1276},"to":{"krate":2,"index":6068}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7087028,"byte_end":7087034,"line_start":364,"line_end":364,"column_start":21,"column_end":27},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":1222},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7087147,"byte_end":7087153,"line_start":370,"line_end":370,"column_start":39,"column_end":45},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":1222},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7087392,"byte_end":7087407,"line_start":379,"line_end":379,"column_start":40,"column_end":55},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":1286},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7087457,"byte_end":7087472,"line_start":380,"line_end":380,"column_start":40,"column_end":55},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":1286},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7087509,"byte_end":7087524,"line_start":382,"line_end":382,"column_start":26,"column_end":41},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":1286},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7087885,"byte_end":7087900,"line_start":393,"line_end":393,"column_start":45,"column_end":60},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":1286},"to":{"krate":2,"index":6068}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7088066,"byte_end":7088081,"line_start":399,"line_end":399,"column_start":49,"column_end":64},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":1286},"to":{"krate":2,"index":6073}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7088213,"byte_end":7088228,"line_start":405,"line_end":405,"column_start":27,"column_end":42},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":1286},"to":{"krate":2,"index":2073}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7088491,"byte_end":7088507,"line_start":416,"line_end":416,"column_start":40,"column_end":56},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":1308},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7088557,"byte_end":7088573,"line_start":417,"line_end":417,"column_start":40,"column_end":56},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":1308},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7088610,"byte_end":7088626,"line_start":419,"line_end":419,"column_start":26,"column_end":42},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":1308},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7089024,"byte_end":7089040,"line_start":432,"line_end":432,"column_start":45,"column_end":61},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":1308},"to":{"krate":2,"index":6068}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7089206,"byte_end":7089222,"line_start":438,"line_end":438,"column_start":49,"column_end":65},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":1308},"to":{"krate":2,"index":6073}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7089354,"byte_end":7089370,"line_start":444,"line_end":444,"column_start":27,"column_end":43},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":1308},"to":{"krate":2,"index":2073}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/rwlock.rs","byte_start":7089508,"byte_end":7089524,"line_start":452,"line_end":452,"column_start":30,"column_end":46},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":1308},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/waker_set.rs","byte_start":7091587,"byte_end":7091595,"line_start":49,"line_end":49,"column_start":6,"column_end":14},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":1352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/waker_set.rs","byte_start":7095692,"byte_end":7095696,"line_start":193,"line_end":193,"column_start":15,"column_end":19},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":1364},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/waker_set.rs","byte_start":7096262,"byte_end":7096266,"line_start":213,"line_end":213,"column_start":16,"column_end":20},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":1364},"to":{"krate":2,"index":2073}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/sync/waker_set.rs","byte_start":7096420,"byte_end":7096424,"line_start":222,"line_end":222,"column_start":19,"column_end":23},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":1364},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/yield_now.rs","byte_start":8233981,"byte_end":8233989,"line_start":36,"line_end":36,"column_start":17,"column_end":25},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":2850},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/builder.rs","byte_start":8239093,"byte_end":8239100,"line_start":16,"line_end":16,"column_start":6,"column_end":13},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":3173},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/builder.rs","byte_start":8240760,"byte_end":8240768,"line_start":77,"line_end":77,"column_start":6,"column_end":14},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":2920},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/executor/sleepers.rs","byte_start":8248536,"byte_end":8248544,"line_start":19,"line_end":19,"column_start":6,"column_end":14},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":2983},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8249916,"byte_end":8249926,"line_start":17,"line_end":17,"column_start":25,"column_end":35},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":3203},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8249957,"byte_end":8249967,"line_start":18,"line_end":18,"column_start":25,"column_end":35},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":3203},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8249983,"byte_end":8249993,"line_start":20,"line_end":20,"column_start":9,"column_end":19},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":3203},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/join_handle.rs","byte_start":8250562,"byte_end":8250572,"line_start":46,"line_end":46,"column_start":20,"column_end":30},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":3203},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8256882,"byte_end":8256887,"line_start":28,"line_end":28,"column_start":6,"column_end":11},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":3068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8257430,"byte_end":8257434,"line_start":48,"line_end":48,"column_start":22,"column_end":26},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":3074},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8257459,"byte_end":8257463,"line_start":49,"line_end":49,"column_start":22,"column_end":26},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":3074},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8257473,"byte_end":8257477,"line_start":51,"line_end":51,"column_start":6,"column_end":10},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":3074},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8260222,"byte_end":8260226,"line_start":146,"line_end":146,"column_start":15,"column_end":19},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":3074},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8260504,"byte_end":8260508,"line_start":158,"line_end":158,"column_start":16,"column_end":20},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":3074},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task.rs","byte_start":8260955,"byte_end":8260959,"line_start":170,"line_end":170,"column_start":21,"column_end":25},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":3074},"to":{"krate":2,"index":6068}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_id.rs","byte_start":8261686,"byte_end":8261692,"line_start":18,"line_end":18,"column_start":6,"column_end":12},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":3223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_id.rs","byte_start":8262018,"byte_end":8262024,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":3223},"to":{"krate":2,"index":6073}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8262636,"byte_end":8262644,"line_start":21,"line_end":21,"column_start":25,"column_end":33},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":3241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8266483,"byte_end":8266494,"line_start":148,"line_end":148,"column_start":21,"column_end":32},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":3248},"to":{"krate":2,"index":6068}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8266638,"byte_end":8266649,"line_start":154,"line_end":154,"column_start":23,"column_end":34},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":3248},"to":{"krate":2,"index":6073}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8266814,"byte_end":8266825,"line_start":160,"line_end":160,"column_start":16,"column_end":27},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":3248},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/task/task_local.rs","byte_start":8267193,"byte_end":8267202,"line_start":177,"line_end":177,"column_start":6,"column_end":15},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":3140},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8277006,"byte_end":8277016,"line_start":25,"line_end":25,"column_start":6,"column_end":16},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":4332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_builder.rs","byte_start":8279595,"byte_end":8279605,"line_start":117,"line_end":117,"column_start":28,"column_end":38},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":4332},"to":{"krate":1,"index":8174}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8280363,"byte_end":8280371,"line_start":20,"line_end":20,"column_start":6,"column_end":14},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":3356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8284334,"byte_end":8284342,"line_start":155,"line_end":155,"column_start":21,"column_end":29},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":3356},"to":{"krate":2,"index":6068}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8284495,"byte_end":8284503,"line_start":161,"line_end":161,"column_start":16,"column_end":24},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":3356},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/dir_entry.rs","byte_start":8284658,"byte_end":8284666,"line_start":170,"line_end":170,"column_start":26,"column_end":34},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":3356},"to":{"krate":1,"index":8167}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8286846,"byte_end":8286850,"line_start":69,"line_end":69,"column_start":6,"column_end":10},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":3412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8294696,"byte_end":8294700,"line_start":312,"line_end":312,"column_start":15,"column_end":19},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":3412},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8295179,"byte_end":8295183,"line_start":322,"line_end":322,"column_start":21,"column_end":25},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":3412},"to":{"krate":2,"index":6068}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8295297,"byte_end":8295301,"line_start":328,"line_end":328,"column_start":15,"column_end":19},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":3412},"to":{"krate":23,"index":17}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8295782,"byte_end":8295786,"line_start":349,"line_end":349,"column_start":16,"column_end":20},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":3412},"to":{"krate":23,"index":20}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8296950,"byte_end":8296954,"line_start":388,"line_end":388,"column_start":15,"column_end":19},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":3412},"to":{"krate":23,"index":25}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8297443,"byte_end":8297447,"line_start":409,"line_end":409,"column_start":30,"column_end":34},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":3412},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8297636,"byte_end":8297640,"line_start":418,"line_end":418,"column_start":22,"column_end":26},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":3412},"to":{"krate":1,"index":8188}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8297756,"byte_end":8297760,"line_start":424,"line_end":424,"column_start":24,"column_end":28},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":3412},"to":{"krate":1,"index":8190}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8297904,"byte_end":8297908,"line_start":430,"line_end":430,"column_start":24,"column_end":28},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":3412},"to":{"krate":1,"index":8192}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8299028,"byte_end":8299032,"line_start":470,"line_end":470,"column_start":31,"column_end":35},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":3475},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8299069,"byte_end":8299073,"line_start":471,"line_end":471,"column_start":31,"column_end":35},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":3475},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8299340,"byte_end":8299344,"line_start":485,"line_end":485,"column_start":9,"column_end":13},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":3475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8300579,"byte_end":8300588,"line_start":522,"line_end":522,"column_start":31,"column_end":40},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":3493},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8300625,"byte_end":8300634,"line_start":523,"line_end":523,"column_start":31,"column_end":40},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":3493},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8300650,"byte_end":8300659,"line_start":525,"line_end":525,"column_start":9,"column_end":18},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":3493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8301050,"byte_end":8301059,"line_start":538,"line_end":538,"column_start":18,"column_end":27},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":3493},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8301367,"byte_end":8301376,"line_start":550,"line_end":550,"column_start":19,"column_end":28},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":3493},"to":{"krate":2,"index":2073}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8301502,"byte_end":8301511,"line_start":558,"line_end":558,"column_start":22,"column_end":31},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":3493},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/file.rs","byte_start":8303072,"byte_end":8303081,"line_start":611,"line_end":611,"column_start":6,"column_end":15},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":3493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8327185,"byte_end":8327196,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":4358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8333985,"byte_end":8333996,"line_start":294,"line_end":294,"column_start":18,"column_end":29},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":4358},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/open_options.rs","byte_start":8334141,"byte_end":8334152,"line_start":303,"line_end":303,"column_start":29,"column_end":40},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":4358},"to":{"krate":1,"index":8117}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8340251,"byte_end":8340258,"line_start":81,"line_end":81,"column_start":6,"column_end":13},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":4370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/fs/read_dir.rs","byte_start":8340457,"byte_end":8340464,"line_start":88,"line_end":88,"column_start":17,"column_end":24},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":4370},"to":{"krate":15,"index":68}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8355971,"byte_end":8355980,"line_start":29,"line_end":29,"column_start":23,"column_end":32},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":4384},"to":{"krate":2,"index":4851}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/ancestors.rs","byte_start":8356185,"byte_end":8356194,"line_start":39,"line_end":39,"column_start":24,"column_end":33},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":4384},"to":{"krate":2,"index":5113}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8356979,"byte_end":8356989,"line_start":31,"line_end":31,"column_start":10,"column_end":20},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":4395},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8357498,"byte_end":8357508,"line_start":50,"line_end":50,"column_start":22,"column_end":32},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":4395},"to":{"krate":2,"index":1816}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8357601,"byte_end":8357611,"line_start":56,"line_end":56,"column_start":23,"column_end":33},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":4395},"to":{"krate":2,"index":1816}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8357717,"byte_end":8357727,"line_start":62,"line_end":62,"column_start":23,"column_end":33},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":4395},"to":{"krate":2,"index":4851}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8357884,"byte_end":8357894,"line_start":70,"line_end":70,"column_start":34,"column_end":44},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":4395},"to":{"krate":2,"index":4777}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8358019,"byte_end":8358029,"line_start":76,"line_end":76,"column_start":24,"column_end":34},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":4395},"to":{"krate":2,"index":5113}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/components.rs","byte_start":8358059,"byte_end":8358068,"line_start":78,"line_end":78,"column_start":22,"column_end":31},"kind":{"Impl":{"id":302}},"from":{"krate":1,"index":6992},"to":{"krate":2,"index":1816}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8358781,"byte_end":8358785,"line_start":21,"line_end":21,"column_start":10,"column_end":14},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":4425},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8359258,"byte_end":8359262,"line_start":40,"line_end":40,"column_start":23,"column_end":27},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":4425},"to":{"krate":2,"index":4851}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8359424,"byte_end":8359428,"line_start":48,"line_end":48,"column_start":21,"column_end":25},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":4425},"to":{"krate":2,"index":6068}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8359569,"byte_end":8359580,"line_start":52,"line_end":52,"column_start":29,"column_end":40},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":3772},"to":{"krate":2,"index":6068}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8359877,"byte_end":8359881,"line_start":64,"line_end":64,"column_start":22,"column_end":26},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":4425},"to":{"krate":2,"index":1816}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8359974,"byte_end":8359978,"line_start":70,"line_end":70,"column_start":23,"column_end":27},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":4425},"to":{"krate":2,"index":1816}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8360095,"byte_end":8360099,"line_start":76,"line_end":76,"column_start":34,"column_end":38},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":4425},"to":{"krate":2,"index":4777}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/iter.rs","byte_start":8360246,"byte_end":8360250,"line_start":82,"line_end":82,"column_start":24,"column_end":28},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":4425},"to":{"krate":2,"index":5113}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8361906,"byte_end":8361910,"line_start":53,"line_end":53,"column_start":6,"column_end":10},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":4431},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386760,"byte_end":8386763,"line_start":816,"line_end":816,"column_start":22,"column_end":25},"kind":{"Impl":{"id":312}},"from":{"krate":5,"index":81},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8386992,"byte_end":8386995,"line_start":824,"line_end":824,"column_start":22,"column_end":25},"kind":{"Impl":{"id":313}},"from":{"krate":5,"index":3840},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8387290,"byte_end":8387292,"line_start":833,"line_end":833,"column_start":22,"column_end":24},"kind":{"Impl":{"id":314}},"from":{"krate":5,"index":2993},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8387495,"byte_end":8387499,"line_start":841,"line_end":841,"column_start":18,"column_end":22},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":4431},"to":{"krate":5,"index":314}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8387623,"byte_end":8387627,"line_start":849,"line_end":849,"column_start":23,"column_end":27},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":4431},"to":{"krate":2,"index":1816}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8387721,"byte_end":8387725,"line_start":855,"line_end":855,"column_start":22,"column_end":26},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":4431},"to":{"krate":2,"index":1816}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8387803,"byte_end":8387808,"line_start":861,"line_end":861,"column_start":22,"column_end":27},"kind":{"Impl":{"id":318}},"from":{"krate":1,"index":1938},"to":{"krate":2,"index":1816}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8387904,"byte_end":8387907,"line_start":867,"line_end":867,"column_start":29,"column_end":32},"kind":{"Impl":{"id":319}},"from":{"krate":5,"index":323},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8388033,"byte_end":8388036,"line_start":874,"line_end":874,"column_start":22,"column_end":25},"kind":{"Impl":{"id":320}},"from":{"krate":5,"index":323},"to":{"krate":2,"index":1816}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8388136,"byte_end":8388144,"line_start":880,"line_end":880,"column_start":22,"column_end":30},"kind":{"Impl":{"id":321}},"from":{"krate":1,"index":6431},"to":{"krate":2,"index":1816}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8388325,"byte_end":8388331,"line_start":892,"line_end":892,"column_start":22,"column_end":28},"kind":{"Impl":{"id":323}},"from":{"krate":5,"index":4867},"to":{"krate":2,"index":1816}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8388420,"byte_end":8388427,"line_start":898,"line_end":898,"column_start":22,"column_end":29},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":4709},"to":{"krate":2,"index":1816}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8391575,"byte_end":8391579,"line_start":1016,"line_end":1016,"column_start":33,"column_end":37},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":4431},"to":{"krate":2,"index":1816}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8391686,"byte_end":8391690,"line_start":1022,"line_end":1022,"column_start":33,"column_end":37},"kind":{"Impl":{"id":376}},"from":{"krate":1,"index":4075},"to":{"krate":2,"index":1816}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/path.rs","byte_start":8391786,"byte_end":8391793,"line_start":1028,"line_end":1028,"column_start":33,"column_end":40},"kind":{"Impl":{"id":377}},"from":{"krate":1,"index":7066},"to":{"krate":2,"index":1816}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8393602,"byte_end":8393609,"line_start":25,"line_end":25,"column_start":6,"column_end":13},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":4709},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8398855,"byte_end":8398862,"line_start":199,"line_end":199,"column_start":26,"column_end":33},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":4709},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8398970,"byte_end":8398973,"line_start":205,"line_end":205,"column_start":24,"column_end":27},"kind":{"Impl":{"id":380}},"from":{"krate":5,"index":81},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8399073,"byte_end":8399076,"line_start":211,"line_end":211,"column_start":16,"column_end":19},"kind":{"Impl":{"id":381}},"from":{"krate":5,"index":81},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8399227,"byte_end":8399234,"line_start":218,"line_end":218,"column_start":45,"column_end":52},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":4709},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8399351,"byte_end":8399358,"line_start":224,"line_end":224,"column_start":25,"column_end":32},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":4709},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8399467,"byte_end":8399475,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"kind":{"Impl":{"id":384}},"from":{"krate":1,"index":6431},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8399584,"byte_end":8399591,"line_start":236,"line_end":236,"column_start":23,"column_end":30},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":4709},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8399697,"byte_end":8399704,"line_start":242,"line_end":242,"column_start":18,"column_end":25},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":4709},"to":{"krate":2,"index":7595}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8399883,"byte_end":8399890,"line_start":250,"line_end":250,"column_start":42,"column_end":49},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":4709},"to":{"krate":2,"index":4754}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8400085,"byte_end":8400092,"line_start":258,"line_end":258,"column_start":42,"column_end":49},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":4709},"to":{"krate":2,"index":4767}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8400249,"byte_end":8400256,"line_start":264,"line_end":264,"column_start":16,"column_end":23},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":4709},"to":{"krate":2,"index":2073}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8400377,"byte_end":8400384,"line_start":272,"line_end":272,"column_start":23,"column_end":30},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":4709},"to":{"krate":2,"index":1584}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8400476,"byte_end":8400479,"line_start":278,"line_end":278,"column_start":28,"column_end":31},"kind":{"Impl":{"id":391}},"from":{"krate":5,"index":323},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8400611,"byte_end":8400614,"line_start":285,"line_end":285,"column_start":32,"column_end":35},"kind":{"Impl":{"id":392}},"from":{"krate":5,"index":323},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8400765,"byte_end":8400772,"line_start":292,"line_end":292,"column_start":34,"column_end":41},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":4709},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8400884,"byte_end":8400887,"line_start":299,"line_end":299,"column_start":24,"column_end":27},"kind":{"Impl":{"id":394}},"from":{"krate":5,"index":3840},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8401110,"byte_end":8401112,"line_start":307,"line_end":307,"column_start":24,"column_end":26},"kind":{"Impl":{"id":395}},"from":{"krate":5,"index":2993},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8401327,"byte_end":8401334,"line_start":315,"line_end":315,"column_start":23,"column_end":30},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":4709},"to":{"krate":2,"index":1816}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8402339,"byte_end":8402346,"line_start":355,"line_end":355,"column_start":35,"column_end":42},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":4709},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8402475,"byte_end":8402482,"line_start":361,"line_end":361,"column_start":35,"column_end":42},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":4709},"to":{"krate":2,"index":1822}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/path/pathbuf.rs","byte_start":8402587,"byte_end":8402594,"line_start":367,"line_end":367,"column_start":33,"column_end":40},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":4709},"to":{"krate":2,"index":1816}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8407725,"byte_end":8407744,"line_start":74,"line_end":74,"column_start":26,"column_end":45},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":4047},"to":{"krate":0,"index":15}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8408016,"byte_end":8408035,"line_start":83,"line_end":83,"column_start":49,"column_end":68},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":4047},"to":{"krate":2,"index":8191}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8408759,"byte_end":8408769,"line_start":104,"line_end":104,"column_start":24,"column_end":34},"kind":{"Impl":{"id":402}},"from":{"krate":1,"index":6731},"to":{"krate":0,"index":4044}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8409064,"byte_end":8409076,"line_start":117,"line_end":117,"column_start":24,"column_end":36},"kind":{"Impl":{"id":403}},"from":{"krate":1,"index":6753},"to":{"krate":0,"index":4044}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8409441,"byte_end":8409453,"line_start":132,"line_end":132,"column_start":24,"column_end":36},"kind":{"Impl":{"id":404}},"from":{"krate":1,"index":6756},"to":{"krate":0,"index":4044}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/addr.rs","byte_start":8413172,"byte_end":8413178,"line_start":271,"line_end":271,"column_start":24,"column_end":30},"kind":{"Impl":{"id":406}},"from":{"krate":5,"index":4867},"to":{"krate":0,"index":4044}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/driver/mod.rs","byte_start":8415175,"byte_end":8415182,"line_start":60,"line_end":60,"column_start":6,"column_end":13},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":4122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/driver/mod.rs","byte_start":8420257,"byte_end":8420264,"line_start":200,"line_end":200,"column_start":18,"column_end":25},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":4136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/driver/mod.rs","byte_start":8425154,"byte_end":8425161,"line_start":339,"line_end":339,"column_start":27,"column_end":34},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":4136},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/driver/mod.rs","byte_start":8425436,"byte_end":8425443,"line_start":349,"line_end":349,"column_start":46,"column_end":53},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":4136},"to":{"krate":2,"index":6068}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8428306,"byte_end":8428317,"line_start":55,"line_end":55,"column_start":6,"column_end":17},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":4752},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8432973,"byte_end":8432981,"line_start":194,"line_end":194,"column_start":21,"column_end":29},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":4756},"to":{"krate":15,"index":68}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8433345,"byte_end":8433356,"line_start":206,"line_end":206,"column_start":38,"column_end":49},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":4752},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8433770,"byte_end":8433781,"line_start":219,"line_end":219,"column_start":22,"column_end":33},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":4752},"to":{"krate":1,"index":8188}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8433910,"byte_end":8433921,"line_start":225,"line_end":225,"column_start":24,"column_end":35},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":4752},"to":{"krate":1,"index":8190}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/listener.rs","byte_start":8434080,"byte_end":8434091,"line_start":231,"line_end":231,"column_start":24,"column_end":35},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":4752},"to":{"krate":1,"index":8192}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8437018,"byte_end":8437027,"line_start":53,"line_end":53,"column_start":6,"column_end":15},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":4774},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8444768,"byte_end":8444777,"line_start":296,"line_end":296,"column_start":15,"column_end":24},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":4774},"to":{"krate":23,"index":17}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8445457,"byte_end":8445466,"line_start":324,"line_end":324,"column_start":16,"column_end":25},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":4774},"to":{"krate":23,"index":20}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8446788,"byte_end":8446797,"line_start":370,"line_end":370,"column_start":36,"column_end":45},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":4774},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8447206,"byte_end":8447215,"line_start":383,"line_end":383,"column_start":22,"column_end":31},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":4774},"to":{"krate":1,"index":8188}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8447344,"byte_end":8447353,"line_start":389,"line_end":389,"column_start":24,"column_end":33},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":4774},"to":{"krate":1,"index":8190}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/tcp/stream.rs","byte_start":8447508,"byte_end":8447517,"line_start":395,"line_end":395,"column_start":24,"column_end":33},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":4774},"to":{"krate":1,"index":8192}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8450446,"byte_end":8450455,"line_start":51,"line_end":51,"column_start":6,"column_end":15},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":4791},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8465546,"byte_end":8465555,"line_start":498,"line_end":498,"column_start":36,"column_end":45},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":4791},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8465954,"byte_end":8465963,"line_start":511,"line_end":511,"column_start":22,"column_end":31},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":4791},"to":{"krate":1,"index":8188}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8466092,"byte_end":8466101,"line_start":517,"line_end":517,"column_start":24,"column_end":33},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":4791},"to":{"krate":1,"index":8190}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.5.0/src/net/udp/mod.rs","byte_start":8466256,"byte_end":8466265,"line_start":523,"line_end":523,"column_start":24,"column_end":33},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":4791},"to":{"krate":1,"index":8192}}]}