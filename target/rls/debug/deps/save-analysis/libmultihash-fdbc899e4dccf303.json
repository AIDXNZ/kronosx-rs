{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1","program":"/Users/aidanm/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","multihash","--edition=2018","/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=fdbc899e4dccf303","-C","extra-filename=-fdbc899e4dccf303","--out-dir","/Users/aidanm/Documents/GitHub/rust-project/kronosx-rs/target/rls/debug/deps","-L","dependency=/Users/aidanm/Documents/GitHub/rust-project/kronosx-rs/target/rls/debug/deps","--extern","blake2b_simd=/Users/aidanm/Documents/GitHub/rust-project/kronosx-rs/target/rls/debug/deps/libblake2b_simd-895280bfb5d84325.rmeta","--extern","blake2s_simd=/Users/aidanm/Documents/GitHub/rust-project/kronosx-rs/target/rls/debug/deps/libblake2s_simd-ee5b49930a8fcae3.rmeta","--extern","digest=/Users/aidanm/Documents/GitHub/rust-project/kronosx-rs/target/rls/debug/deps/libdigest-5ee298f930540962.rmeta","--extern","sha1=/Users/aidanm/Documents/GitHub/rust-project/kronosx-rs/target/rls/debug/deps/libsha1-29aeae9d3b2baae1.rmeta","--extern","sha2=/Users/aidanm/Documents/GitHub/rust-project/kronosx-rs/target/rls/debug/deps/libsha2-652e8171940e02cd.rmeta","--extern","sha3=/Users/aidanm/Documents/GitHub/rust-project/kronosx-rs/target/rls/debug/deps/libsha3-9c95235c62a906b0.rmeta","--extern","unsigned_varint=/Users/aidanm/Documents/GitHub/rust-project/kronosx-rs/target/rls/debug/deps/libunsigned_varint-2b3a61c9223c019a.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/aidanm/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":"/Users/aidanm/Documents/GitHub/rust-project/kronosx-rs/target/rls/debug/deps/libmultihash-fdbc899e4dccf303.rmeta"},"prelude":{"crate_id":{"name":"multihash","disambiguator":[12121745591471671852,9429745286500336889]},"crate_root":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src","external_crates":[{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[10608430921611063354,8395674908515043854]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11160377025778617549,8306148414492364050]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[9663231090963280434,10638099366656217316]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[8613951802040500840,8986910463845771571]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4234925388164028009,14529027430798409127]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12939592188934548457,11748836853849593839]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11558539462852648633,3085906855076936354]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1355611183143696049,1082614854160048948]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[16981354374590250573,15576027856838557551]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[4628010122359451059,8580279243742303134]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[13264402212939907072,7199802924690488679]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[4099488279035803097,1850970931251006444]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[7484089805571854691,14917719619681555181]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[11408195867218467554,12842251878395859872]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","num":15,"id":{"name":"unsigned_varint","disambiguator":[15682932063146477085,3641701333431687951]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","num":16,"id":{"name":"blake2b_simd","disambiguator":[13902040820175806323,4924256487523757248]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","num":17,"id":{"name":"arrayref","disambiguator":[5768232577185278308,16205148826287557518]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","num":18,"id":{"name":"arrayvec","disambiguator":[8176584955626183482,6294834653643627597]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","num":19,"id":{"name":"constant_time_eq","disambiguator":[7408049868848605265,13532137683624478510]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","num":20,"id":{"name":"blake2s_simd","disambiguator":[13309148423174901439,3216161160677806639]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","num":21,"id":{"name":"digest","disambiguator":[3147801803117598334,17122794154462218020]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","num":22,"id":{"name":"generic_array","disambiguator":[9973229278811337524,4205331481569062090]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","num":23,"id":{"name":"typenum","disambiguator":[9160301133148577635,3780748605126097210]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","num":24,"id":{"name":"sha1","disambiguator":[6782689875962206108,16819832584763740487]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","num":25,"id":{"name":"block_buffer","disambiguator":[6282742884058159163,10805355901720380062]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","num":26,"id":{"name":"byteorder","disambiguator":[4877196972069618509,3580553886445118440]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","num":27,"id":{"name":"block_padding","disambiguator":[5193927342309443152,10952170230040140287]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","num":28,"id":{"name":"byte_tools","disambiguator":[10052267824580383810,5064852190072535613]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","num":29,"id":{"name":"opaque_debug","disambiguator":[9343127701749960400,1888279917228102247]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","num":30,"id":{"name":"fake_simd","disambiguator":[6242077737195863968,4157149165671429051]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","num":31,"id":{"name":"sha2","disambiguator":[9247320923188933629,1541202820595399909]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","num":32,"id":{"name":"sha3","disambiguator":[310825763926668453,211942254868408349]}},{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","num":33,"id":{"name":"keccak","disambiguator":[3603019200381644581,8025950373525913332]}}],"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/lib.rs","byte_start":0,"byte_end":562,"line_start":1,"line_end":21,"column_start":1,"column_end":19}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":76},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/lib.rs","byte_start":433,"byte_end":437,"line_start":19,"line_end":19,"column_start":19,"column_end":23},"alias_span":null,"name":"wrap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":220},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/lib.rs","byte_start":439,"byte_end":448,"line_start":19,"line_end":19,"column_start":25,"column_end":34},"alias_span":null,"name":"Multihash","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":73},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/lib.rs","byte_start":450,"byte_end":465,"line_start":19,"line_end":19,"column_start":36,"column_end":51},"alias_span":null,"name":"MultihashDigest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":224},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/lib.rs","byte_start":467,"byte_end":479,"line_start":19,"line_end":19,"column_start":53,"column_end":65},"alias_span":null,"name":"MultihashRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":276},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/lib.rs","byte_start":499,"byte_end":510,"line_start":20,"line_end":20,"column_start":18,"column_end":29},"alias_span":null,"name":"DecodeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":292},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/lib.rs","byte_start":512,"byte_end":528,"line_start":20,"line_end":20,"column_start":31,"column_end":47},"alias_span":null,"name":"DecodeOwnedError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":260},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/lib.rs","byte_start":530,"byte_end":541,"line_start":20,"line_end":20,"column_start":49,"column_end":60},"alias_span":null,"name":"EncodeError","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/lib.rs","byte_start":560,"byte_end":561,"line_start":21,"line_end":21,"column_start":17,"column_end":18},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/lib.rs","byte_start":0,"byte_end":562,"line_start":1,"line_end":21,"column_start":1,"column_end":19},"name":"","qualname":"::","value":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":77},{"krate":0,"index":90},{"krate":0,"index":198},{"krate":0,"index":210},{"krate":0,"index":215},{"krate":0,"index":219}],"decl_id":null,"docs":" # Multihash","sig":null,"attributes":[{"value":"! # Multihash","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/lib.rs","byte_start":0,"byte_end":15,"line_start":1,"line_end":1,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/lib.rs","byte_start":16,"byte_end":19,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Implementation of [multihash](https://github.com/multiformats/multihash) in Rust.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/lib.rs","byte_start":20,"byte_end":105,"line_start":3,"line_end":3,"column_start":1,"column_end":86}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/lib.rs","byte_start":106,"byte_end":109,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! A `Multihash` is a structure that contains a hashing algorithm, plus some hashed data.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/lib.rs","byte_start":110,"byte_end":200,"line_start":5,"line_end":5,"column_start":1,"column_end":91}},{"value":"! A `MultihashRef` is the same as a `Multihash`, except that it doesn't own its data.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/lib.rs","byte_start":201,"byte_end":288,"line_start":6,"line_end":6,"column_start":1,"column_end":88}},{"value":"!","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/lib.rs","byte_start":289,"byte_end":292,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/lib.rs","byte_start":294,"byte_end":316,"line_start":9,"line_end":9,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":220},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":998,"byte_end":1007,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"Multihash","qualname":"::digests::Multihash","value":"Multihash {  }","parent":null,"children":[{"krate":0,"index":221}],"decl_id":null,"docs":" Representation of a valid multihash. This enforces validity on construction,\n so it can be assumed this is always a valid multihash.\n","sig":null,"attributes":[{"value":"/ Representation of a valid multihash. This enforces validity on construction,","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":830,"byte_end":910,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ so it can be assumed this is always a valid multihash.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":911,"byte_end":969,"line_start":12,"line_end":12,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":2035,"byte_end":2045,"line_start":55,"line_end":55,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<Multihash>::from_bytes","value":"fn (bytes: Vec<u8>) -> Result<Multihash, DecodeOwnedError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Multihash` from a `Vec<u8>`, consuming it.\n If the input data is not a valid multihash an error is returned.","sig":null,"attributes":[{"value":"/ Creates a new `Multihash` from a `Vec<u8>`, consuming it.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":1525,"byte_end":1586,"line_start":39,"line_end":39,"column_start":5,"column_end":66}},{"value":"/ If the input data is not a valid multihash an error is returned.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":1591,"byte_end":1659,"line_start":40,"line_end":40,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":1664,"byte_end":1667,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":1672,"byte_end":1685,"line_start":42,"line_end":42,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":1690,"byte_end":1693,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":1698,"byte_end":1705,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ use multihash::{Sha2_256, Multihash};","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":1710,"byte_end":1751,"line_start":45,"line_end":45,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":1756,"byte_end":1759,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ let mh = Sha2_256::digest(b\"hello world\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":1764,"byte_end":1810,"line_start":47,"line_end":47,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":1815,"byte_end":1818,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ // valid multihash","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":1823,"byte_end":1845,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/ let mh2 = Multihash::from_bytes(mh.into_bytes()).unwrap();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":1850,"byte_end":1912,"line_start":50,"line_end":50,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":1917,"byte_end":1920,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ // invalid multihash","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":1925,"byte_end":1949,"line_start":52,"line_end":52,"column_start":5,"column_end":29}},{"value":"/ assert!(Multihash::from_bytes(vec![1,2,3]).is_err());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":1954,"byte_end":2011,"line_start":53,"line_end":53,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":2016,"byte_end":2023,"line_start":54,"line_end":54,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":2450,"byte_end":2460,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"into_bytes","qualname":"<Multihash>::into_bytes","value":"fn (self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Returns the bytes representation of the multihash.\n","sig":null,"attributes":[{"value":"/ Returns the bytes representation of the multihash.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":2384,"byte_end":2438,"line_start":67,"line_end":67,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":2579,"byte_end":2585,"line_start":73,"line_end":73,"column_start":12,"column_end":18},"name":"to_vec","qualname":"<Multihash>::to_vec","value":"fn (&self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Returns the bytes representation of the multihash.\n","sig":null,"attributes":[{"value":"/ Returns the bytes representation of the multihash.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":2513,"byte_end":2567,"line_start":72,"line_end":72,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":2719,"byte_end":2727,"line_start":78,"line_end":78,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Multihash>::as_bytes","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the bytes representation of this multihash.\n","sig":null,"attributes":[{"value":"/ Returns the bytes representation of this multihash.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":2652,"byte_end":2707,"line_start":77,"line_end":77,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":2860,"byte_end":2866,"line_start":83,"line_end":83,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<Multihash>::as_ref","value":"fn (&self) -> MultihashRef","parent":null,"children":[],"decl_id":null,"docs":" Builds a `MultihashRef` corresponding to this `Multihash`.\n","sig":null,"attributes":[{"value":"/ Builds a `MultihashRef` corresponding to this `Multihash`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":2786,"byte_end":2848,"line_start":82,"line_end":82,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":3243,"byte_end":3252,"line_start":99,"line_end":99,"column_start":12,"column_end":21},"name":"algorithm","qualname":"<Multihash>::algorithm","value":"fn (&self) -> Code","parent":null,"children":[],"decl_id":null,"docs":" Returns the algorithm used in this multihash.","sig":null,"attributes":[{"value":"/ Returns the algorithm used in this multihash.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":2972,"byte_end":3021,"line_start":89,"line_end":89,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":3026,"byte_end":3029,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":3034,"byte_end":3047,"line_start":91,"line_end":91,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":3052,"byte_end":3055,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":3060,"byte_end":3067,"line_start":93,"line_end":93,"column_start":5,"column_end":12}},{"value":"/ use multihash::{Code, Sha2_256};","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":3072,"byte_end":3108,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":3113,"byte_end":3116,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let mh = Sha2_256::digest(b\"hello world\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":3121,"byte_end":3167,"line_start":96,"line_end":96,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(mh.algorithm(), Code::Sha2_256);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":3172,"byte_end":3219,"line_start":97,"line_end":97,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":3224,"byte_end":3231,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":3355,"byte_end":3361,"line_start":104,"line_end":104,"column_start":12,"column_end":18},"name":"digest","qualname":"<Multihash>::digest","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the hashed data.\n","sig":null,"attributes":[{"value":"/ Returns the hashed data.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":3315,"byte_end":3343,"line_start":103,"line_end":103,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":224},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":4567,"byte_end":4579,"line_start":163,"line_end":163,"column_start":12,"column_end":24},"name":"MultihashRef","qualname":"::digests::MultihashRef","value":"MultihashRef {  }","parent":null,"children":[{"krate":0,"index":226}],"decl_id":null,"docs":" Represents a valid multihash.\n","sig":null,"attributes":[{"value":"/ Represents a valid multihash.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":4454,"byte_end":4487,"line_start":161,"line_end":161,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":5148,"byte_end":5158,"line_start":184,"line_end":184,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<MultihashRef>::from_slice","value":"fn (input: &'a [u8]) -> Result<Self, DecodeError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `MultihashRef` from a `&[u8]`.\n If the input data is not a valid multihash an error is returned.","sig":null,"attributes":[{"value":"/ Creates a new `MultihashRef` from a `&[u8]`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":4642,"byte_end":4690,"line_start":168,"line_end":168,"column_start":5,"column_end":53}},{"value":"/ If the input data is not a valid multihash an error is returned.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":4695,"byte_end":4763,"line_start":169,"line_end":169,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":4768,"byte_end":4771,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":4776,"byte_end":4789,"line_start":171,"line_end":171,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":4794,"byte_end":4797,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":4802,"byte_end":4809,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ use multihash::{Sha2_256, Multihash, MultihashRef};","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":4814,"byte_end":4869,"line_start":174,"line_end":174,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":4874,"byte_end":4877,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let mh = Sha2_256::digest(b\"hello world\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":4882,"byte_end":4928,"line_start":176,"line_end":176,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":4933,"byte_end":4936,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ // valid multihash","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":4941,"byte_end":4963,"line_start":178,"line_end":178,"column_start":5,"column_end":27}},{"value":"/ let mh2 = MultihashRef::from_slice(&mh).unwrap();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":4968,"byte_end":5021,"line_start":179,"line_end":179,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":5026,"byte_end":5029,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ // invalid multihash","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":5034,"byte_end":5058,"line_start":181,"line_end":181,"column_start":5,"column_end":29}},{"value":"/ assert!(MultihashRef::from_slice(&vec![1,2,3]).is_err());","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":5063,"byte_end":5124,"line_start":182,"line_end":182,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":5129,"byte_end":5136,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":6057,"byte_end":6066,"line_start":213,"line_end":213,"column_start":12,"column_end":21},"name":"algorithm","qualname":"<MultihashRef>::algorithm","value":"fn (&self) -> Code","parent":null,"children":[],"decl_id":null,"docs":" Returns the algorithm used in this multihash.","sig":null,"attributes":[{"value":"/ Returns the algorithm used in this multihash.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":5678,"byte_end":5727,"line_start":200,"line_end":200,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":5732,"byte_end":5735,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":5740,"byte_end":5753,"line_start":202,"line_end":202,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":5758,"byte_end":5761,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":5766,"byte_end":5773,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"/ use multihash::{Code, Sha2_256, MultihashRef};","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":5778,"byte_end":5828,"line_start":205,"line_end":205,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":5833,"byte_end":5836,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ let mh = Sha2_256::digest(b\"hello world\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":5841,"byte_end":5887,"line_start":207,"line_end":207,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":5892,"byte_end":5895,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ // valid multihash","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":5900,"byte_end":5922,"line_start":209,"line_end":209,"column_start":5,"column_end":27}},{"value":"/ let mh2 = MultihashRef::from_slice(&mh).unwrap();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":5927,"byte_end":5980,"line_start":210,"line_end":210,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(mh2.algorithm(), Code::Sha2_256);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":5985,"byte_end":6033,"line_start":211,"line_end":211,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":6038,"byte_end":6045,"line_start":212,"line_end":212,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":6586,"byte_end":6592,"line_start":231,"line_end":231,"column_start":12,"column_end":18},"name":"digest","qualname":"<MultihashRef>::digest","value":"fn (&self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the hash digest.","sig":null,"attributes":[{"value":"/ Returns the hash digest.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":6249,"byte_end":6277,"line_start":219,"line_end":219,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":6282,"byte_end":6285,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":6290,"byte_end":6303,"line_start":221,"line_end":221,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":6308,"byte_end":6311,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":6316,"byte_end":6323,"line_start":223,"line_end":223,"column_start":5,"column_end":12}},{"value":"/ use multihash::{wrap, Code, Sha2_256};","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":6328,"byte_end":6370,"line_start":224,"line_end":224,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":6375,"byte_end":6378,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ let mh = Sha2_256::digest(b\"hello world\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":6383,"byte_end":6429,"line_start":226,"line_end":226,"column_start":5,"column_end":51}},{"value":"/ let digest = mh.digest();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":6434,"byte_end":6463,"line_start":227,"line_end":227,"column_start":5,"column_end":34}},{"value":"/ let wrapped = wrap(Code::Sha2_256, &digest);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":6468,"byte_end":6516,"line_start":228,"line_end":228,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(wrapped.digest(), digest);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":6521,"byte_end":6562,"line_start":229,"line_end":229,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":6567,"byte_end":6574,"line_start":230,"line_end":230,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":6987,"byte_end":6995,"line_start":242,"line_end":242,"column_start":12,"column_end":20},"name":"to_owned","qualname":"<MultihashRef>::to_owned","value":"fn (&self) -> Multihash","parent":null,"children":[],"decl_id":null,"docs":" Builds a `Multihash` that owns the data.","sig":null,"attributes":[{"value":"/ Builds a `Multihash` that owns the data.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":6889,"byte_end":6933,"line_start":239,"line_end":239,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":6938,"byte_end":6941,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ This operation allocates.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":6946,"byte_end":6975,"line_start":241,"line_end":241,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":7180,"byte_end":7188,"line_start":249,"line_end":249,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<MultihashRef>::as_bytes","value":"fn (&self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the bytes representation of this multihash.\n","sig":null,"attributes":[{"value":"/ Returns the bytes representation of this multihash.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":7113,"byte_end":7168,"line_start":248,"line_end":248,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":73},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":7742,"byte_end":7757,"line_start":275,"line_end":275,"column_start":11,"column_end":26},"name":"MultihashDigest","qualname":"::digests::MultihashDigest","value":"MultihashDigest","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75}],"decl_id":null,"docs":" The `MultihashDigest` trait specifies an interface common for all multihash functions.\n","sig":null,"attributes":[{"value":"/ The `MultihashDigest` trait specifies an interface common for all multihash functions.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":7641,"byte_end":7731,"line_start":274,"line_end":274,"column_start":1,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":7801,"byte_end":7805,"line_start":277,"line_end":277,"column_start":8,"column_end":12},"name":"code","qualname":"::digests::MultihashDigest::code","value":"fn (&self) -> Code","parent":{"krate":0,"index":73},"children":[],"decl_id":null,"docs":" The Mutlihash byte value.\n","sig":null,"attributes":[{"value":"/ The Mutlihash byte value.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":7764,"byte_end":7793,"line_start":276,"line_end":276,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":8006,"byte_end":8012,"line_start":284,"line_end":284,"column_start":8,"column_end":14},"name":"digest","qualname":"::digests::MultihashDigest::digest","value":"fn (&self, data: &[u8]) -> Multihash","parent":{"krate":0,"index":73},"children":[],"decl_id":null,"docs":" Hash some input and return the digest.","sig":null,"attributes":[{"value":"/ Hash some input and return the digest.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":7827,"byte_end":7869,"line_start":279,"line_end":279,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":7874,"byte_end":7877,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":7882,"byte_end":7894,"line_start":281,"line_end":281,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":7899,"byte_end":7902,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Panics if the digest length is bigger than 2^32. This only happens for identity hasing.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":7907,"byte_end":7998,"line_start":283,"line_end":283,"column_start":5,"column_end":96}}]},{"kind":"Function","id":{"krate":0,"index":76},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":8533,"byte_end":8537,"line_start":302,"line_end":302,"column_start":8,"column_end":12},"name":"wrap","qualname":"::digests::wrap","value":"fn (code: Code, data: &[u8]) -> Multihash","parent":null,"children":[],"decl_id":null,"docs":" Wraps a hash digest in Multihash with the given Mutlihash code.","sig":null,"attributes":[{"value":"/ Wraps a hash digest in Multihash with the given Mutlihash code.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":8050,"byte_end":8117,"line_start":287,"line_end":287,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":8118,"byte_end":8121,"line_start":288,"line_end":288,"column_start":1,"column_end":4}},{"value":"/ The size of the hash is determoned by the size of the input hash. If it should be truncated","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":8122,"byte_end":8217,"line_start":289,"line_end":289,"column_start":1,"column_end":96}},{"value":"/ the input data must already be the truncated hash.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":8218,"byte_end":8272,"line_start":290,"line_end":290,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":8273,"byte_end":8276,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":8277,"byte_end":8290,"line_start":292,"line_end":292,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":8291,"byte_end":8294,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":8295,"byte_end":8302,"line_start":294,"line_end":294,"column_start":1,"column_end":8}},{"value":"/ use multihash::{wrap, Code, Sha2_256};","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":8303,"byte_end":8345,"line_start":295,"line_end":295,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":8346,"byte_end":8349,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ let mh = Sha2_256::digest(b\"hello world\");","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":8350,"byte_end":8396,"line_start":297,"line_end":297,"column_start":1,"column_end":47}},{"value":"/ let digest = mh.digest();","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":8397,"byte_end":8426,"line_start":298,"line_end":298,"column_start":1,"column_end":30}},{"value":"/ let wrapped = wrap(Code::Sha2_256, &digest);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":8427,"byte_end":8475,"line_start":299,"line_end":299,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(wrapped.digest(), digest);","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":8476,"byte_end":8517,"line_start":300,"line_end":300,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":8518,"byte_end":8525,"line_start":301,"line_end":301,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":261},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/errors.rs","byte_start":9140,"byte_end":9155,"line_start":7,"line_end":7,"column_start":5,"column_end":20},"name":"UnsupportedType","qualname":"::errors::EncodeError::UnsupportedType","value":"EncodeError::UnsupportedType","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" The requested hash algorithm isn't supported by this library.\n","sig":null,"attributes":[{"value":"/ The requested hash algorithm isn't supported by this library.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/errors.rs","byte_start":9070,"byte_end":9135,"line_start":6,"line_end":6,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":263},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/errors.rs","byte_start":9223,"byte_end":9245,"line_start":9,"line_end":9,"column_start":5,"column_end":27},"name":"UnsupportedInputLength","qualname":"::errors::EncodeError::UnsupportedInputLength","value":"EncodeError::UnsupportedInputLength","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" The input length is too large for the hash algorithm.\n","sig":null,"attributes":[{"value":"/ The input length is too large for the hash algorithm.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/errors.rs","byte_start":9161,"byte_end":9218,"line_start":8,"line_end":8,"column_start":5,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":260},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/errors.rs","byte_start":9052,"byte_end":9063,"line_start":5,"line_end":5,"column_start":10,"column_end":21},"name":"EncodeError","qualname":"::errors::EncodeError","value":"EncodeError::{UnsupportedType, UnsupportedInputLength}","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":263}],"decl_id":null,"docs":" Error that can happen when encoding some bytes into a multihash.\n","sig":null,"attributes":[{"value":"/ Error that can happen when encoding some bytes into a multihash.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/errors.rs","byte_start":8929,"byte_end":8997,"line_start":3,"line_end":3,"column_start":1,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":277},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/errors.rs","byte_start":9875,"byte_end":9889,"line_start":31,"line_end":31,"column_start":5,"column_end":19},"name":"BadInputLength","qualname":"::errors::DecodeError::BadInputLength","value":"DecodeError::BadInputLength","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" The input doesn't have a correct length.\n","sig":null,"attributes":[{"value":"/ The input doesn't have a correct length.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/errors.rs","byte_start":9826,"byte_end":9870,"line_start":30,"line_end":30,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":279},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/errors.rs","byte_start":9951,"byte_end":9962,"line_start":33,"line_end":33,"column_start":5,"column_end":16},"name":"UnknownCode","qualname":"::errors::DecodeError::UnknownCode","value":"DecodeError::UnknownCode","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" The code of the hashing algorithm is incorrect.\n","sig":null,"attributes":[{"value":"/ The code of the hashing algorithm is incorrect.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/errors.rs","byte_start":9895,"byte_end":9946,"line_start":32,"line_end":32,"column_start":5,"column_end":56}}]},{"kind":"Enum","id":{"krate":0,"index":276},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/errors.rs","byte_start":9808,"byte_end":9819,"line_start":29,"line_end":29,"column_start":10,"column_end":21},"name":"DecodeError","qualname":"::errors::DecodeError","value":"DecodeError::{BadInputLength, UnknownCode}","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":279}],"decl_id":null,"docs":" Error that can happen when decoding some bytes.\n","sig":null,"attributes":[{"value":"/ Error that can happen when decoding some bytes.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/errors.rs","byte_start":9702,"byte_end":9753,"line_start":27,"line_end":27,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":292},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/errors.rs","byte_start":10505,"byte_end":10521,"line_start":52,"line_end":52,"column_start":12,"column_end":28},"name":"DecodeOwnedError","qualname":"::errors::DecodeOwnedError","value":"DecodeOwnedError { error, data }","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":294}],"decl_id":null,"docs":" Error that can happen when decoding some bytes.","sig":null,"attributes":[{"value":"/ Error that can happen when decoding some bytes.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/errors.rs","byte_start":10311,"byte_end":10362,"line_start":48,"line_end":48,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/errors.rs","byte_start":10363,"byte_end":10366,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Same as `DecodeError`, but allows retreiving the data whose decoding was attempted.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/errors.rs","byte_start":10367,"byte_end":10454,"line_start":50,"line_end":50,"column_start":1,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":293},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/errors.rs","byte_start":10551,"byte_end":10556,"line_start":54,"line_end":54,"column_start":9,"column_end":14},"name":"error","qualname":"::errors::DecodeOwnedError::error","value":"errors::DecodeError","parent":{"krate":0,"index":292},"children":[],"decl_id":null,"docs":" The error.\n","sig":null,"attributes":[{"value":"/ The error.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/errors.rs","byte_start":10528,"byte_end":10542,"line_start":53,"line_end":53,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":294},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/errors.rs","byte_start":10626,"byte_end":10630,"line_start":56,"line_end":56,"column_start":9,"column_end":13},"name":"data","qualname":"::errors::DecodeOwnedError::data","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":292},"children":[],"decl_id":null,"docs":" The data whose decoding was attempted.\n","sig":null,"attributes":[{"value":"/ The data whose decoding was attempted.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/errors.rs","byte_start":10575,"byte_end":10617,"line_start":55,"line_end":55,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":307},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":11121,"byte_end":11129,"line_start":11,"line_end":11,"column_start":5,"column_end":13},"name":"Identity","qualname":"::hashes::Code::Identity","value":"Code::Identity","parent":{"krate":0,"index":306},"children":[],"decl_id":null,"docs":" Identity (Raw binary )\n","sig":null,"attributes":[{"value":"/ Identity (Raw binary )","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":11090,"byte_end":11116,"line_start":10,"line_end":10,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":309},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":11169,"byte_end":11173,"line_start":13,"line_end":13,"column_start":5,"column_end":9},"name":"Sha1","qualname":"::hashes::Code::Sha1","value":"Code::Sha1","parent":{"krate":0,"index":306},"children":[],"decl_id":null,"docs":" SHA-1 (20-byte hash size)\n","sig":null,"attributes":[{"value":"/ SHA-1 (20-byte hash size)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":11135,"byte_end":11164,"line_start":12,"line_end":12,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":311},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":11215,"byte_end":11223,"line_start":15,"line_end":15,"column_start":5,"column_end":13},"name":"Sha2_256","qualname":"::hashes::Code::Sha2_256","value":"Code::Sha2_256","parent":{"krate":0,"index":306},"children":[],"decl_id":null,"docs":" SHA-256 (32-byte hash size)\n","sig":null,"attributes":[{"value":"/ SHA-256 (32-byte hash size)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":11179,"byte_end":11210,"line_start":14,"line_end":14,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":313},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":11265,"byte_end":11273,"line_start":17,"line_end":17,"column_start":5,"column_end":13},"name":"Sha2_512","qualname":"::hashes::Code::Sha2_512","value":"Code::Sha2_512","parent":{"krate":0,"index":306},"children":[],"decl_id":null,"docs":" SHA-512 (64-byte hash size)\n","sig":null,"attributes":[{"value":"/ SHA-512 (64-byte hash size)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":11229,"byte_end":11260,"line_start":16,"line_end":16,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":315},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":11316,"byte_end":11324,"line_start":19,"line_end":19,"column_start":5,"column_end":13},"name":"Sha3_224","qualname":"::hashes::Code::Sha3_224","value":"Code::Sha3_224","parent":{"krate":0,"index":306},"children":[],"decl_id":null,"docs":" SHA3-224 (28-byte hash size)\n","sig":null,"attributes":[{"value":"/ SHA3-224 (28-byte hash size)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":11279,"byte_end":11311,"line_start":18,"line_end":18,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":317},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":11367,"byte_end":11375,"line_start":21,"line_end":21,"column_start":5,"column_end":13},"name":"Sha3_256","qualname":"::hashes::Code::Sha3_256","value":"Code::Sha3_256","parent":{"krate":0,"index":306},"children":[],"decl_id":null,"docs":" SHA3-256 (32-byte hash size)\n","sig":null,"attributes":[{"value":"/ SHA3-256 (32-byte hash size)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":11330,"byte_end":11362,"line_start":20,"line_end":20,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":319},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":11418,"byte_end":11426,"line_start":23,"line_end":23,"column_start":5,"column_end":13},"name":"Sha3_384","qualname":"::hashes::Code::Sha3_384","value":"Code::Sha3_384","parent":{"krate":0,"index":306},"children":[],"decl_id":null,"docs":" SHA3-384 (48-byte hash size)\n","sig":null,"attributes":[{"value":"/ SHA3-384 (48-byte hash size)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":11381,"byte_end":11413,"line_start":22,"line_end":22,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":321},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":11469,"byte_end":11477,"line_start":25,"line_end":25,"column_start":5,"column_end":13},"name":"Sha3_512","qualname":"::hashes::Code::Sha3_512","value":"Code::Sha3_512","parent":{"krate":0,"index":306},"children":[],"decl_id":null,"docs":" SHA3-512 (64-byte hash size)\n","sig":null,"attributes":[{"value":"/ SHA3-512 (64-byte hash size)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":11432,"byte_end":11464,"line_start":24,"line_end":24,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":323},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":11522,"byte_end":11531,"line_start":27,"line_end":27,"column_start":5,"column_end":14},"name":"Keccak224","qualname":"::hashes::Code::Keccak224","value":"Code::Keccak224","parent":{"krate":0,"index":306},"children":[],"decl_id":null,"docs":" Keccak-224 (28-byte hash size)\n","sig":null,"attributes":[{"value":"/ Keccak-224 (28-byte hash size)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":11483,"byte_end":11517,"line_start":26,"line_end":26,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":325},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":11576,"byte_end":11585,"line_start":29,"line_end":29,"column_start":5,"column_end":14},"name":"Keccak256","qualname":"::hashes::Code::Keccak256","value":"Code::Keccak256","parent":{"krate":0,"index":306},"children":[],"decl_id":null,"docs":" Keccak-256 (32-byte hash size)\n","sig":null,"attributes":[{"value":"/ Keccak-256 (32-byte hash size)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":11537,"byte_end":11571,"line_start":28,"line_end":28,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":327},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":11630,"byte_end":11639,"line_start":31,"line_end":31,"column_start":5,"column_end":14},"name":"Keccak384","qualname":"::hashes::Code::Keccak384","value":"Code::Keccak384","parent":{"krate":0,"index":306},"children":[],"decl_id":null,"docs":" Keccak-384 (48-byte hash size)\n","sig":null,"attributes":[{"value":"/ Keccak-384 (48-byte hash size)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":11591,"byte_end":11625,"line_start":30,"line_end":30,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":329},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":11684,"byte_end":11693,"line_start":33,"line_end":33,"column_start":5,"column_end":14},"name":"Keccak512","qualname":"::hashes::Code::Keccak512","value":"Code::Keccak512","parent":{"krate":0,"index":306},"children":[],"decl_id":null,"docs":" Keccak-512 (64-byte hash size)\n","sig":null,"attributes":[{"value":"/ Keccak-512 (64-byte hash size)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":11645,"byte_end":11679,"line_start":32,"line_end":32,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":331},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":11739,"byte_end":11749,"line_start":35,"line_end":35,"column_start":5,"column_end":15},"name":"Blake2b256","qualname":"::hashes::Code::Blake2b256","value":"Code::Blake2b256","parent":{"krate":0,"index":306},"children":[],"decl_id":null,"docs":" BLAKE2b-256 (32-byte hash size)\n","sig":null,"attributes":[{"value":"/ BLAKE2b-256 (32-byte hash size)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":11699,"byte_end":11734,"line_start":34,"line_end":34,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":333},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":11795,"byte_end":11805,"line_start":37,"line_end":37,"column_start":5,"column_end":15},"name":"Blake2b512","qualname":"::hashes::Code::Blake2b512","value":"Code::Blake2b512","parent":{"krate":0,"index":306},"children":[],"decl_id":null,"docs":" BLAKE2b-512 (64-byte hash size)\n","sig":null,"attributes":[{"value":"/ BLAKE2b-512 (64-byte hash size)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":11755,"byte_end":11790,"line_start":36,"line_end":36,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":335},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":11851,"byte_end":11861,"line_start":39,"line_end":39,"column_start":5,"column_end":15},"name":"Blake2s128","qualname":"::hashes::Code::Blake2s128","value":"Code::Blake2s128","parent":{"krate":0,"index":306},"children":[],"decl_id":null,"docs":" BLAKE2s-128 (16-byte hash size)\n","sig":null,"attributes":[{"value":"/ BLAKE2s-128 (16-byte hash size)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":11811,"byte_end":11846,"line_start":38,"line_end":38,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":337},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":11907,"byte_end":11917,"line_start":41,"line_end":41,"column_start":5,"column_end":15},"name":"Blake2s256","qualname":"::hashes::Code::Blake2s256","value":"Code::Blake2s256","parent":{"krate":0,"index":306},"children":[],"decl_id":null,"docs":" BLAKE2s-256 (32-byte hash size)\n","sig":null,"attributes":[{"value":"/ BLAKE2s-256 (32-byte hash size)","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":11867,"byte_end":11902,"line_start":40,"line_end":40,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":339},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":12002,"byte_end":12008,"line_start":43,"line_end":43,"column_start":5,"column_end":11},"name":"Custom","qualname":"::hashes::Code::Custom","value":"Code::Custom(u64)","parent":{"krate":0,"index":306},"children":[],"decl_id":null,"docs":" Make it possible to use a custom code that is not part of the enum yet\n","sig":null,"attributes":[{"value":"/ Make it possible to use a custom code that is not part of the enum yet","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":11923,"byte_end":11997,"line_start":42,"line_end":42,"column_start":5,"column_end":79}}]},{"kind":"Enum","id":{"krate":0,"index":306},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":11079,"byte_end":11083,"line_start":9,"line_end":9,"column_start":10,"column_end":14},"name":"Code","qualname":"::hashes::Code","value":"Code::{Identity, Sha1, Sha2_256, Sha2_512, Sha3_224, Sha3_256, Sha3_384, Sha3_512, Keccak224, Keccak256, Keccak384, Keccak512, Blake2b256, Blake2b512, Blake2s128, Blake2s256, Custom}","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":309},{"krate":0,"index":311},{"krate":0,"index":313},{"krate":0,"index":315},{"krate":0,"index":317},{"krate":0,"index":319},{"krate":0,"index":321},{"krate":0,"index":323},{"krate":0,"index":325},{"krate":0,"index":327},{"krate":0,"index":329},{"krate":0,"index":331},{"krate":0,"index":333},{"krate":0,"index":335},{"krate":0,"index":337},{"krate":0,"index":339}],"decl_id":null,"docs":" The code of Multihash.\n","sig":null,"attributes":[{"value":"/ The code of Multihash.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":10998,"byte_end":11024,"line_start":7,"line_end":7,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":12083,"byte_end":12089,"line_start":48,"line_end":48,"column_start":12,"column_end":18},"name":"to_u64","qualname":"<Code>::to_u64","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Return the code as integer value.\n","sig":null,"attributes":[{"value":"/ Return the code as integer value.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":12034,"byte_end":12071,"line_start":47,"line_end":47,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":12963,"byte_end":12971,"line_start":73,"line_end":73,"column_start":12,"column_end":20},"name":"from_u64","qualname":"<Code>::from_u64","value":"fn (code: u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the `Code` based on the integer value. If the code is unknown/not implemented yet\n then it returns a `Code::Custom`.\n implements with that value.\n","sig":null,"attributes":[{"value":"/ Return the `Code` based on the integer value. If the code is unknown/not implemented yet","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":12781,"byte_end":12873,"line_start":70,"line_end":70,"column_start":5,"column_end":97}},{"value":"/ then it returns a `Code::Custom`.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":12878,"byte_end":12915,"line_start":71,"line_end":71,"column_start":5,"column_end":42}},{"value":"/ implements with that value.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":12920,"byte_end":12951,"line_start":72,"line_end":72,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":13805,"byte_end":13811,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"hasher","qualname":"<Code>::hasher","value":"fn (&self) -> Option<Box<dyn MultihashDigest>>","parent":null,"children":[],"decl_id":null,"docs":" Return the hasher that is used to create a hash with this code.","sig":null,"attributes":[{"value":"/ Return the hasher that is used to create a hash with this code.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":13664,"byte_end":13731,"line_start":95,"line_end":95,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":13736,"byte_end":13739,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ If a custom code is used, `None` is returned.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":13744,"byte_end":13793,"line_start":97,"line_end":97,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":354},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":14906,"byte_end":14914,"line_start":123,"line_end":123,"column_start":12,"column_end":20},"name":"Identity","qualname":"::hashes::Identity","value":"","parent":null,"children":[],"decl_id":null,"docs":" The Identity hasher\n","sig":null,"attributes":[{"value":"/ The Identity hasher","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":14847,"byte_end":14870,"line_start":121,"line_end":121,"column_start":1,"column_end":24}}]},{"kind":"Const","id":{"krate":0,"index":106},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":15163,"byte_end":15167,"line_start":134,"line_end":134,"column_start":15,"column_end":19},"name":"CODE","qualname":"::hashes::Identity::CODE","value":"Code","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" The code of Identity hasher, 0x00.\n","sig":null,"attributes":[{"value":"/ The code of Identity hasher, 0x00.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":15110,"byte_end":15148,"line_start":133,"line_end":133,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":15261,"byte_end":15267,"line_start":136,"line_end":136,"column_start":12,"column_end":18},"name":"digest","qualname":"<Identity>::digest","value":"fn (data: &[u8]) -> Multihash","parent":null,"children":[],"decl_id":null,"docs":" Hash some input and return the raw binary digest.\n","sig":null,"attributes":[{"value":"/ Hash some input and return the raw binary digest.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":15196,"byte_end":15249,"line_start":135,"line_end":135,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":360},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":15559,"byte_end":15563,"line_start":146,"line_end":146,"column_start":12,"column_end":16},"name":"Sha1","qualname":"::hashes::Sha1","value":"","parent":null,"children":[],"decl_id":null,"docs":" The Sha1 hasher.\n","sig":null,"attributes":[{"value":"/ The Sha1 hasher.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":15503,"byte_end":15523,"line_start":144,"line_end":144,"column_start":1,"column_end":21}}]},{"kind":"Const","id":{"krate":0,"index":112},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":15800,"byte_end":15804,"line_start":157,"line_end":157,"column_start":15,"column_end":19},"name":"CODE","qualname":"::hashes::Sha1::CODE","value":"Code","parent":{"krate":0,"index":111},"children":[],"decl_id":null,"docs":" The code of Sha1 hasher, 0x11.\n","sig":null,"attributes":[{"value":"/ The code of Sha1 hasher, 0x11.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":15751,"byte_end":15785,"line_start":156,"line_end":156,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":15888,"byte_end":15894,"line_start":159,"line_end":159,"column_start":12,"column_end":18},"name":"digest","qualname":"<Sha1>::digest","value":"fn (data: &[u8]) -> Multihash","parent":null,"children":[],"decl_id":null,"docs":" Hash some input and return the sha1 digest.\n","sig":null,"attributes":[{"value":"/ Hash some input and return the sha1 digest.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":15829,"byte_end":15876,"line_start":158,"line_end":158,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":366},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":16074,"byte_end":16082,"line_start":167,"line_end":167,"column_start":12,"column_end":20},"name":"Sha2_256","qualname":"::hashes::Sha2_256","value":"","parent":null,"children":[],"decl_id":null,"docs":" The Sha2-256 hasher.\n","sig":null,"attributes":[{"value":"/ The Sha2-256 hasher.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":16014,"byte_end":16038,"line_start":165,"line_end":165,"column_start":1,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":118},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":16331,"byte_end":16335,"line_start":178,"line_end":178,"column_start":15,"column_end":19},"name":"CODE","qualname":"::hashes::Sha2_256::CODE","value":"Code","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" The code of Sha2-256 hasher, 0x12.\n","sig":null,"attributes":[{"value":"/ The code of Sha2-256 hasher, 0x12.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":16278,"byte_end":16316,"line_start":177,"line_end":177,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":16427,"byte_end":16433,"line_start":180,"line_end":180,"column_start":12,"column_end":18},"name":"digest","qualname":"<Sha2_256>::digest","value":"fn (data: &[u8]) -> Multihash","parent":null,"children":[],"decl_id":null,"docs":" Hash some input and return the sha2-256 digest.\n","sig":null,"attributes":[{"value":"/ Hash some input and return the sha2-256 digest.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":16364,"byte_end":16415,"line_start":179,"line_end":179,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":372},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":16615,"byte_end":16623,"line_start":188,"line_end":188,"column_start":12,"column_end":20},"name":"Sha2_512","qualname":"::hashes::Sha2_512","value":"","parent":null,"children":[],"decl_id":null,"docs":" The Sha2-512 hasher.\n","sig":null,"attributes":[{"value":"/ The Sha2-512 hasher.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":16555,"byte_end":16579,"line_start":186,"line_end":186,"column_start":1,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":124},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":16872,"byte_end":16876,"line_start":199,"line_end":199,"column_start":15,"column_end":19},"name":"CODE","qualname":"::hashes::Sha2_512::CODE","value":"Code","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" The code of Sha2-512 hasher, 0x13.\n","sig":null,"attributes":[{"value":"/ The code of Sha2-512 hasher, 0x13.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":16819,"byte_end":16857,"line_start":198,"line_end":198,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":16968,"byte_end":16974,"line_start":201,"line_end":201,"column_start":12,"column_end":18},"name":"digest","qualname":"<Sha2_512>::digest","value":"fn (data: &[u8]) -> Multihash","parent":null,"children":[],"decl_id":null,"docs":" Hash some input and return the sha2-512 digest.\n","sig":null,"attributes":[{"value":"/ Hash some input and return the sha2-512 digest.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":16905,"byte_end":16956,"line_start":200,"line_end":200,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":378},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":17156,"byte_end":17164,"line_start":209,"line_end":209,"column_start":12,"column_end":20},"name":"Sha3_224","qualname":"::hashes::Sha3_224","value":"","parent":null,"children":[],"decl_id":null,"docs":" The Sha3-224 hasher.\n","sig":null,"attributes":[{"value":"/ The Sha3-224 hasher.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":17096,"byte_end":17120,"line_start":207,"line_end":207,"column_start":1,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":130},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":17413,"byte_end":17417,"line_start":220,"line_end":220,"column_start":15,"column_end":19},"name":"CODE","qualname":"::hashes::Sha3_224::CODE","value":"Code","parent":{"krate":0,"index":129},"children":[],"decl_id":null,"docs":" The code of Sha3-224 hasher, 0x17.\n","sig":null,"attributes":[{"value":"/ The code of Sha3-224 hasher, 0x17.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":17360,"byte_end":17398,"line_start":219,"line_end":219,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":17509,"byte_end":17515,"line_start":222,"line_end":222,"column_start":12,"column_end":18},"name":"digest","qualname":"<Sha3_224>::digest","value":"fn (data: &[u8]) -> Multihash","parent":null,"children":[],"decl_id":null,"docs":" Hash some input and return the sha3-224 digest.\n","sig":null,"attributes":[{"value":"/ Hash some input and return the sha3-224 digest.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":17446,"byte_end":17497,"line_start":221,"line_end":221,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":384},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":17691,"byte_end":17699,"line_start":230,"line_end":230,"column_start":12,"column_end":20},"name":"Sha3_256","qualname":"::hashes::Sha3_256","value":"","parent":null,"children":[],"decl_id":null,"docs":" The Sha3-256\n","sig":null,"attributes":[{"value":"/ The Sha3-256","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":17639,"byte_end":17655,"line_start":228,"line_end":228,"column_start":1,"column_end":17}}]},{"kind":"Const","id":{"krate":0,"index":136},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":17948,"byte_end":17952,"line_start":241,"line_end":241,"column_start":15,"column_end":19},"name":"CODE","qualname":"::hashes::Sha3_256::CODE","value":"Code","parent":{"krate":0,"index":135},"children":[],"decl_id":null,"docs":" The code of Sha3-256 hasher, 0x16.\n","sig":null,"attributes":[{"value":"/ The code of Sha3-256 hasher, 0x16.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":17895,"byte_end":17933,"line_start":240,"line_end":240,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":18044,"byte_end":18050,"line_start":243,"line_end":243,"column_start":12,"column_end":18},"name":"digest","qualname":"<Sha3_256>::digest","value":"fn (data: &[u8]) -> Multihash","parent":null,"children":[],"decl_id":null,"docs":" Hash some input and return the sha3-256 digest.\n","sig":null,"attributes":[{"value":"/ Hash some input and return the sha3-256 digest.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":17981,"byte_end":18032,"line_start":242,"line_end":242,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":390},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":18234,"byte_end":18242,"line_start":251,"line_end":251,"column_start":12,"column_end":20},"name":"Sha3_384","qualname":"::hashes::Sha3_384","value":"","parent":null,"children":[],"decl_id":null,"docs":" The Sha3-384 hasher.\n","sig":null,"attributes":[{"value":"/ The Sha3-384 hasher.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":18174,"byte_end":18198,"line_start":249,"line_end":249,"column_start":1,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":142},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":18491,"byte_end":18495,"line_start":262,"line_end":262,"column_start":15,"column_end":19},"name":"CODE","qualname":"::hashes::Sha3_384::CODE","value":"Code","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" The code of Sha3-384 hasher, 0x15.\n","sig":null,"attributes":[{"value":"/ The code of Sha3-384 hasher, 0x15.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":18438,"byte_end":18476,"line_start":261,"line_end":261,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":18587,"byte_end":18593,"line_start":264,"line_end":264,"column_start":12,"column_end":18},"name":"digest","qualname":"<Sha3_384>::digest","value":"fn (data: &[u8]) -> Multihash","parent":null,"children":[],"decl_id":null,"docs":" Hash some input and return the sha3-384 digest.\n","sig":null,"attributes":[{"value":"/ Hash some input and return the sha3-384 digest.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":18524,"byte_end":18575,"line_start":263,"line_end":263,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":396},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":18777,"byte_end":18785,"line_start":272,"line_end":272,"column_start":12,"column_end":20},"name":"Sha3_512","qualname":"::hashes::Sha3_512","value":"","parent":null,"children":[],"decl_id":null,"docs":" The Sha3-512 hasher.\n","sig":null,"attributes":[{"value":"/ The Sha3-512 hasher.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":18717,"byte_end":18741,"line_start":270,"line_end":270,"column_start":1,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":148},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":19034,"byte_end":19038,"line_start":283,"line_end":283,"column_start":15,"column_end":19},"name":"CODE","qualname":"::hashes::Sha3_512::CODE","value":"Code","parent":{"krate":0,"index":147},"children":[],"decl_id":null,"docs":" The code of Sha3-512 hasher, 0x14.\n","sig":null,"attributes":[{"value":"/ The code of Sha3-512 hasher, 0x14.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":18981,"byte_end":19019,"line_start":282,"line_end":282,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":19130,"byte_end":19136,"line_start":285,"line_end":285,"column_start":12,"column_end":18},"name":"digest","qualname":"<Sha3_512>::digest","value":"fn (data: &[u8]) -> Multihash","parent":null,"children":[],"decl_id":null,"docs":" Hash some input and return the sha3-512 digest.\n","sig":null,"attributes":[{"value":"/ Hash some input and return the sha3-512 digest.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":19067,"byte_end":19118,"line_start":284,"line_end":284,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":402},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":19322,"byte_end":19331,"line_start":293,"line_end":293,"column_start":12,"column_end":21},"name":"Keccak224","qualname":"::hashes::Keccak224","value":"","parent":null,"children":[],"decl_id":null,"docs":" The Keccak-224 hasher.\n","sig":null,"attributes":[{"value":"/ The Keccak-224 hasher.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":19260,"byte_end":19286,"line_start":291,"line_end":291,"column_start":1,"column_end":27}}]},{"kind":"Const","id":{"krate":0,"index":154},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":19584,"byte_end":19588,"line_start":304,"line_end":304,"column_start":15,"column_end":19},"name":"CODE","qualname":"::hashes::Keccak224::CODE","value":"Code","parent":{"krate":0,"index":153},"children":[],"decl_id":null,"docs":" The code of Keccak-224 hasher, 0x1a.\n","sig":null,"attributes":[{"value":"/ The code of Keccak-224 hasher, 0x1a.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":19529,"byte_end":19569,"line_start":303,"line_end":303,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":19683,"byte_end":19689,"line_start":306,"line_end":306,"column_start":12,"column_end":18},"name":"digest","qualname":"<Keccak224>::digest","value":"fn (data: &[u8]) -> Multihash","parent":null,"children":[],"decl_id":null,"docs":" Hash some input and return the keccak-224 digest.\n","sig":null,"attributes":[{"value":"/ Hash some input and return the keccak-224 digest.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":19618,"byte_end":19671,"line_start":305,"line_end":305,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":408},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":19876,"byte_end":19885,"line_start":314,"line_end":314,"column_start":12,"column_end":21},"name":"Keccak256","qualname":"::hashes::Keccak256","value":"","parent":null,"children":[],"decl_id":null,"docs":" The keccak-256 hasher.\n","sig":null,"attributes":[{"value":"/ The keccak-256 hasher.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":19814,"byte_end":19840,"line_start":312,"line_end":312,"column_start":1,"column_end":27}}]},{"kind":"Const","id":{"krate":0,"index":160},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":20138,"byte_end":20142,"line_start":325,"line_end":325,"column_start":15,"column_end":19},"name":"CODE","qualname":"::hashes::Keccak256::CODE","value":"Code","parent":{"krate":0,"index":159},"children":[],"decl_id":null,"docs":" The code of Keccak-256 hasher, 0x1b.\n","sig":null,"attributes":[{"value":"/ The code of Keccak-256 hasher, 0x1b.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":20083,"byte_end":20123,"line_start":324,"line_end":324,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":20237,"byte_end":20243,"line_start":327,"line_end":327,"column_start":12,"column_end":18},"name":"digest","qualname":"<Keccak256>::digest","value":"fn (data: &[u8]) -> Multihash","parent":null,"children":[],"decl_id":null,"docs":" Hash some input and return the keccak-256 digest.\n","sig":null,"attributes":[{"value":"/ Hash some input and return the keccak-256 digest.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":20172,"byte_end":20225,"line_start":326,"line_end":326,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":414},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":20430,"byte_end":20439,"line_start":335,"line_end":335,"column_start":12,"column_end":21},"name":"Keccak384","qualname":"::hashes::Keccak384","value":"","parent":null,"children":[],"decl_id":null,"docs":" The keccak-384 hasher.\n","sig":null,"attributes":[{"value":"/ The keccak-384 hasher.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":20368,"byte_end":20394,"line_start":333,"line_end":333,"column_start":1,"column_end":27}}]},{"kind":"Const","id":{"krate":0,"index":166},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":20692,"byte_end":20696,"line_start":346,"line_end":346,"column_start":15,"column_end":19},"name":"CODE","qualname":"::hashes::Keccak384::CODE","value":"Code","parent":{"krate":0,"index":165},"children":[],"decl_id":null,"docs":" The code of Keccak-384 hasher, 0x1c.\n","sig":null,"attributes":[{"value":"/ The code of Keccak-384 hasher, 0x1c.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":20637,"byte_end":20677,"line_start":345,"line_end":345,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":20791,"byte_end":20797,"line_start":348,"line_end":348,"column_start":12,"column_end":18},"name":"digest","qualname":"<Keccak384>::digest","value":"fn (data: &[u8]) -> Multihash","parent":null,"children":[],"decl_id":null,"docs":" Hash some input and return the keccak-384 digest.\n","sig":null,"attributes":[{"value":"/ Hash some input and return the keccak-384 digest.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":20726,"byte_end":20779,"line_start":347,"line_end":347,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":420},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":20984,"byte_end":20993,"line_start":356,"line_end":356,"column_start":12,"column_end":21},"name":"Keccak512","qualname":"::hashes::Keccak512","value":"","parent":null,"children":[],"decl_id":null,"docs":" The keccak-512 hasher.\n","sig":null,"attributes":[{"value":"/ The keccak-512 hasher.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":20922,"byte_end":20948,"line_start":354,"line_end":354,"column_start":1,"column_end":27}}]},{"kind":"Const","id":{"krate":0,"index":172},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":21246,"byte_end":21250,"line_start":367,"line_end":367,"column_start":15,"column_end":19},"name":"CODE","qualname":"::hashes::Keccak512::CODE","value":"Code","parent":{"krate":0,"index":171},"children":[],"decl_id":null,"docs":" The code of Keccak-512 hasher, 0x1d.\n","sig":null,"attributes":[{"value":"/ The code of Keccak-512 hasher, 0x1d.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":21191,"byte_end":21231,"line_start":366,"line_end":366,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":21345,"byte_end":21351,"line_start":369,"line_end":369,"column_start":12,"column_end":18},"name":"digest","qualname":"<Keccak512>::digest","value":"fn (data: &[u8]) -> Multihash","parent":null,"children":[],"decl_id":null,"docs":" Hash some input and return the keccak-512 digest.\n","sig":null,"attributes":[{"value":"/ Hash some input and return the keccak-512 digest.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":21280,"byte_end":21333,"line_start":368,"line_end":368,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":426},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":21539,"byte_end":21549,"line_start":377,"line_end":377,"column_start":12,"column_end":22},"name":"Blake2b256","qualname":"::hashes::Blake2b256","value":"","parent":null,"children":[],"decl_id":null,"docs":" The Blake2b-256 hasher.\n","sig":null,"attributes":[{"value":"/ The Blake2b-256 hasher.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":21476,"byte_end":21503,"line_start":375,"line_end":375,"column_start":1,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":178},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":21807,"byte_end":21811,"line_start":388,"line_end":388,"column_start":15,"column_end":19},"name":"CODE","qualname":"::hashes::Blake2b256::CODE","value":"Code","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" The code of Blake2b-256 hasher, 0xb220.\n","sig":null,"attributes":[{"value":"/ The code of Blake2b-256 hasher, 0xb220.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":21749,"byte_end":21792,"line_start":387,"line_end":387,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":21908,"byte_end":21914,"line_start":390,"line_end":390,"column_start":12,"column_end":18},"name":"digest","qualname":"<Blake2b256>::digest","value":"fn (data: &[u8]) -> Multihash","parent":null,"children":[],"decl_id":null,"docs":" Hash some input and return the blake2b-256 digest.\n","sig":null,"attributes":[{"value":"/ Hash some input and return the blake2b-256 digest.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":21842,"byte_end":21896,"line_start":389,"line_end":389,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":432},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":22201,"byte_end":22211,"line_start":402,"line_end":402,"column_start":12,"column_end":22},"name":"Blake2b512","qualname":"::hashes::Blake2b512","value":"","parent":null,"children":[],"decl_id":null,"docs":" The Blake2b-512 hasher.\n","sig":null,"attributes":[{"value":"/ The Blake2b-512 hasher.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":22138,"byte_end":22165,"line_start":400,"line_end":400,"column_start":1,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":184},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":22469,"byte_end":22473,"line_start":413,"line_end":413,"column_start":15,"column_end":19},"name":"CODE","qualname":"::hashes::Blake2b512::CODE","value":"Code","parent":{"krate":0,"index":183},"children":[],"decl_id":null,"docs":" The code of Blake2b-512 hasher, 0xb240.\n","sig":null,"attributes":[{"value":"/ The code of Blake2b-512 hasher, 0xb240.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":22411,"byte_end":22454,"line_start":412,"line_end":412,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":22570,"byte_end":22576,"line_start":415,"line_end":415,"column_start":12,"column_end":18},"name":"digest","qualname":"<Blake2b512>::digest","value":"fn (data: &[u8]) -> Multihash","parent":null,"children":[],"decl_id":null,"docs":" Hash some input and return the blake2b-512 digest.\n","sig":null,"attributes":[{"value":"/ Hash some input and return the blake2b-512 digest.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":22504,"byte_end":22558,"line_start":414,"line_end":414,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":438},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":22863,"byte_end":22873,"line_start":427,"line_end":427,"column_start":12,"column_end":22},"name":"Blake2s128","qualname":"::hashes::Blake2s128","value":"","parent":null,"children":[],"decl_id":null,"docs":" The Blake2s-128 hasher.\n","sig":null,"attributes":[{"value":"/ The Blake2s-128 hasher.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":22800,"byte_end":22827,"line_start":425,"line_end":425,"column_start":1,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":190},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":23131,"byte_end":23135,"line_start":438,"line_end":438,"column_start":15,"column_end":19},"name":"CODE","qualname":"::hashes::Blake2s128::CODE","value":"Code","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" The code of Blake2s-128 hasher, 0xb250.\n","sig":null,"attributes":[{"value":"/ The code of Blake2s-128 hasher, 0xb250.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":23073,"byte_end":23116,"line_start":437,"line_end":437,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":23232,"byte_end":23238,"line_start":440,"line_end":440,"column_start":12,"column_end":18},"name":"digest","qualname":"<Blake2s128>::digest","value":"fn (data: &[u8]) -> Multihash","parent":null,"children":[],"decl_id":null,"docs":" Hash some input and return the blake2s-128 digest.\n","sig":null,"attributes":[{"value":"/ Hash some input and return the blake2s-128 digest.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":23166,"byte_end":23220,"line_start":439,"line_end":439,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":444},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":23525,"byte_end":23535,"line_start":452,"line_end":452,"column_start":12,"column_end":22},"name":"Blake2s256","qualname":"::hashes::Blake2s256","value":"","parent":null,"children":[],"decl_id":null,"docs":" The Blake2s-256 hasher.\n","sig":null,"attributes":[{"value":"/ The Blake2s-256 hasher.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":23462,"byte_end":23489,"line_start":450,"line_end":450,"column_start":1,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":196},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":23793,"byte_end":23797,"line_start":463,"line_end":463,"column_start":15,"column_end":19},"name":"CODE","qualname":"::hashes::Blake2s256::CODE","value":"Code","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" The code of Blake2s-256 hasher, 0xb260.\n","sig":null,"attributes":[{"value":"/ The code of Blake2s-256 hasher, 0xb260.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":23735,"byte_end":23778,"line_start":462,"line_end":462,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":23894,"byte_end":23900,"line_start":465,"line_end":465,"column_start":12,"column_end":18},"name":"digest","qualname":"<Blake2s256>::digest","value":"fn (data: &[u8]) -> Multihash","parent":null,"children":[],"decl_id":null,"docs":" Hash some input and return the blake2s-256 digest.\n","sig":null,"attributes":[{"value":"/ Hash some input and return the blake2s-256 digest.","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":23828,"byte_end":23882,"line_start":464,"line_end":464,"column_start":5,"column_end":59}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":1055,"byte_end":1064,"line_start":18,"line_end":18,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":1226,"byte_end":1235,"line_start":24,"line_end":24,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":1354,"byte_end":1363,"line_start":30,"line_end":30,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":1388,"byte_end":1397,"line_start":32,"line_end":32,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":1509,"byte_end":1518,"line_start":38,"line_end":38,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":3441,"byte_end":3450,"line_start":109,"line_end":109,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":3538,"byte_end":3547,"line_start":115,"line_end":115,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":3670,"byte_end":3679,"line_start":123,"line_end":123,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":3788,"byte_end":3797,"line_start":129,"line_end":129,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":3934,"byte_end":3943,"line_start":135,"line_end":135,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":4114,"byte_end":4123,"line_start":143,"line_end":143,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":4208,"byte_end":4217,"line_start":149,"line_end":149,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":4339,"byte_end":4348,"line_start":155,"line_end":155,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":4619,"byte_end":4631,"line_start":167,"line_end":167,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":7273,"byte_end":7285,"line_start":254,"line_end":254,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":7417,"byte_end":7429,"line_start":260,"line_end":260,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":7560,"byte_end":7572,"line_start":268,"line_end":268,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/errors.rs","byte_start":9272,"byte_end":9283,"line_start":12,"line_end":12,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/errors.rs","byte_start":9686,"byte_end":9697,"line_start":25,"line_end":25,"column_start":23,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/errors.rs","byte_start":9989,"byte_end":10000,"line_start":36,"line_end":36,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/errors.rs","byte_start":10295,"byte_end":10306,"line_start":46,"line_end":46,"column_start":23,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/errors.rs","byte_start":10666,"byte_end":10682,"line_start":59,"line_end":59,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/errors.rs","byte_start":10825,"byte_end":10841,"line_start":66,"line_end":66,"column_start":23,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":12023,"byte_end":12027,"line_start":46,"line_end":46,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":14941,"byte_end":14949,"line_start":124,"line_end":124,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":15095,"byte_end":15103,"line_start":132,"line_end":132,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":15590,"byte_end":15594,"line_start":147,"line_end":147,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":15740,"byte_end":15744,"line_start":155,"line_end":155,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":16109,"byte_end":16117,"line_start":168,"line_end":168,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":16263,"byte_end":16271,"line_start":176,"line_end":176,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":16650,"byte_end":16658,"line_start":189,"line_end":189,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":16804,"byte_end":16812,"line_start":197,"line_end":197,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":17191,"byte_end":17199,"line_start":210,"line_end":210,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":17345,"byte_end":17353,"line_start":218,"line_end":218,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":17726,"byte_end":17734,"line_start":231,"line_end":231,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":17880,"byte_end":17888,"line_start":239,"line_end":239,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":18269,"byte_end":18277,"line_start":252,"line_end":252,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":18423,"byte_end":18431,"line_start":260,"line_end":260,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":18812,"byte_end":18820,"line_start":273,"line_end":273,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":18966,"byte_end":18974,"line_start":281,"line_end":281,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":19358,"byte_end":19367,"line_start":294,"line_end":294,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":19513,"byte_end":19522,"line_start":302,"line_end":302,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":19912,"byte_end":19921,"line_start":315,"line_end":315,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":20067,"byte_end":20076,"line_start":323,"line_end":323,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":20466,"byte_end":20475,"line_start":336,"line_end":336,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":20621,"byte_end":20630,"line_start":344,"line_end":344,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":21020,"byte_end":21029,"line_start":357,"line_end":357,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":21175,"byte_end":21184,"line_start":365,"line_end":365,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":21576,"byte_end":21586,"line_start":378,"line_end":378,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":21732,"byte_end":21742,"line_start":386,"line_end":386,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":22238,"byte_end":22248,"line_start":403,"line_end":403,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":22394,"byte_end":22404,"line_start":411,"line_end":411,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":22900,"byte_end":22910,"line_start":428,"line_end":428,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":23056,"byte_end":23066,"line_start":436,"line_end":436,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":23562,"byte_end":23572,"line_start":453,"line_end":453,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":23718,"byte_end":23728,"line_start":461,"line_end":461,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/storage.rs","byte_start":24979,"byte_end":24986,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":1055,"byte_end":1064,"line_start":18,"line_end":18,"column_start":21,"column_end":30},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":6068}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":1226,"byte_end":1235,"line_start":24,"line_end":24,"column_start":20,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1634}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":1354,"byte_end":1363,"line_start":30,"line_end":30,"column_start":13,"column_end":22},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1639}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":1388,"byte_end":1397,"line_start":32,"line_end":32,"column_start":21,"column_end":30},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":6256}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":1509,"byte_end":1518,"line_start":38,"line_end":38,"column_start":6,"column_end":15},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":3441,"byte_end":3450,"line_start":109,"line_end":109,"column_start":22,"column_end":31},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1816}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":3538,"byte_end":3547,"line_start":115,"line_end":115,"column_start":21,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":2073}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":3670,"byte_end":3679,"line_start":123,"line_end":123,"column_start":23,"column_end":32},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1584}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":3788,"byte_end":3797,"line_start":129,"line_end":129,"column_start":42,"column_end":51},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1634}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":3934,"byte_end":3943,"line_start":135,"line_end":135,"column_start":27,"column_end":36},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1832}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":4114,"byte_end":4123,"line_start":143,"line_end":143,"column_start":24,"column_end":33},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1822}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":4208,"byte_end":4217,"line_start":149,"line_end":149,"column_start":21,"column_end":30},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1671}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":4339,"byte_end":4348,"line_start":155,"line_end":155,"column_start":14,"column_end":23},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1660}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":4619,"byte_end":4631,"line_start":167,"line_end":167,"column_start":10,"column_end":22},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":7273,"byte_end":7285,"line_start":254,"line_end":254,"column_start":35,"column_end":47},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":224},"to":{"krate":2,"index":1634}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":7417,"byte_end":7429,"line_start":260,"line_end":260,"column_start":25,"column_end":37},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":224},"to":{"krate":2,"index":2073}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/digests.rs","byte_start":7560,"byte_end":7572,"line_start":268,"line_end":268,"column_start":28,"column_end":40},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":224},"to":{"krate":2,"index":1822}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/errors.rs","byte_start":9272,"byte_end":9283,"line_start":12,"line_end":12,"column_start":23,"column_end":34},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":260},"to":{"krate":2,"index":6073}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/errors.rs","byte_start":9686,"byte_end":9697,"line_start":25,"line_end":25,"column_start":23,"column_end":34},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":260},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/errors.rs","byte_start":9989,"byte_end":10000,"line_start":36,"line_end":36,"column_start":23,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":276},"to":{"krate":2,"index":6073}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/errors.rs","byte_start":10295,"byte_end":10306,"line_start":46,"line_end":46,"column_start":23,"column_end":34},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":276},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/errors.rs","byte_start":10666,"byte_end":10682,"line_start":59,"line_end":59,"column_start":23,"column_end":39},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":292},"to":{"krate":2,"index":6073}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/errors.rs","byte_start":10825,"byte_end":10841,"line_start":66,"line_end":66,"column_start":23,"column_end":39},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":292},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":12023,"byte_end":12027,"line_start":46,"line_end":46,"column_start":6,"column_end":10},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":306},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":14941,"byte_end":14949,"line_start":124,"line_end":124,"column_start":26,"column_end":34},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":354},"to":{"krate":0,"index":73}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":15095,"byte_end":15103,"line_start":132,"line_end":132,"column_start":6,"column_end":14},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":354},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":15590,"byte_end":15594,"line_start":147,"line_end":147,"column_start":26,"column_end":30},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":360},"to":{"krate":0,"index":73}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":15740,"byte_end":15744,"line_start":155,"line_end":155,"column_start":6,"column_end":10},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":16109,"byte_end":16117,"line_start":168,"line_end":168,"column_start":26,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":366},"to":{"krate":0,"index":73}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":16263,"byte_end":16271,"line_start":176,"line_end":176,"column_start":6,"column_end":14},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":16650,"byte_end":16658,"line_start":189,"line_end":189,"column_start":26,"column_end":34},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":372},"to":{"krate":0,"index":73}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":16804,"byte_end":16812,"line_start":197,"line_end":197,"column_start":6,"column_end":14},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":372},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":17191,"byte_end":17199,"line_start":210,"line_end":210,"column_start":26,"column_end":34},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":378},"to":{"krate":0,"index":73}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":17345,"byte_end":17353,"line_start":218,"line_end":218,"column_start":6,"column_end":14},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":17726,"byte_end":17734,"line_start":231,"line_end":231,"column_start":26,"column_end":34},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":384},"to":{"krate":0,"index":73}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":17880,"byte_end":17888,"line_start":239,"line_end":239,"column_start":6,"column_end":14},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":384},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":18269,"byte_end":18277,"line_start":252,"line_end":252,"column_start":26,"column_end":34},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":390},"to":{"krate":0,"index":73}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":18423,"byte_end":18431,"line_start":260,"line_end":260,"column_start":6,"column_end":14},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":18812,"byte_end":18820,"line_start":273,"line_end":273,"column_start":26,"column_end":34},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":396},"to":{"krate":0,"index":73}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":18966,"byte_end":18974,"line_start":281,"line_end":281,"column_start":6,"column_end":14},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":396},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":19358,"byte_end":19367,"line_start":294,"line_end":294,"column_start":26,"column_end":35},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":402},"to":{"krate":0,"index":73}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":19513,"byte_end":19522,"line_start":302,"line_end":302,"column_start":6,"column_end":15},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":19912,"byte_end":19921,"line_start":315,"line_end":315,"column_start":26,"column_end":35},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":408},"to":{"krate":0,"index":73}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":20067,"byte_end":20076,"line_start":323,"line_end":323,"column_start":6,"column_end":15},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":408},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":20466,"byte_end":20475,"line_start":336,"line_end":336,"column_start":26,"column_end":35},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":414},"to":{"krate":0,"index":73}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":20621,"byte_end":20630,"line_start":344,"line_end":344,"column_start":6,"column_end":15},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":414},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":21020,"byte_end":21029,"line_start":357,"line_end":357,"column_start":26,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":420},"to":{"krate":0,"index":73}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":21175,"byte_end":21184,"line_start":365,"line_end":365,"column_start":6,"column_end":15},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":21576,"byte_end":21586,"line_start":378,"line_end":378,"column_start":26,"column_end":36},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":426},"to":{"krate":0,"index":73}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":21732,"byte_end":21742,"line_start":386,"line_end":386,"column_start":6,"column_end":16},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":22238,"byte_end":22248,"line_start":403,"line_end":403,"column_start":26,"column_end":36},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":432},"to":{"krate":0,"index":73}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":22394,"byte_end":22404,"line_start":411,"line_end":411,"column_start":6,"column_end":16},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":22900,"byte_end":22910,"line_start":428,"line_end":428,"column_start":26,"column_end":36},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":438},"to":{"krate":0,"index":73}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":23056,"byte_end":23066,"line_start":436,"line_end":436,"column_start":6,"column_end":16},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":438},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":23562,"byte_end":23572,"line_start":453,"line_end":453,"column_start":26,"column_end":36},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":444},"to":{"krate":0,"index":73}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/hashes.rs","byte_start":23718,"byte_end":23728,"line_start":461,"line_end":461,"column_start":6,"column_end":16},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":444},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/aidanm/.cargo/registry/src/github.com-1ecc6299db9ec823/multihash-0.10.1/src/storage.rs","byte_start":24979,"byte_end":24986,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":450},"to":{"krate":4294967295,"index":4294967295}}]}